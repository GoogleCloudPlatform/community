

## Expose the grafana service to be accessed from outside the cluster (LoadBalancer service).
## or access it from within the cluster (ClusterIP service). Set the service type and the port to serve it.
## ref: http://kubernetes.io/docs/user-guide/services/
##
prometheus:
  pushgateway:
      create: false
  server:
    persistentVolume:
      size: 750Gi
    retention: 10d
    global:
      evaluation_interval: 1m
      scrape_interval: 1m
      scrape_timeout: 30s
    resources:
      limits:
        memory: "8500Mi"
      requests:
        memory: "8500Mi"
  serverFiles:
    rules:
      groups:
        - name: example
          rules:
          - record: test_metric
            expr: device_boot_time * on (instance) group_left(region) device_info
    alerts:
      groups:
        - name: device_alerts
          rules:
          - alert: LidLeftOpen
            expr: (time() - (lid_open_start_time *  lid_open_status)) > 900 and (time() - (lid_open_start_time *  lid_open_status)) < 9000
            for: 30s
            labels:
              severity: page
              system: mechanical
            annotations:
              summary: "Lid open on {{ $labels.instance }}"
              description: "Lid has remained open for more than 15 minutes on {{ $labels.instance }}"
          - alert: DeviceRebooting
            expr: changes(device_boot_time[1h]) > 20
            for: 2m
            labels:
              severity: debug
              system: software
            annotations:
              summary: "{{ $labels.instance }} rebooting"
              description: "{{ $labels.instance }} has been rebooting more than 20 times an hour"
    prometheus.yml:
      scrape_configs:
        - job_name: prometheus
          static_configs:
            - targets:
              - localhost:9090
        - job_name: 'kubernetes-service-endpoints'
          honor_labels: true

          kubernetes_sd_configs:
            - role: endpoints

          relabel_configs:
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
              action: replace
              target_label: __scheme__
              regex: (https?)
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
              action: replace
              target_label: __address__
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
            - action: labelmap
              regex: __meta_kubernetes_service_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: kubernetes_namespace
            - source_labels: [__meta_kubernetes_service_name]
              action: replace
              target_label: kubernetes_name
  alertmanagerFiles:
    alertmanager.yml:
      global: {}
      receivers:
        - name: default-receiver
          webhook_configs:
          - url: 'http://example.com/willbe404/'
      route:
        group_wait: 10s
        group_interval: 5m
        receiver: default-receiver
        repeat_interval: 3h
grafana:
  service:
    type: LoadBalancer
    port: 80
    annotations:
      cloud.google.com/load-balancer-type: "Internal"
    labels: {}
  persistence:
    enabled: true
    size: 10Gi
    accessModes:
      - ReadWriteOnce
    # storageClassName: default
    # annotations: {}
    # subPath: ""
    # existingClaim:
  plugins:
    - natel-discrete-panel
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        # Note this requires the helm release to be named "iotmonitor"
        # see https://github.com/helm/helm/pull/3252
        url: "http://iotmonitor-prometheus-server"
        access: proxy
        isDefault: true
      - name: Stackdriver
        type: stackdriver
        orgId: 1
        readOnly: false
        editable: true
        access: proxy
        jsonData:
          tokenUri: https://oauth2.googleapis.com/token
          clientEmail: grafana-reader@<project-id>.iam.gserviceaccount.com
          defaultProject: iot-monitoring-demo
        secureJsonData:
          privateKey: |
            -----BEGIN PRIVATE KEY-----
            MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCoktHTd2/6Xe8r
            Hib/5r7cdf9Gdssx8vd/Ca5rRFReFBcMWmFqo+yzclDYU0H+Ef7G6PJQCGbphJJg
            BBM2iWn7toWvrU0uWMoz+XM0aF9BhmVhK7K7vhv5IyG9p0gkN1H+V4KQRfoGF1hQ
            3aZ85/FhHnRhr0gkncacl5PFRfwD/UUD9aUGxNoo1IobLIy6ADFsaMwJImZSrgpx
            eZlDwrJiIIAB1oC89I3dtME6AgJmYDmAqJAia407JHDpL2yRwn8ltW1c7YcqrGrx
            ocBsenKKf6iSV8kENrmJuw+E/4M//cBECG8TJTQNhGPwaeiwPAk+9ha8GqXFY3Os
            xJP1vwyNAgMBAAECggEAD8s7ugSfevVolmFblY/Ms5KhoXw5Uvt46U/ipd2vyuW2

            ...

            I7ysqWrcq7iKLqYoIF76wrz4QcXxq5EG8uSchase903WdxmcixY51ctTBQKBgHaO
            9qJjAPeHt9lfJIO62y3Ze7X/3Sz35v1Q4jBjRRtY6fyHAHCEKnFodjl1GFVkQHZ4
            zN9dd2mMGwUrVu3ibFCn8nvmmX6nb/OJwqS686AamUoMxY4QGm3aqiIZKTJP47mz
            G8bZ145yudL1xRo/0T3xJEa5jwniq1rng/j85KmBAoGAUi6MWab01sWD0e++MCeb
            homO8poRLI41z24ZqRNnTjSvw+EKlsKtb2o5/Uc1SGo9JmUBWCw1BA4h8aPH1mAS
            CUBPnsAX/tj7ssNeRmgQXtIbiPq14PHDMYDgkrEjsQIRg6lDI5brac7RkhK0imJ3
            qFISpqECno3HUbfpP46YZ9s=
            -----END PRIVATE KEY-----
  grafana.ini:
    auth.google:
      enabled: true
      client_id: -------------------------.apps.googleusercontent.com
      client_secret:  -------------------
      scopes: https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
      auth_url: https://accounts.google.com/o/oauth2/auth
      token_url: https://accounts.google.com/o/oauth2/token
      # allowed_domains: <your GSuite domain>.com
      allow_sign_up: true
    users:
      auto_assign_org_role: Editor
    server:
      root_url: https://iot-monitoring-demo.appspot.com/
