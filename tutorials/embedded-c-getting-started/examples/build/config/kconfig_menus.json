[
    {
        "children": [], 
        "depends_on": null, 
        "help": null, 
        "id": "IDF_TARGET_ESP32", 
        "name": "IDF_TARGET_ESP32", 
        "range": null, 
        "title": null, 
        "type": "bool"
    }, 
    {
        "children": [], 
        "depends_on": null, 
        "help": null, 
        "id": "IDF_CMAKE", 
        "name": "IDF_CMAKE", 
        "range": null, 
        "title": null, 
        "type": "bool"
    }, 
    {
        "children": [], 
        "depends_on": null, 
        "help": null, 
        "id": "IDF_TARGET_ENV", 
        "name": "IDF_TARGET_ENV", 
        "range": null, 
        "title": null, 
        "type": "string"
    }, 
    {
        "children": [], 
        "depends_on": null, 
        "help": null, 
        "id": "IDF_TARGET", 
        "name": "IDF_TARGET", 
        "range": null, 
        "title": null, 
        "type": "string"
    }, 
    {
        "children": [], 
        "depends_on": null, 
        "help": null, 
        "id": "IDF_FIRMWARE_CHIP_ID", 
        "name": "IDF_FIRMWARE_CHIP_ID", 
        "range": null, 
        "title": null, 
        "type": "hex"
    }, 
    {
        "children": [
            {
                "children": [], 
                "depends_on": null, 
                "help": "The prefix/path that is used to call the toolchain. The default setting assumes\na crosstool-ng gcc setup that is in your PATH.\n", 
                "id": "SDK_TOOLPREFIX", 
                "name": "SDK_TOOLPREFIX", 
                "range": null, 
                "title": "Compiler toolchain path/prefix", 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": "!IDF_CMAKE", 
                "help": "The executable name/path that is used to run python.\n\n(Note: This option is used with the legacy GNU Make build system only.)\n", 
                "id": "SDK_PYTHON", 
                "name": "SDK_PYTHON", 
                "range": null, 
                "title": "Python interpreter", 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": "!IDF_CMAKE", 
                "help": "Adds --warn-undefined-variables to MAKEFLAGS. This causes make to\nprint a warning any time an undefined variable is referenced.\n\nThis option helps find places where a variable reference is misspelled\nor otherwise missing, but it can be unwanted if you have Makefiles which\ndepend on undefined variables expanding to an empty string.\n\n(Note: this option is used with the legacy GNU Make build system only.)\n", 
                "id": "SDK_MAKE_WARN_UNDEFINED_VARIABLES", 
                "name": "SDK_MAKE_WARN_UNDEFINED_VARIABLES", 
                "range": null, 
                "title": "'make' warns on undefined variables", 
                "type": "bool"
            }
        ], 
        "depends_on": null, 
        "id": "sdk-tool-configuration", 
        "title": "SDK tool configuration", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [], 
                "depends_on": null, 
                "help": "If set, then the app will be built with the current time/date stamp. It is stored in the app description\nstructure. If not set, time/date stamp will be excluded from app image. This can be useful for getting the\nsame binary image files made from the same source, but at different times.\n", 
                "id": "APP_COMPILE_TIME_DATE", 
                "name": "APP_COMPILE_TIME_DATE", 
                "range": null, 
                "title": "Use time/date stamp for app", 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "The PROJECT_VER variable from the build system will not affect the firmware image.\nThis value will not be contained in the esp_app_desc structure.\n", 
                "id": "APP_EXCLUDE_PROJECT_VER_VAR", 
                "name": "APP_EXCLUDE_PROJECT_VER_VAR", 
                "range": null, 
                "title": "Exclude PROJECT_VER from firmware image", 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "The PROJECT_NAME variable from the build system will not affect the firmware image.\nThis value will not be contained in the esp_app_desc structure.\n", 
                "id": "APP_EXCLUDE_PROJECT_NAME_VAR", 
                "name": "APP_EXCLUDE_PROJECT_NAME_VAR", 
                "range": null, 
                "title": "Exclude PROJECT_NAME from firmware image", 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "At startup, the app will read this many hex characters from the embedded APP ELF SHA-256 hash value\nand store it in static RAM. This ensures the app ELF SHA-256 value is always available\nif it needs to be printed by the panic handler code.\nChanging this value will change the size of a static buffer, in bytes.\n", 
                "id": "APP_RETRIEVE_LEN_ELF_SHA", 
                "name": "APP_RETRIEVE_LEN_ELF_SHA", 
                "range": [
                    8, 
                    64
                ], 
                "title": "The length of APP ELF SHA is stored in RAM(chars)", 
                "type": "int"
            }
        ], 
        "depends_on": null, 
        "id": "application-manager", 
        "title": "Application manager", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice BOOTLOADER_LOG_LEVEL>", 
                        "help": null, 
                        "id": "BOOTLOADER_LOG_LEVEL_NONE", 
                        "name": "BOOTLOADER_LOG_LEVEL_NONE", 
                        "range": null, 
                        "title": "No output", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice BOOTLOADER_LOG_LEVEL>", 
                        "help": null, 
                        "id": "BOOTLOADER_LOG_LEVEL_ERROR", 
                        "name": "BOOTLOADER_LOG_LEVEL_ERROR", 
                        "range": null, 
                        "title": "Error", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice BOOTLOADER_LOG_LEVEL>", 
                        "help": null, 
                        "id": "BOOTLOADER_LOG_LEVEL_WARN", 
                        "name": "BOOTLOADER_LOG_LEVEL_WARN", 
                        "range": null, 
                        "title": "Warning", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice BOOTLOADER_LOG_LEVEL>", 
                        "help": null, 
                        "id": "BOOTLOADER_LOG_LEVEL_INFO", 
                        "name": "BOOTLOADER_LOG_LEVEL_INFO", 
                        "range": null, 
                        "title": "Info", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice BOOTLOADER_LOG_LEVEL>", 
                        "help": null, 
                        "id": "BOOTLOADER_LOG_LEVEL_DEBUG", 
                        "name": "BOOTLOADER_LOG_LEVEL_DEBUG", 
                        "range": null, 
                        "title": "Debug", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice BOOTLOADER_LOG_LEVEL>", 
                        "help": null, 
                        "id": "BOOTLOADER_LOG_LEVEL_VERBOSE", 
                        "name": "BOOTLOADER_LOG_LEVEL_VERBOSE", 
                        "range": null, 
                        "title": "Verbose", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Specify how much output to see in bootloader logs.\n", 
                "id": "bootloader-config-bootloader-log-verbosity", 
                "name": "BOOTLOADER_LOG_LEVEL", 
                "title": "Bootloader log verbosity", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "BOOTLOADER_LOG_LEVEL", 
                "name": "BOOTLOADER_LOG_LEVEL", 
                "range": null, 
                "title": null, 
                "type": "int"
            }, 
            {
                "children": [], 
                "depends_on": "ESPTOOLPY_FLASHMODE_QIO || ESPTOOLPY_FLASHMODE_QOUT", 
                "help": "This value is ignored unless flash mode is set to QIO or QOUT *and* the SPI flash pins have been\noverriden by setting the eFuses SPI_PAD_CONFIG_xxx.\n\nWhen this is the case, the eFuse config only defines 3 of the 4 Quad I/O data pins. The WP pin (aka ESP32\npin \"SD_DATA_3\" or SPI flash pin \"IO2\") is not specified in eFuse. That pin number is compiled into the\nbootloader instead.\n\nThe default value (GPIO 7) is correct for WP pin on ESP32-D2WD integrated flash.\n", 
                "id": "BOOTLOADER_SPI_WP_PIN", 
                "name": "BOOTLOADER_SPI_WP_PIN", 
                "range": null, 
                "title": "SPI Flash WP Pin when customising pins via eFuse (read help)", 
                "type": "int"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "!ESPTOOLPY_FLASHFREQ_80M && <choice BOOTLOADER_VDDSDIO_BOOST>", 
                        "help": null, 
                        "id": "BOOTLOADER_VDDSDIO_BOOST_1_8V", 
                        "name": "BOOTLOADER_VDDSDIO_BOOST_1_8V", 
                        "range": null, 
                        "title": "1.8V", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice BOOTLOADER_VDDSDIO_BOOST>", 
                        "help": null, 
                        "id": "BOOTLOADER_VDDSDIO_BOOST_1_9V", 
                        "name": "BOOTLOADER_VDDSDIO_BOOST_1_9V", 
                        "range": null, 
                        "title": "1.9V", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "If this option is enabled, and VDDSDIO LDO is set to 1.8V (using eFuse\nor MTDI bootstrapping pin), bootloader will change LDO settings to\noutput 1.9V instead. This helps prevent flash chip from browning out\nduring flash programming operations.\n\nThis option has no effect if VDDSDIO is set to 3.3V, or if the internal\nVDDSDIO regulator is disabled via eFuse.\n", 
                "id": "bootloader-config-vddsdio-ldo-voltage", 
                "name": "BOOTLOADER_VDDSDIO_BOOST", 
                "title": "VDDSDIO LDO voltage", 
                "type": "choice"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "BOOTLOADER_FACTORY_RESET", 
                        "help": "The selected GPIO will be configured as an input with internal pull-up enabled.\nTo trigger a factory reset, this GPIO must be pulled low on reset.\nNote that GPIO34-39 do not have an internal pullup and an external one must be provided.\n", 
                        "id": "BOOTLOADER_NUM_PIN_FACTORY_RESET", 
                        "name": "BOOTLOADER_NUM_PIN_FACTORY_RESET", 
                        "range": null, 
                        "title": "Number of the GPIO input for factory reset", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BOOTLOADER_FACTORY_RESET", 
                        "help": "The device will boot from \"factory\" partition (or OTA slot 0 if no factory partition is present) after a\nfactory reset.\n", 
                        "id": "BOOTLOADER_OTA_DATA_ERASE", 
                        "name": "BOOTLOADER_OTA_DATA_ERASE", 
                        "range": null, 
                        "title": "Clear OTA data on factory reset (select factory partition)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BOOTLOADER_FACTORY_RESET", 
                        "help": "Allows customers to select which data partitions will be erased while factory reset.\n\nSpecify the names of partitions as a comma-delimited with optional spaces for readability. (Like this:\n\"nvs, phy_init, ...\")\nMake sure that the name specified in the partition table and here are the same.\nPartitions of type \"app\" cannot be specified here.\n", 
                        "id": "BOOTLOADER_DATA_FACTORY_RESET", 
                        "name": "BOOTLOADER_DATA_FACTORY_RESET", 
                        "range": null, 
                        "title": "Comma-separated names of partitions to clear on factory reset", 
                        "type": "string"
                    }
                ], 
                "depends_on": null, 
                "help": "Allows to reset the device to factory settings:\n- clear one or more data partitions;\n- boot from \"factory\" partition.\nThe factory reset will occur if there is a GPIO input pulled low while device starts up.\nSee settings below.\n", 
                "id": "BOOTLOADER_FACTORY_RESET", 
                "name": "BOOTLOADER_FACTORY_RESET", 
                "range": null, 
                "title": "GPIO triggers factory reset", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "BOOTLOADER_APP_TEST", 
                        "help": "The selected GPIO will be configured as an input with internal pull-up enabled.\nTo trigger a test app, this GPIO must be pulled low on reset.\nAfter the GPIO input is deactivated and the device reboots, the old application will boot.\n(factory or OTA[x]).\nNote that GPIO34-39 do not have an internal pullup and an external one must be provided.\n", 
                        "id": "BOOTLOADER_NUM_PIN_APP_TEST", 
                        "name": "BOOTLOADER_NUM_PIN_APP_TEST", 
                        "range": null, 
                        "title": "Number of the GPIO input to boot TEST partition", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "help": "Allows to run the test app from \"TEST\" partition.\nA boot from \"test\" partition will occur if there is a GPIO input pulled low while device starts up.\nSee settings below.\n", 
                "id": "BOOTLOADER_APP_TEST", 
                "name": "BOOTLOADER_APP_TEST", 
                "range": null, 
                "title": "GPIO triggers boot from test app partition", 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": "BOOTLOADER_FACTORY_RESET || BOOTLOADER_APP_TEST", 
                "help": "The GPIO must be held low continuously for this period of time after reset\nbefore a factory reset or test partition boot (as applicable) is performed.\n", 
                "id": "BOOTLOADER_HOLD_TIME_GPIO", 
                "name": "BOOTLOADER_HOLD_TIME_GPIO", 
                "range": null, 
                "title": "Hold time of GPIO for reset/test mode (seconds)", 
                "type": "int"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "BOOTLOADER_WDT_ENABLE", 
                        "help": "If it is set, the client must itself reset or disable rtc_wdt in their code (app_main()).\nOtherwise rtc_wdt will be disabled before calling app_main function.\nUse function rtc_wdt_feed() for resetting counter of rtc_wdt.\nUse function rtc_wdt_disable() for disabling rtc_wdt.\n", 
                        "id": "BOOTLOADER_WDT_DISABLE_IN_USER_CODE", 
                        "name": "BOOTLOADER_WDT_DISABLE_IN_USER_CODE", 
                        "range": null, 
                        "title": "Allows RTC watchdog disable in user code", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BOOTLOADER_WDT_ENABLE", 
                        "help": "Verify that this parameter is correct and more then the execution time.\nPay attention to options such as reset to factory, trigger test partition and encryption on boot\n- these options can increase the execution time.\nNote: RTC_WDT will reset while encryption operations will be performed.\n", 
                        "id": "BOOTLOADER_WDT_TIME_MS", 
                        "name": "BOOTLOADER_WDT_TIME_MS", 
                        "range": [
                            0, 
                            120000
                        ], 
                        "title": "Timeout for RTC watchdog (ms)", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "help": "Tracks the execution time of startup code.\nIf the execution time is exceeded, the RTC_WDT will restart system.\nIt is also useful to prevent a lock up in start code caused by an unstable power source.\nNOTE: Tracks the execution time starts from the bootloader code - re-set timeout, while selecting the\nsource for slow_clk - and ends calling app_main.\nRe-set timeout is needed due to WDT uses a SLOW_CLK clock source. After changing a frequency slow_clk a\ntime of WDT needs to re-set for new frequency.\nslow_clk depends on ESP32_RTC_CLK_SRC (INTERNAL_RC or EXTERNAL_CRYSTAL).\n", 
                "id": "BOOTLOADER_WDT_ENABLE", 
                "name": "BOOTLOADER_WDT_ENABLE", 
                "range": null, 
                "title": "Use RTC watchdog in start code", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "BOOTLOADER_APP_ANTI_ROLLBACK", 
                                "help": "The secure version is the sequence number stored in the header of each firmware.\nThe security version is set in the bootloader, version is recorded in the eFuse field\nas the number of set ones. The allocated number of bits in the efuse field\nfor storing the security version is limited (see BOOTLOADER_APP_SEC_VER_SIZE_EFUSE_FIELD option).\n\nBootloader: When bootloader selects an app to boot, an app is selected that has\na security version greater or equal that recorded in eFuse field.\nThe app is booted with a higher (or equal) secure version.\n\nThe security version is worth increasing if in previous versions there is\na significant vulnerability and their use is not acceptable.\n\nYour partition table should has a scheme with ota_0 + ota_1 (without factory).\n", 
                                "id": "BOOTLOADER_APP_SECURE_VERSION", 
                                "name": "BOOTLOADER_APP_SECURE_VERSION", 
                                "range": null, 
                                "title": "eFuse secure version of app", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BOOTLOADER_APP_ANTI_ROLLBACK", 
                                "help": "The size of the efuse secure version field. Its length is limited to 32 bits.\nThis determines how many times the security version can be increased.\n", 
                                "id": "BOOTLOADER_APP_SEC_VER_SIZE_EFUSE_FIELD", 
                                "name": "BOOTLOADER_APP_SEC_VER_SIZE_EFUSE_FIELD", 
                                "range": null, 
                                "title": "Size of the efuse secure version field", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BOOTLOADER_APP_ANTI_ROLLBACK", 
                                "help": "This option allow emulate read/write operations with efuse secure version.\nIt allow to test anti-rollback implemention without permanent write eFuse bits.\nIn partition table should be exist this partition `emul_efuse, data, 5, , 0x2000`.\n", 
                                "id": "BOOTLOADER_EFUSE_SECURE_VERSION_EMULATE", 
                                "name": "BOOTLOADER_EFUSE_SECURE_VERSION_EMULATE", 
                                "range": null, 
                                "title": "Emulate operations with efuse secure version(only test)", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "BOOTLOADER_APP_ROLLBACK_ENABLE", 
                        "help": "This option prevents rollback to previous firmware/application image with lower security version.\n", 
                        "id": "BOOTLOADER_APP_ANTI_ROLLBACK", 
                        "name": "BOOTLOADER_APP_ANTI_ROLLBACK", 
                        "range": null, 
                        "title": "Enable app anti-rollback support", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "After updating the app, the bootloader runs a new app with the \"ESP_OTA_IMG_PENDING_VERIFY\" state set.\nThis state prevents the re-run of this app. After the first boot of the new app in the user code, the\nfunction should be called to confirm the operability of the app or vice versa about its non-operability.\nIf the app is working, then it is marked as valid. Otherwise, it is marked as not valid and rolls back to\nthe previous working app. A reboot is performed, and the app is booted before the software update.\nNote: If during the first boot a new app the power goes out or the WDT works, then roll back will happen.\nRollback is possible only between the apps with the same security versions.\n", 
                "id": "BOOTLOADER_APP_ROLLBACK_ENABLE", 
                "name": "BOOTLOADER_APP_ROLLBACK_ENABLE", 
                "range": null, 
                "title": "Enable app rollback support", 
                "type": "bool"
            }
        ], 
        "depends_on": null, 
        "id": "bootloader-config", 
        "title": "Bootloader config", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [], 
                "depends_on": "SECURE_BOOT_ENABLED || SECURE_SIGNED_ON_BOOT_NO_SECURE_BOOT", 
                "help": null, 
                "id": "SECURE_SIGNED_ON_BOOT", 
                "name": "SECURE_SIGNED_ON_BOOT", 
                "range": null, 
                "title": null, 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": "SECURE_BOOT_ENABLED || SECURE_SIGNED_ON_UPDATE_NO_SECURE_BOOT", 
                "help": null, 
                "id": "SECURE_SIGNED_ON_UPDATE", 
                "name": "SECURE_SIGNED_ON_UPDATE", 
                "range": null, 
                "title": null, 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": "SECURE_SIGNED_ON_BOOT || SECURE_SIGNED_ON_UPDATE", 
                "help": null, 
                "id": "SECURE_SIGNED_APPS", 
                "name": "SECURE_SIGNED_APPS", 
                "range": null, 
                "title": null, 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "SECURE_SIGNED_APPS_NO_SECURE_BOOT", 
                        "help": "If this option is set, the bootloader will be compiled with code to verify that an app is signed before\nbooting it.\n\nIf hardware secure boot is enabled, this option is always enabled and cannot be disabled.\nIf hardware secure boot is not enabled, this option doesn't add significant security by itself so most\nusers will want to leave it disabled.\n", 
                        "id": "SECURE_SIGNED_ON_BOOT_NO_SECURE_BOOT", 
                        "name": "SECURE_SIGNED_ON_BOOT_NO_SECURE_BOOT", 
                        "range": null, 
                        "title": "Bootloader verifies app signatures", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "SECURE_SIGNED_APPS_NO_SECURE_BOOT", 
                        "help": "If this option is set, any OTA updated apps will have the signature verified before being considered valid.\n\nWhen enabled, the signature is automatically checked whenever the esp_ota_ops.h APIs are used for OTA\nupdates, or esp_image_format.h APIs are used to verify apps.\n\nIf hardware secure boot is enabled, this option is always enabled and cannot be disabled.\nIf hardware secure boot is not enabled, this option still adds significant security against network-based\nattackers by preventing spoofing of OTA updates.\n", 
                        "id": "SECURE_SIGNED_ON_UPDATE_NO_SECURE_BOOT", 
                        "name": "SECURE_SIGNED_ON_UPDATE_NO_SECURE_BOOT", 
                        "range": null, 
                        "title": "Verify app signature on update", 
                        "type": "bool"
                    }
                ], 
                "depends_on": "!SECURE_BOOT_ENABLED", 
                "help": "Require apps to be signed to verify their integrity.\n\nThis option uses the same app signature scheme as hardware secure boot, but unlike hardware secure boot it\ndoes not prevent the bootloader from being physically updated. This means that the device can be secured\nagainst remote network access, but not physical access. Compared to using hardware Secure Boot this option\nis much simpler to implement.\n", 
                "id": "SECURE_SIGNED_APPS_NO_SECURE_BOOT", 
                "name": "SECURE_SIGNED_APPS_NO_SECURE_BOOT", 
                "range": null, 
                "title": "Require signed app images", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice SECURE_BOOTLOADER_MODE>", 
                                "help": "On first boot, the bootloader will generate a key which is not readable externally or by software. A\ndigest is generated from the bootloader image itself. This digest will be verified on each subsequent\nboot.\n\nEnabling this option means that the bootloader cannot be changed after the first time it is booted.\n", 
                                "id": "SECURE_BOOTLOADER_ONE_TIME_FLASH", 
                                "name": "SECURE_BOOTLOADER_ONE_TIME_FLASH", 
                                "range": null, 
                                "title": "One-time flash", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice SECURE_BOOTLOADER_MODE>", 
                                "help": "Generate a reusable secure bootloader key, derived (via SHA-256) from the secure boot signing key.\n\nThis allows the secure bootloader to be re-flashed by anyone with access to the secure boot signing\nkey.\n\nThis option is less secure than one-time flash, because a leak of the digest key from one device\nallows reflashing of any device that uses it.\n", 
                                "id": "SECURE_BOOTLOADER_REFLASHABLE", 
                                "name": "SECURE_BOOTLOADER_REFLASHABLE", 
                                "range": null, 
                                "title": "Reflashable", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "SECURE_BOOT_ENABLED", 
                        "help": null, 
                        "id": "security-features-enable-hardware-secure-boot-in-bootloader-read-docs-first--secure-bootloader-mode", 
                        "name": "SECURE_BOOTLOADER_MODE", 
                        "title": "Secure bootloader mode", 
                        "type": "choice"
                    }
                ], 
                "depends_on": null, 
                "help": "Build a bootloader which enables secure boot on first boot.\n\nOnce enabled, secure boot will not boot a modified bootloader. The bootloader will only load a partition\ntable or boot an app if the data has a verified digital signature. There are implications for reflashing\nupdated apps once secure boot is enabled.\n\nWhen enabling secure boot, JTAG and ROM BASIC Interpreter are permanently disabled by default.\n\nRefer to https://docs.espressif.com/projects/esp-idf/en/latest/security/secure-boot.html before enabling.\n", 
                "id": "SECURE_BOOT_ENABLED", 
                "name": "SECURE_BOOT_ENABLED", 
                "range": null, 
                "title": "Enable hardware secure boot in bootloader (READ DOCS FIRST)", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "SECURE_BOOT_BUILD_SIGNED_BINARIES", 
                        "help": "Path to the key file used to sign app images.\n\nKey file is an ECDSA private key (NIST256p curve) in PEM format.\n\nPath is evaluated relative to the project directory.\n\nYou can generate a new signing key by running the following command:\nespsecure.py generate_signing_key secure_boot_signing_key.pem\n\nSee https://docs.espressif.com/projects/esp-idf/en/latest/security/secure-boot.html for details.\n", 
                        "id": "SECURE_BOOT_SIGNING_KEY", 
                        "name": "SECURE_BOOT_SIGNING_KEY", 
                        "range": null, 
                        "title": "Secure boot private signing key", 
                        "type": "string"
                    }
                ], 
                "depends_on": "SECURE_SIGNED_APPS", 
                "help": "Once secure boot or signed app requirement is enabled, app images are required to be signed.\n\nIf enabled (default), these binary files are signed as part of the build process. The file named in\n\"Secure boot private signing key\" will be used to sign the image.\n\nIf disabled, unsigned app/partition data will be built. They must be signed manually using espsecure.py\n(for example, on a remote signing server.)\n", 
                "id": "SECURE_BOOT_BUILD_SIGNED_BINARIES", 
                "name": "SECURE_BOOT_BUILD_SIGNED_BINARIES", 
                "range": null, 
                "title": "Sign binaries during build", 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": "SECURE_SIGNED_APPS && !SECURE_BOOT_BUILD_SIGNED_BINARIES", 
                "help": "Path to a public key file used to verify signed images. This key is compiled into the bootloader and/or\napp, to verify app images.\n\nKey file is in raw binary format, and can be extracted from a\nPEM formatted private key using the espsecure.py\nextract_public_key command.\n\nRefer to https://docs.espressif.com/projects/esp-idf/en/latest/security/secure-boot.html before enabling.\n", 
                "id": "SECURE_BOOT_VERIFICATION_KEY", 
                "name": "SECURE_BOOT_VERIFICATION_KEY", 
                "range": null, 
                "title": "Secure boot public signature verification key", 
                "type": "string"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice SECURE_BOOTLOADER_KEY_ENCODING>", 
                        "help": null, 
                        "id": "SECURE_BOOTLOADER_KEY_ENCODING_256BIT", 
                        "name": "SECURE_BOOTLOADER_KEY_ENCODING_256BIT", 
                        "range": null, 
                        "title": "No encoding (256 bit key)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice SECURE_BOOTLOADER_KEY_ENCODING>", 
                        "help": null, 
                        "id": "SECURE_BOOTLOADER_KEY_ENCODING_192BIT", 
                        "name": "SECURE_BOOTLOADER_KEY_ENCODING_192BIT", 
                        "range": null, 
                        "title": "3/4 encoding (192 bit key)", 
                        "type": "bool"
                    }
                ], 
                "depends_on": "SECURE_BOOTLOADER_REFLASHABLE", 
                "help": "In reflashable secure bootloader mode, a hardware key is derived from the signing key (with SHA-256) and\ncan be written to eFuse with espefuse.py.\n\nNormally this is a 256-bit key, but if 3/4 Coding Scheme is used on the device then the eFuse key is\ntruncated to 192 bits.\n\nThis configuration item doesn't change any firmware code, it only changes the size of key binary which is\ngenerated at build time.\n", 
                "id": "security-features-hardware-key-encoding", 
                "name": "SECURE_BOOTLOADER_KEY_ENCODING", 
                "title": "Hardware Key Encoding", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": "SECURE_BOOT_ENABLED", 
                "help": "You can disable some of the default protections offered by secure boot, in order to enable testing or a\ncustom combination of security features.\n\nOnly enable these options if you are very sure.\n\nRefer to https://docs.espressif.com/projects/esp-idf/en/latest/security/secure-boot.html before enabling.\n", 
                "id": "SECURE_BOOT_INSECURE", 
                "name": "SECURE_BOOT_INSECURE", 
                "range": null, 
                "title": "Allow potentially insecure options", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice SECURE_FLASH_ENCRYPTION_MODE>", 
                                "help": null, 
                                "id": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT", 
                                "name": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT", 
                                "range": null, 
                                "title": "Development(NOT SECURE)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice SECURE_FLASH_ENCRYPTION_MODE>", 
                                "help": null, 
                                "id": "SECURE_FLASH_ENCRYPTION_MODE_RELEASE", 
                                "name": "SECURE_FLASH_ENCRYPTION_MODE_RELEASE", 
                                "range": null, 
                                "title": "Release", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "SECURE_FLASH_ENC_ENABLED", 
                        "help": "By default Development mode is enabled which allows UART bootloader to perform flash encryption operations\n\nSelect Release mode only for production or manufacturing. Once enabled you can not reflash using UART\nbootloader\n\nRefer to https://docs.espressif.com/projects/esp-idf/en/latest/security/secure-boot.html and\nhttps://docs.espressif.com/projects/esp-idf/en/latest/security/flash-encryption.html for details.\n", 
                        "id": "security-features-enable-flash-encryption-on-boot-read-docs-first--enable-usage-mode", 
                        "name": "SECURE_FLASH_ENCRYPTION_MODE", 
                        "title": "Enable usage mode", 
                        "type": "choice"
                    }
                ], 
                "depends_on": null, 
                "help": "If this option is set, flash contents will be encrypted by the bootloader on first boot.\n\nNote: After first boot, the system will be permanently encrypted. Re-flashing an encrypted\nsystem is complicated and not always possible.\n\nRead https://docs.espressif.com/projects/esp-idf/en/latest/security/flash-encryption.html\nbefore enabling.\n", 
                "id": "SECURE_FLASH_ENC_ENABLED", 
                "name": "SECURE_FLASH_ENC_ENABLED", 
                "range": null, 
                "title": "Enable flash encryption on boot (READ DOCS FIRST)", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "SECURE_BOOT_INSECURE || SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT", 
                        "help": "By default, the BASIC ROM Console starts on reset if no valid bootloader is\nread from the flash.\n\nWhen either flash encryption or secure boot are enabled, the default is to\ndisable this BASIC fallback mode permanently via eFuse.\n\nIf this option is set, this eFuse is not burned and the BASIC ROM Console may\nremain accessible.  Only set this option in testing environments.\n", 
                        "id": "SECURE_BOOT_ALLOW_ROM_BASIC", 
                        "name": "SECURE_BOOT_ALLOW_ROM_BASIC", 
                        "range": null, 
                        "title": "Leave ROM BASIC Interpreter available on reset", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "SECURE_BOOT_INSECURE || SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT", 
                        "help": "If not set (default), the bootloader will permanently disable JTAG (across entire chip) on first boot\nwhen either secure boot or flash encryption is enabled.\n\nSetting this option leaves JTAG on for debugging, which negates all protections of flash encryption\nand some of the protections of secure boot.\n\nOnly set this option in testing environments.\n", 
                        "id": "SECURE_BOOT_ALLOW_JTAG", 
                        "name": "SECURE_BOOT_ALLOW_JTAG", 
                        "range": null, 
                        "title": "Allow JTAG Debugging", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "SECURE_BOOT_INSECURE", 
                        "help": "If not set (default), app partition size must be a multiple of 64KB. App images are padded to 64KB\nlength, and the bootloader checks any trailing bytes after the signature (before the next 64KB\nboundary) have not been written. This is because flash cache maps entire 64KB pages into the address\nspace. This prevents an attacker from appending unverified data after the app image in the flash,\ncausing it to be mapped into the address space.\n\nSetting this option allows the app partition length to be unaligned, and disables padding of the app\nimage to this length. It is generally not recommended to set this option, unless you have a legacy\npartitioning scheme which doesn't support 64KB aligned partition lengths.\n", 
                        "id": "SECURE_BOOT_ALLOW_SHORT_APP_PARTITION", 
                        "name": "SECURE_BOOT_ALLOW_SHORT_APP_PARTITION", 
                        "range": null, 
                        "title": "Allow app partition length not 64KB aligned", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT", 
                        "help": "If not set (default), the bootloader will permanently disable UART bootloader encryption access on\nfirst boot. If set, the UART bootloader will still be able to access hardware encryption.\n\nIt is recommended to only set this option in testing environments.\n", 
                        "id": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_ENC", 
                        "name": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_ENC", 
                        "range": null, 
                        "title": "Leave UART bootloader encryption enabled", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT", 
                        "help": "If not set (default), the bootloader will permanently disable UART bootloader decryption access on\nfirst boot. If set, the UART bootloader will still be able to access hardware decryption.\n\nOnly set this option in testing environments. Setting this option allows complete bypass of flash\nencryption.\n", 
                        "id": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_DEC", 
                        "name": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_DEC", 
                        "range": null, 
                        "title": "Leave UART bootloader decryption enabled", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT", 
                        "help": "If not set (default), the bootloader will permanently disable UART bootloader flash cache access on\nfirst boot. If set, the UART bootloader will still be able to access the flash cache.\n\nOnly set this option in testing environments.\n", 
                        "id": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_CACHE", 
                        "name": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_CACHE", 
                        "range": null, 
                        "title": "Leave UART bootloader flash cache enabled", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT", 
                        "help": "If not set (default), and flash encryption is not yet enabled in eFuses, the 2nd stage bootloader\nwill enable flash encryption: generate the flash encryption key and program eFuses.\nIf this option is set, and flash encryption is not yet enabled, the bootloader will error out and\nreboot.\nIf flash encryption is enabled in eFuses, this option does not change the bootloader behavior.\n\nOnly use this option in testing environments, to avoid accidentally enabling flash encryption on\nthe wrong device. The device needs to have flash encryption already enabled using espefuse.py.\n", 
                        "id": "SECURE_FLASH_REQUIRE_ALREADY_ENABLED", 
                        "name": "SECURE_FLASH_REQUIRE_ALREADY_ENABLED", 
                        "range": null, 
                        "title": "Require flash encryption to be already enabled", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "security-features-potentially-insecure-options", 
                "title": "Potentially insecure options", 
                "type": "menu"
            }
        ], 
        "depends_on": null, 
        "id": "security-features", 
        "title": "Security features", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [], 
                "depends_on": "!IDF_CMAKE", 
                "help": "The serial port that's connected to the ESP chip. This can be overridden by setting the ESPPORT\nenvironment variable.\n\nThis value is ignored when using the CMake-based build system or idf.py.\n", 
                "id": "ESPTOOLPY_PORT", 
                "name": "ESPTOOLPY_PORT", 
                "range": null, 
                "title": "Default serial port", 
                "type": "string"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_BAUD_115200B", 
                        "name": "ESPTOOLPY_BAUD_115200B", 
                        "range": null, 
                        "title": "115200 baud", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_BAUD_230400B", 
                        "name": "ESPTOOLPY_BAUD_230400B", 
                        "range": null, 
                        "title": "230400 baud", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_BAUD_921600B", 
                        "name": "ESPTOOLPY_BAUD_921600B", 
                        "range": null, 
                        "title": "921600 baud", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_BAUD_2MB", 
                        "name": "ESPTOOLPY_BAUD_2MB", 
                        "range": null, 
                        "title": "2Mbaud", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_BAUD_OTHER", 
                        "name": "ESPTOOLPY_BAUD_OTHER", 
                        "range": null, 
                        "title": "Other baud rate", 
                        "type": "bool"
                    }
                ], 
                "depends_on": "!IDF_CMAKE", 
                "help": "Default baud rate to use while communicating with the ESP chip. Can be overridden by\nsetting the ESPBAUD variable.\n\nThis value is ignored when using the CMake-based build system or idf.py.\n", 
                "id": "serial-flasher-config-default-baud-rate", 
                "name": "ESPTOOLPY_BAUD", 
                "title": "Default baud rate", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_BAUD_OTHER_VAL", 
                "name": "ESPTOOLPY_BAUD_OTHER_VAL", 
                "range": null, 
                "title": "Other baud rate value", 
                "type": "int"
            }, 
            {
                "children": [], 
                "depends_on": "!IDF_CMAKE", 
                "help": null, 
                "id": "ESPTOOLPY_BAUD", 
                "name": "ESPTOOLPY_BAUD", 
                "range": null, 
                "title": null, 
                "type": "int"
            }, 
            {
                "children": [], 
                "depends_on": "!IDF_CMAKE", 
                "help": "The flasher tool can send data compressed using zlib, letting the ROM on the ESP chip\ndecompress it on the fly before flashing it. For most payloads, this should result in a\nspeed increase.\n", 
                "id": "ESPTOOLPY_COMPRESSED", 
                "name": "ESPTOOLPY_COMPRESSED", 
                "range": null, 
                "title": "Use compressed upload", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHMODE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHMODE_QIO", 
                        "name": "ESPTOOLPY_FLASHMODE_QIO", 
                        "range": null, 
                        "title": "QIO", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHMODE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHMODE_QOUT", 
                        "name": "ESPTOOLPY_FLASHMODE_QOUT", 
                        "range": null, 
                        "title": "QOUT", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHMODE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHMODE_DIO", 
                        "name": "ESPTOOLPY_FLASHMODE_DIO", 
                        "range": null, 
                        "title": "DIO", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHMODE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHMODE_DOUT", 
                        "name": "ESPTOOLPY_FLASHMODE_DOUT", 
                        "range": null, 
                        "title": "DOUT", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Mode the flash chip is flashed in, as well as the default mode for the\nbinary to run in.\n", 
                "id": "serial-flasher-config-flash-spi-mode", 
                "name": "ESPTOOLPY_FLASHMODE", 
                "title": "Flash SPI mode", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_FLASHMODE", 
                "name": "ESPTOOLPY_FLASHMODE", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHFREQ_80M", 
                        "name": "ESPTOOLPY_FLASHFREQ_80M", 
                        "range": null, 
                        "title": "80 MHz", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHFREQ_40M", 
                        "name": "ESPTOOLPY_FLASHFREQ_40M", 
                        "range": null, 
                        "title": "40 MHz", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHFREQ_26M", 
                        "name": "ESPTOOLPY_FLASHFREQ_26M", 
                        "range": null, 
                        "title": "26 MHz", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHFREQ_20M", 
                        "name": "ESPTOOLPY_FLASHFREQ_20M", 
                        "range": null, 
                        "title": "20 MHz", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "The SPI flash frequency to be used.\n", 
                "id": "serial-flasher-config-flash-spi-speed", 
                "name": "ESPTOOLPY_FLASHFREQ", 
                "title": "Flash SPI speed", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_FLASHFREQ", 
                "name": "ESPTOOLPY_FLASHFREQ", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHSIZE_1MB", 
                        "name": "ESPTOOLPY_FLASHSIZE_1MB", 
                        "range": null, 
                        "title": "1 MB", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHSIZE_2MB", 
                        "name": "ESPTOOLPY_FLASHSIZE_2MB", 
                        "range": null, 
                        "title": "2 MB", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHSIZE_4MB", 
                        "name": "ESPTOOLPY_FLASHSIZE_4MB", 
                        "range": null, 
                        "title": "4 MB", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHSIZE_8MB", 
                        "name": "ESPTOOLPY_FLASHSIZE_8MB", 
                        "range": null, 
                        "title": "8 MB", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHSIZE_16MB", 
                        "name": "ESPTOOLPY_FLASHSIZE_16MB", 
                        "range": null, 
                        "title": "16 MB", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "SPI flash size, in megabytes\n", 
                "id": "serial-flasher-config-flash-size", 
                "name": "ESPTOOLPY_FLASHSIZE", 
                "title": "Flash size", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_FLASHSIZE", 
                "name": "ESPTOOLPY_FLASHSIZE", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "If this option is set, flashing the project will automatically detect\nthe flash size of the target chip and update the bootloader image\nbefore it is flashed.\n", 
                "id": "ESPTOOLPY_FLASHSIZE_DETECT", 
                "name": "ESPTOOLPY_FLASHSIZE_DETECT", 
                "range": null, 
                "title": "Detect flash size when flashing bootloader", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BEFORE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_BEFORE_RESET", 
                        "name": "ESPTOOLPY_BEFORE_RESET", 
                        "range": null, 
                        "title": "Reset to bootloader", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BEFORE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_BEFORE_NORESET", 
                        "name": "ESPTOOLPY_BEFORE_NORESET", 
                        "range": null, 
                        "title": "No reset", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Configure whether esptool.py should reset the ESP32 before flashing.\n\nAutomatic resetting depends on the RTS & DTR signals being\nwired from the serial port to the ESP32. Most USB development\nboards do this internally.\n", 
                "id": "serial-flasher-config-before-flashing", 
                "name": "ESPTOOLPY_BEFORE", 
                "title": "Before flashing", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_BEFORE", 
                "name": "ESPTOOLPY_BEFORE", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_AFTER>", 
                        "help": null, 
                        "id": "ESPTOOLPY_AFTER_RESET", 
                        "name": "ESPTOOLPY_AFTER_RESET", 
                        "range": null, 
                        "title": "Reset after flashing", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_AFTER>", 
                        "help": null, 
                        "id": "ESPTOOLPY_AFTER_NORESET", 
                        "name": "ESPTOOLPY_AFTER_NORESET", 
                        "range": null, 
                        "title": "Stay in bootloader", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Configure whether esptool.py should reset the ESP32 after flashing.\n\nAutomatic resetting depends on the RTS & DTR signals being\nwired from the serial port to the ESP32. Most USB development\nboards do this internally.\n", 
                "id": "serial-flasher-config-after-flashing", 
                "name": "ESPTOOLPY_AFTER", 
                "title": "After flashing", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_AFTER", 
                "name": "ESPTOOLPY_AFTER", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_MONITOR_BAUD_9600B", 
                        "name": "ESPTOOLPY_MONITOR_BAUD_9600B", 
                        "range": null, 
                        "title": "9600 bps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_MONITOR_BAUD_57600B", 
                        "name": "ESPTOOLPY_MONITOR_BAUD_57600B", 
                        "range": null, 
                        "title": "57600 bps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_MONITOR_BAUD_115200B", 
                        "name": "ESPTOOLPY_MONITOR_BAUD_115200B", 
                        "range": null, 
                        "title": "115200 bps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_MONITOR_BAUD_230400B", 
                        "name": "ESPTOOLPY_MONITOR_BAUD_230400B", 
                        "range": null, 
                        "title": "230400 bps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_MONITOR_BAUD_921600B", 
                        "name": "ESPTOOLPY_MONITOR_BAUD_921600B", 
                        "range": null, 
                        "title": "921600 bps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_MONITOR_BAUD_2MB", 
                        "name": "ESPTOOLPY_MONITOR_BAUD_2MB", 
                        "range": null, 
                        "title": "2 Mbps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_MONITOR_BAUD_OTHER", 
                        "name": "ESPTOOLPY_MONITOR_BAUD_OTHER", 
                        "range": null, 
                        "title": "Custom baud rate", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Baud rate to use when running 'idf.py monitor' or 'make monitor'\nto view serial output from a running chip.\n\nCan override by setting the MONITORBAUD environment variable.\n", 
                "id": "serial-flasher-config--idf-py-monitor-baud-rate", 
                "name": "ESPTOOLPY_MONITOR_BAUD", 
                "title": "'idf.py monitor' baud rate", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_MONITOR_BAUD_OTHER_VAL", 
                "name": "ESPTOOLPY_MONITOR_BAUD_OTHER_VAL", 
                "range": null, 
                "title": "Custom baud rate value", 
                "type": "int"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_MONITOR_BAUD", 
                "name": "ESPTOOLPY_MONITOR_BAUD", 
                "range": null, 
                "title": null, 
                "type": "int"
            }
        ], 
        "depends_on": null, 
        "id": "serial-flasher-config", 
        "title": "Serial flasher config", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice PARTITION_TABLE_TYPE>", 
                        "help": null, 
                        "id": "PARTITION_TABLE_SINGLE_APP", 
                        "name": "PARTITION_TABLE_SINGLE_APP", 
                        "range": null, 
                        "title": "Single factory app, no OTA", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice PARTITION_TABLE_TYPE>", 
                        "help": null, 
                        "id": "PARTITION_TABLE_TWO_OTA", 
                        "name": "PARTITION_TABLE_TWO_OTA", 
                        "range": null, 
                        "title": "Factory app, two OTA definitions", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice PARTITION_TABLE_TYPE>", 
                        "help": null, 
                        "id": "PARTITION_TABLE_CUSTOM", 
                        "name": "PARTITION_TABLE_CUSTOM", 
                        "range": null, 
                        "title": "Custom partition table CSV", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "The partition table to flash to the ESP32. The partition table\ndetermines where apps, data and other resources are expected to\nbe found.\n\nThe predefined partition table CSV descriptions can be found\nin the components/partition_table directory. Otherwise it's\npossible to create a new custom partition CSV for your application.\n", 
                "id": "partition-table-partition-table", 
                "name": "PARTITION_TABLE_TYPE", 
                "title": "Partition Table", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Name of the custom partition CSV filename. This path is evaluated\nrelative to the project root directory.\n", 
                "id": "PARTITION_TABLE_CUSTOM_FILENAME", 
                "name": "PARTITION_TABLE_CUSTOM_FILENAME", 
                "range": null, 
                "title": "Custom partition CSV file", 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "PARTITION_TABLE_FILENAME", 
                "name": "PARTITION_TABLE_FILENAME", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "The address of partition table (by default 0x8000).\nAllows you to move the partition table, it gives more space for the bootloader.\nNote that the bootloader and app will both need to be compiled with the same PARTITION_TABLE_OFFSET value.\n\nThis number should be a multiple of 0x1000.\n\nNote that partition offsets in the partition table CSV file may need to be changed if this value is set to\na higher value. To have each partition offset adapt to the configured partition table offset, leave all\npartition offsets blank in the CSV file.\n", 
                "id": "PARTITION_TABLE_OFFSET", 
                "name": "PARTITION_TABLE_OFFSET", 
                "range": null, 
                "title": "Offset of partition table", 
                "type": "hex"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Generate an MD5 checksum for the partition table for protecting the\nintegrity of the table. The generation should be turned off for legacy\nbootloaders which cannot recognize the MD5 checksum in the partition\ntable.\n", 
                "id": "PARTITION_TABLE_MD5", 
                "name": "PARTITION_TABLE_MD5", 
                "range": null, 
                "title": "Generate an MD5 checksum for the partition table", 
                "type": "bool"
            }
        ], 
        "depends_on": null, 
        "id": "partition-table", 
        "title": "Partition Table", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [], 
                "depends_on": null, 
                "help": "SSID (network name) for the example to connect to.\n", 
                "id": "ESP_WIFI_SSID", 
                "name": "ESP_WIFI_SSID", 
                "range": null, 
                "title": "WiFi SSID", 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "WiFi password (WPA or WPA2) for the example to use.\n", 
                "id": "ESP_WIFI_PASSWORD", 
                "name": "ESP_WIFI_PASSWORD", 
                "range": null, 
                "title": "WiFi Password", 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "This is the GPIO on which output will be set.\n", 
                "id": "OUTPUT_GPIO", 
                "name": "OUTPUT_GPIO", 
                "range": null, 
                "title": "Output GPIO", 
                "type": "int"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "GPIO number (IOxx) to blink on and off.\n\nSome GPIOs are used for other purposes (flash connections, etc.) and cannot be used to blink.\n\nGPIOs 35-39 are input-only so cannot be used as outputs.\n", 
                "id": "BLINK_GPIO", 
                "name": "BLINK_GPIO", 
                "range": [
                    0, 
                    34
                ], 
                "title": "Blink GPIO number", 
                "type": "int"
            }
        ], 
        "depends_on": null, 
        "id": "example-configuration", 
        "title": "Example Configuration", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice COMPILER_OPTIMIZATION>", 
                        "help": null, 
                        "id": "COMPILER_OPTIMIZATION_LEVEL_DEBUG", 
                        "name": "COMPILER_OPTIMIZATION_LEVEL_DEBUG", 
                        "range": null, 
                        "title": "Debug (-Og)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice COMPILER_OPTIMIZATION>", 
                        "help": null, 
                        "id": "COMPILER_OPTIMIZATION_LEVEL_RELEASE", 
                        "name": "COMPILER_OPTIMIZATION_LEVEL_RELEASE", 
                        "range": null, 
                        "title": "Release (-Os)", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "This option sets compiler optimization level (gcc -O argument).\n\n- for \"Release\" setting, -Os flag is added to CFLAGS.\n- for \"Debug\" setting, -Og flag is added to CFLAGS.\n\n\"Release\" with -Os produces smaller & faster compiled code but it\nmay be harder to correlated code addresses to source files when debugging.\n\nTo add custom optimization settings, set CFLAGS and/or CPPFLAGS\nin project makefile, before including $(IDF_PATH)/make/project.mk. Note that\ncustom optimization levels may be unsupported.\n", 
                "id": "compiler-options-optimization-level", 
                "name": "COMPILER_OPTIMIZATION", 
                "title": "Optimization Level", 
                "type": "choice"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice COMPILER_OPTIMIZATION_ASSERTION_LEVEL>", 
                        "help": "Enable assertions. Assertion content and line number will be printed on failure.\n", 
                        "id": "COMPILER_OPTIMIZATION_ASSERTIONS_ENABLE", 
                        "name": "COMPILER_OPTIMIZATION_ASSERTIONS_ENABLE", 
                        "range": null, 
                        "title": "Enabled", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice COMPILER_OPTIMIZATION_ASSERTION_LEVEL>", 
                        "help": "Enable silent assertions. Failed assertions will abort(), user needs to\nuse the aborting address to find the line number with the failed assertion.\n", 
                        "id": "COMPILER_OPTIMIZATION_ASSERTIONS_SILENT", 
                        "name": "COMPILER_OPTIMIZATION_ASSERTIONS_SILENT", 
                        "range": null, 
                        "title": "Silent (saves code size)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice COMPILER_OPTIMIZATION_ASSERTION_LEVEL>", 
                        "help": "If assertions are disabled, -DNDEBUG is added to CPPFLAGS.\n", 
                        "id": "COMPILER_OPTIMIZATION_ASSERTIONS_DISABLE", 
                        "name": "COMPILER_OPTIMIZATION_ASSERTIONS_DISABLE", 
                        "range": null, 
                        "title": "Disabled (sets -DNDEBUG)", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Assertions can be:\n\n- Enabled. Failure will print verbose assertion details. This is the default.\n\n- Set to \"silent\" to save code size (failed assertions will abort() but user\n  needs to use the aborting address to find the line number with the failed assertion.)\n\n- Disabled entirely (not recommended for most configurations.) -DNDEBUG is added\n  to CPPFLAGS in this case.\n", 
                "id": "compiler-options-assertion-level", 
                "name": "COMPILER_OPTIMIZATION_ASSERTION_LEVEL", 
                "title": "Assertion level", 
                "type": "choice"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "COMPILER_CXX_EXCEPTIONS", 
                        "help": "Size (in bytes) of the emergency memory pool for C++ exceptions. This pool will be used to allocate\nmemory for thrown exceptions when there is not enough memory on the heap.\n", 
                        "id": "COMPILER_CXX_EXCEPTIONS_EMG_POOL_SIZE", 
                        "name": "COMPILER_CXX_EXCEPTIONS_EMG_POOL_SIZE", 
                        "range": null, 
                        "title": "Emergency Pool Size", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "help": "Enabling this option compiles all IDF C++ files with exception support enabled.\n\nDisabling this option disables C++ exception support in all compiled files, and any libstdc++ code\nwhich throws an exception will abort instead.\n\nEnabling this option currently adds an additional ~500 bytes of heap overhead\nwhen an exception is thrown in user code for the first time.\n", 
                "id": "COMPILER_CXX_EXCEPTIONS", 
                "is_menuconfig": true, 
                "name": "COMPILER_CXX_EXCEPTIONS", 
                "range": null, 
                "title": "Enable C++ exceptions", 
                "type": "menu"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Enabling this option compiles all C++ files with RTTI support enabled.\nThis increases binary size (typically by tens of kB) but allows using\ndynamic_cast conversion and typeid operator.\n", 
                "id": "COMPILER_CXX_RTTI", 
                "name": "COMPILER_CXX_RTTI", 
                "range": null, 
                "title": null, 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice COMPILER_STACK_CHECK_MODE>", 
                        "help": null, 
                        "id": "COMPILER_STACK_CHECK_MODE_NONE", 
                        "name": "COMPILER_STACK_CHECK_MODE_NONE", 
                        "range": null, 
                        "title": "None", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice COMPILER_STACK_CHECK_MODE>", 
                        "help": null, 
                        "id": "COMPILER_STACK_CHECK_MODE_NORM", 
                        "name": "COMPILER_STACK_CHECK_MODE_NORM", 
                        "range": null, 
                        "title": "Normal", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice COMPILER_STACK_CHECK_MODE>", 
                        "help": null, 
                        "id": "COMPILER_STACK_CHECK_MODE_STRONG", 
                        "name": "COMPILER_STACK_CHECK_MODE_STRONG", 
                        "range": null, 
                        "title": "Strong", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice COMPILER_STACK_CHECK_MODE>", 
                        "help": null, 
                        "id": "COMPILER_STACK_CHECK_MODE_ALL", 
                        "name": "COMPILER_STACK_CHECK_MODE_ALL", 
                        "range": null, 
                        "title": "Overall", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Stack smashing protection mode. Emit extra code to check for buffer overflows, such as stack\nsmashing attacks. This is done by adding a guard variable to functions with vulnerable objects.\nThe guards are initialized when a function is entered and then checked when the function exits.\nIf a guard check fails, program is halted. Protection has the following modes:\n\n- In NORMAL mode (GCC flag: -fstack-protector) only functions that call alloca, and functions with\n  buffers larger than 8 bytes are protected.\n\n- STRONG mode (GCC flag: -fstack-protector-strong) is like NORMAL, but includes additional functions\n  to be protected -- those that have local array definitions, or have references to local frame\n  addresses.\n\n- In OVERALL mode (GCC flag: -fstack-protector-all) all functions are protected.\n\nModes have the following impact on code performance and coverage:\n\n- performance: NORMAL > STRONG > OVERALL\n\n- coverage: NORMAL < STRONG < OVERALL\n", 
                "id": "compiler-options-stack-smashing-protection-mode", 
                "name": "COMPILER_STACK_CHECK_MODE", 
                "title": "Stack smashing protection mode", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Stack smashing protection.\n", 
                "id": "COMPILER_STACK_CHECK", 
                "name": "COMPILER_STACK_CHECK", 
                "range": null, 
                "title": null, 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Adds -Wwrite-strings flag for the C/C++ compilers.\n\nFor C, this gives string constants the type ``const char[]`` so that\ncopying the address of one into a non-const ``char *`` pointer\nproduces a warning. This warning helps to find at compile time code\nthat tries to write into a string constant.\n\nFor C++, this warns about the deprecated conversion from string\nliterals to ``char *``.\n", 
                "id": "COMPILER_WARN_WRITE_STRINGS", 
                "name": "COMPILER_WARN_WRITE_STRINGS", 
                "range": null, 
                "title": "Enable -Wwrite-strings warning flag", 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Enable this option if using GCC 6 or newer, and wanting to disable warnings which don't appear with\nGCC 5.\n", 
                "id": "COMPILER_DISABLE_GCC8_WARNINGS", 
                "name": "COMPILER_DISABLE_GCC8_WARNINGS", 
                "range": null, 
                "title": "Disable new warnings introduced in GCC 6 - 8", 
                "type": "bool"
            }
        ], 
        "depends_on": null, 
        "id": "compiler-options", 
        "title": "Compiler options", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_APPTRACE_DESTINATION>", 
                                "help": null, 
                                "id": "ESP32_APPTRACE_DEST_TRAX", 
                                "name": "ESP32_APPTRACE_DEST_TRAX", 
                                "range": null, 
                                "title": "Trace memory", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_APPTRACE_DESTINATION>", 
                                "help": null, 
                                "id": "ESP32_APPTRACE_DEST_NONE", 
                                "name": "ESP32_APPTRACE_DEST_NONE", 
                                "range": null, 
                                "title": "None", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select destination for application trace: trace memory or none (to disable).\n", 
                        "id": "component-config-application-level-tracing-data-destination", 
                        "name": "ESP32_APPTRACE_DESTINATION", 
                        "title": "Data Destination", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!ESP32_TRAX", 
                        "help": "Enables/disable application tracing module.\n", 
                        "id": "ESP32_APPTRACE_ENABLE", 
                        "name": "ESP32_APPTRACE_ENABLE", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enables/disable application tracing module internal sync lock.\n", 
                        "id": "ESP32_APPTRACE_LOCK_ENABLE", 
                        "name": "ESP32_APPTRACE_LOCK_ENABLE", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_APPTRACE_ENABLE", 
                        "help": "Timeout for flushing last trace data to host in case of panic. In ms.\nUse -1 to disable timeout and wait forever.\n", 
                        "id": "ESP32_APPTRACE_ONPANIC_HOST_FLUSH_TMO", 
                        "name": "ESP32_APPTRACE_ONPANIC_HOST_FLUSH_TMO", 
                        "range": null, 
                        "title": "Timeout for flushing last trace data to host on panic", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_APPTRACE_DEST_TRAX", 
                        "help": "Threshold for flushing last trace data to host on panic in post-mortem mode.\nThis is minimal amount of data needed to perform flush. In bytes.\n", 
                        "id": "ESP32_APPTRACE_POSTMORTEM_FLUSH_THRESH", 
                        "name": "ESP32_APPTRACE_POSTMORTEM_FLUSH_THRESH", 
                        "range": null, 
                        "title": "Threshold for flushing last trace data to host on panic", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_APPTRACE_DEST_TRAX", 
                        "help": "Size of the buffer for events in bytes. It is useful for buffering events from\nthe time critical code (scheduler, ISRs etc). If this parameter is 0 then\nevents will be discarded when main HW buffer is full.\n", 
                        "id": "ESP32_APPTRACE_PENDING_DATA_SIZE_MAX", 
                        "name": "ESP32_APPTRACE_PENDING_DATA_SIZE_MAX", 
                        "range": null, 
                        "title": "Size of the pending data buffer", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "FREERTOS_UNICORE && !PM_ENABLE && <choice SYSVIEW_TS_SOURCE>", 
                                                "help": null, 
                                                "id": "SYSVIEW_TS_SOURCE_CCOUNT", 
                                                "name": "SYSVIEW_TS_SOURCE_CCOUNT", 
                                                "range": null, 
                                                "title": "CPU cycle counter (CCOUNT)", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "!PM_ENABLE && <choice SYSVIEW_TS_SOURCE>", 
                                                "help": null, 
                                                "id": "SYSVIEW_TS_SOURCE_TIMER_00", 
                                                "name": "SYSVIEW_TS_SOURCE_TIMER_00", 
                                                "range": null, 
                                                "title": "Timer 0, Group 0", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "!PM_ENABLE && <choice SYSVIEW_TS_SOURCE>", 
                                                "help": null, 
                                                "id": "SYSVIEW_TS_SOURCE_TIMER_01", 
                                                "name": "SYSVIEW_TS_SOURCE_TIMER_01", 
                                                "range": null, 
                                                "title": "Timer 1, Group 0", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "!PM_ENABLE && <choice SYSVIEW_TS_SOURCE>", 
                                                "help": null, 
                                                "id": "SYSVIEW_TS_SOURCE_TIMER_10", 
                                                "name": "SYSVIEW_TS_SOURCE_TIMER_10", 
                                                "range": null, 
                                                "title": "Timer 0, Group 1", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "!PM_ENABLE && <choice SYSVIEW_TS_SOURCE>", 
                                                "help": null, 
                                                "id": "SYSVIEW_TS_SOURCE_TIMER_11", 
                                                "name": "SYSVIEW_TS_SOURCE_TIMER_11", 
                                                "range": null, 
                                                "title": "Timer 1, Group 1", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SYSVIEW_TS_SOURCE>", 
                                                "help": null, 
                                                "id": "SYSVIEW_TS_SOURCE_ESP_TIMER", 
                                                "name": "SYSVIEW_TS_SOURCE_ESP_TIMER", 
                                                "range": null, 
                                                "title": "esp_timer high resolution timer", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "SystemView needs to use a hardware timer as the source of timestamps\nwhen tracing. This option selects the timer for it.\n", 
                                        "id": "component-config-application-level-tracing-freertos-systemview-tracing-systemview-tracing-enable-timer-to-use-as-timestamp-source", 
                                        "name": "SYSVIEW_TS_SOURCE", 
                                        "title": "Timer to use as timestamp source", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Configures maximum supported tasks in sysview debug\n", 
                                        "id": "SYSVIEW_MAX_TASKS", 
                                        "name": "SYSVIEW_MAX_TASKS", 
                                        "range": null, 
                                        "title": "Maximum supported tasks", 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Configures timeout (in us) to wait for free space in trace buffer.\nSet to -1 to wait forever and avoid lost events.\n", 
                                        "id": "SYSVIEW_BUF_WAIT_TMO", 
                                        "name": "SYSVIEW_BUF_WAIT_TMO", 
                                        "range": null, 
                                        "title": "Trace buffer wait timeout", 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Trace Buffer Overflow\" event.\n", 
                                        "id": "SYSVIEW_EVT_OVERFLOW_ENABLE", 
                                        "name": "SYSVIEW_EVT_OVERFLOW_ENABLE", 
                                        "range": null, 
                                        "title": "Trace Buffer Overflow Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"ISR Enter\" event.\n", 
                                        "id": "SYSVIEW_EVT_ISR_ENTER_ENABLE", 
                                        "name": "SYSVIEW_EVT_ISR_ENTER_ENABLE", 
                                        "range": null, 
                                        "title": "ISR Enter Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"ISR Exit\" event.\n", 
                                        "id": "SYSVIEW_EVT_ISR_EXIT_ENABLE", 
                                        "name": "SYSVIEW_EVT_ISR_EXIT_ENABLE", 
                                        "range": null, 
                                        "title": "ISR Exit Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"ISR to Scheduler\" event.\n", 
                                        "id": "SYSVIEW_EVT_ISR_TO_SCHEDULER_ENABLE", 
                                        "name": "SYSVIEW_EVT_ISR_TO_SCHEDULER_ENABLE", 
                                        "range": null, 
                                        "title": "ISR Exit to Scheduler Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Task Start Execution\" event.\n", 
                                        "id": "SYSVIEW_EVT_TASK_START_EXEC_ENABLE", 
                                        "name": "SYSVIEW_EVT_TASK_START_EXEC_ENABLE", 
                                        "range": null, 
                                        "title": "Task Start Execution Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Task Stop Execution\" event.\n", 
                                        "id": "SYSVIEW_EVT_TASK_STOP_EXEC_ENABLE", 
                                        "name": "SYSVIEW_EVT_TASK_STOP_EXEC_ENABLE", 
                                        "range": null, 
                                        "title": "Task Stop Execution Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Task Start Ready State\" event.\n", 
                                        "id": "SYSVIEW_EVT_TASK_START_READY_ENABLE", 
                                        "name": "SYSVIEW_EVT_TASK_START_READY_ENABLE", 
                                        "range": null, 
                                        "title": "Task Start Ready State Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Task Stop Ready State\" event.\n", 
                                        "id": "SYSVIEW_EVT_TASK_STOP_READY_ENABLE", 
                                        "name": "SYSVIEW_EVT_TASK_STOP_READY_ENABLE", 
                                        "range": null, 
                                        "title": "Task Stop Ready State Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Task Create\" event.\n", 
                                        "id": "SYSVIEW_EVT_TASK_CREATE_ENABLE", 
                                        "name": "SYSVIEW_EVT_TASK_CREATE_ENABLE", 
                                        "range": null, 
                                        "title": "Task Create Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Task Terminate\" event.\n", 
                                        "id": "SYSVIEW_EVT_TASK_TERMINATE_ENABLE", 
                                        "name": "SYSVIEW_EVT_TASK_TERMINATE_ENABLE", 
                                        "range": null, 
                                        "title": "Task Terminate Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"System Idle\" event.\n", 
                                        "id": "SYSVIEW_EVT_IDLE_ENABLE", 
                                        "name": "SYSVIEW_EVT_IDLE_ENABLE", 
                                        "range": null, 
                                        "title": "System Idle Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Timer Enter\" event.\n", 
                                        "id": "SYSVIEW_EVT_TIMER_ENTER_ENABLE", 
                                        "name": "SYSVIEW_EVT_TIMER_ENTER_ENABLE", 
                                        "range": null, 
                                        "title": "Timer Enter Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Timer Exit\" event.\n", 
                                        "id": "SYSVIEW_EVT_TIMER_EXIT_ENABLE", 
                                        "name": "SYSVIEW_EVT_TIMER_EXIT_ENABLE", 
                                        "range": null, 
                                        "title": "Timer Exit Event", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "ESP32_APPTRACE_ENABLE && ESP32_APPTRACE_ENABLE", 
                                "help": "Enables supporrt for SEGGER SystemView tracing functionality.\n", 
                                "id": "SYSVIEW_ENABLE", 
                                "name": "SYSVIEW_ENABLE", 
                                "range": null, 
                                "title": "SystemView Tracing Enable", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "ESP32_APPTRACE_ENABLE", 
                        "id": "component-config-application-level-tracing-freertos-systemview-tracing", 
                        "title": "FreeRTOS SystemView Tracing", 
                        "type": "menu"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_DEBUG_STUBS_ENABLE && ESP32_APPTRACE_ENABLE && !SYSVIEW_ENABLE", 
                        "help": "Enables support for GCOV data transfer to host.\n", 
                        "id": "ESP32_GCOV_ENABLE", 
                        "name": "ESP32_GCOV_ENABLE", 
                        "range": null, 
                        "title": "GCOV to Host Enable", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-application-level-tracing", 
                "title": "Application Level Tracing", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select this option to enable Bluetooth and show the submenu with Bluetooth configuration choices.\n", 
                        "id": "BT_ENABLED", 
                        "name": "BT_ENABLED", 
                        "range": null, 
                        "title": "Bluetooth", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BTDM_CTRL_MODE>", 
                                        "help": null, 
                                        "id": "BTDM_CTRL_MODE_BLE_ONLY", 
                                        "name": "BTDM_CTRL_MODE_BLE_ONLY", 
                                        "range": null, 
                                        "title": "BLE Only", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BTDM_CTRL_MODE>", 
                                        "help": null, 
                                        "id": "BTDM_CTRL_MODE_BR_EDR_ONLY", 
                                        "name": "BTDM_CTRL_MODE_BR_EDR_ONLY", 
                                        "range": null, 
                                        "title": "BR/EDR Only", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BTDM_CTRL_MODE>", 
                                        "help": null, 
                                        "id": "BTDM_CTRL_MODE_BTDM", 
                                        "name": "BTDM_CTRL_MODE_BTDM", 
                                        "range": null, 
                                        "title": "Bluetooth Dual Mode", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BT_ENABLED", 
                                "help": "Specify the bluetooth controller mode (BR/EDR, BLE or dual mode).\n", 
                                "id": "component-config-bluetooth-bluetooth-controller-bluetooth-controller-mode-br-edr-ble-dualmode-", 
                                "name": "BTDM_CTRL_MODE", 
                                "title": "Bluetooth controller mode (BR/EDR/BLE/DUALMODE)", 
                                "type": "choice"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BTDM_CTRL_MODE_BLE_ONLY || BTDM_CTRL_MODE_BTDM", 
                                "help": "BLE maximum connections of bluetooth controller.\nEach connection uses 1KB static DRAM whenever the BT controller is enabled.\n", 
                                "id": "BTDM_CTRL_BLE_MAX_CONN", 
                                "name": "BTDM_CTRL_BLE_MAX_CONN", 
                                "range": null, 
                                "title": "BLE Max Connections", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BTDM_CTRL_MODE_BR_EDR_ONLY || BTDM_CTRL_MODE_BTDM", 
                                "help": "BR/EDR ACL maximum connections of bluetooth controller.\nEach connection uses 1.2KB static DRAM whenever the BT controller is enabled.\n", 
                                "id": "BTDM_CTRL_BR_EDR_MAX_ACL_CONN", 
                                "name": "BTDM_CTRL_BR_EDR_MAX_ACL_CONN", 
                                "range": null, 
                                "title": "BR/EDR ACL Max Connections", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BTDM_CTRL_MODE_BR_EDR_ONLY || BTDM_CTRL_MODE_BTDM", 
                                "help": "BR/EDR Synchronize maximum connections of bluetooth controller.\nEach connection uses 2KB static DRAM whenever the BT controller is enabled.\n", 
                                "id": "BTDM_CTRL_BR_EDR_MAX_SYNC_CONN", 
                                "name": "BTDM_CTRL_BR_EDR_MAX_SYNC_CONN", 
                                "range": null, 
                                "title": "BR/EDR Sync(SCO/eSCO) Max Connections", 
                                "type": "int"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BTDM_CTRL_BR_EDR_SCO_DATA_PATH>", 
                                        "help": null, 
                                        "id": "BTDM_CTRL_BR_EDR_SCO_DATA_PATH_HCI", 
                                        "name": "BTDM_CTRL_BR_EDR_SCO_DATA_PATH_HCI", 
                                        "range": null, 
                                        "title": "HCI", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BTDM_CTRL_BR_EDR_SCO_DATA_PATH>", 
                                        "help": null, 
                                        "id": "BTDM_CTRL_BR_EDR_SCO_DATA_PATH_PCM", 
                                        "name": "BTDM_CTRL_BR_EDR_SCO_DATA_PATH_PCM", 
                                        "range": null, 
                                        "title": "PCM", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BTDM_CTRL_MODE_BR_EDR_ONLY || BTDM_CTRL_MODE_BTDM", 
                                "help": "SCO data path, i.e. HCI or PCM.\nSCO data can be sent/received through HCI synchronous packets, or the data\ncan be routed to on-chip PCM module on ESP32. PCM input/output signals can\nbe \"matrixed\" to GPIOs. The default data path can also be set using API\n\"esp_bredr_sco_datapath_set\"\n", 
                                "id": "component-config-bluetooth-bluetooth-controller-br-edr-sync-sco-esco-default-data-path", 
                                "name": "BTDM_CTRL_BR_EDR_SCO_DATA_PATH", 
                                "title": "BR/EDR Sync(SCO/eSCO) default data path", 
                                "type": "choice"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": null, 
                                "id": "BTDM_CTRL_BR_EDR_SCO_DATA_PATH_EFF", 
                                "name": "BTDM_CTRL_BR_EDR_SCO_DATA_PATH_EFF", 
                                "range": null, 
                                "title": null, 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BTDM_CTRL_MODE_BTDM", 
                                "help": "BLE auto latency, used to enhance classic BT performance\nwhile classic BT and BLE are enabled at the same time.\n", 
                                "id": "BTDM_CTRL_AUTO_LATENCY", 
                                "name": "BTDM_CTRL_AUTO_LATENCY", 
                                "range": null, 
                                "title": "Auto latency", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": null, 
                                "id": "BTDM_CTRL_AUTO_LATENCY_EFF", 
                                "name": "BTDM_CTRL_AUTO_LATENCY_EFF", 
                                "range": null, 
                                "title": null, 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": null, 
                                "id": "BTDM_CTRL_BLE_MAX_CONN_EFF", 
                                "name": "BTDM_CTRL_BLE_MAX_CONN_EFF", 
                                "range": null, 
                                "title": null, 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": null, 
                                "id": "BTDM_CTRL_BR_EDR_MAX_ACL_CONN_EFF", 
                                "name": "BTDM_CTRL_BR_EDR_MAX_ACL_CONN_EFF", 
                                "range": null, 
                                "title": null, 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": null, 
                                "id": "BTDM_CTRL_BR_EDR_MAX_SYNC_CONN_EFF", 
                                "name": "BTDM_CTRL_BR_EDR_MAX_SYNC_CONN_EFF", 
                                "range": null, 
                                "title": null, 
                                "type": "int"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BTDM_CTRL_PINNED_TO_CORE_CHOICE>", 
                                        "help": null, 
                                        "id": "BTDM_CTRL_PINNED_TO_CORE_0", 
                                        "name": "BTDM_CTRL_PINNED_TO_CORE_0", 
                                        "range": null, 
                                        "title": "Core 0 (PRO CPU)", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "!FREERTOS_UNICORE && <choice BTDM_CTRL_PINNED_TO_CORE_CHOICE>", 
                                        "help": null, 
                                        "id": "BTDM_CTRL_PINNED_TO_CORE_1", 
                                        "name": "BTDM_CTRL_PINNED_TO_CORE_1", 
                                        "range": null, 
                                        "title": "Core 1 (APP CPU)", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BT_ENABLED && !FREERTOS_UNICORE", 
                                "help": "Specify the cpu core to run bluetooth controller.\nCan not specify no-affinity.\n", 
                                "id": "component-config-bluetooth-bluetooth-controller-the-cpu-core-which-bluetooth-controller-run", 
                                "name": "BTDM_CTRL_PINNED_TO_CORE_CHOICE", 
                                "title": "The cpu core which bluetooth controller run", 
                                "type": "choice"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": null, 
                                "id": "BTDM_CTRL_PINNED_TO_CORE", 
                                "name": "BTDM_CTRL_PINNED_TO_CORE", 
                                "range": null, 
                                "title": null, 
                                "type": "int"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BTDM_CTRL_HCI_MODE_CHOICE>", 
                                        "help": "Normal option. Mostly, choose this VHCI when bluetooth host run on ESP32, too.\n", 
                                        "id": "BTDM_CTRL_HCI_MODE_VHCI", 
                                        "name": "BTDM_CTRL_HCI_MODE_VHCI", 
                                        "range": null, 
                                        "title": "VHCI", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BTDM_CTRL_HCI_MODE_CHOICE>", 
                                        "help": "If use external bluetooth host which run on other hardware and use UART as the HCI interface,\nchoose this option.\n", 
                                        "id": "BTDM_CTRL_HCI_MODE_UART_H4", 
                                        "name": "BTDM_CTRL_HCI_MODE_UART_H4", 
                                        "range": null, 
                                        "title": "UART(H4)", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BT_ENABLED", 
                                "help": "Speicify HCI mode as VHCI or UART(H4)\n", 
                                "id": "component-config-bluetooth-bluetooth-controller-hci-mode", 
                                "name": "BTDM_CTRL_HCI_MODE_CHOICE", 
                                "title": "HCI mode", 
                                "type": "choice"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "BTDM_CTRL_HCI_MODE_UART_H4", 
                                        "help": "Uart number for HCI. The available uart is UART1 and UART2.\n", 
                                        "id": "BT_HCI_UART_NO", 
                                        "name": "BT_HCI_UART_NO", 
                                        "range": null, 
                                        "title": "UART Number for HCI", 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BTDM_CTRL_HCI_MODE_UART_H4", 
                                        "help": "UART Baudrate for HCI. Please use standard baudrate.\n", 
                                        "id": "BT_HCI_UART_BAUDRATE", 
                                        "name": "BT_HCI_UART_BAUDRATE", 
                                        "range": null, 
                                        "title": "UART Baudrate for HCI", 
                                        "type": "int"
                                    }
                                ], 
                                "depends_on": null, 
                                "id": "component-config-bluetooth-bluetooth-controller-hci-uart-h4-options", 
                                "title": "HCI UART(H4) Options", 
                                "type": "menu"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [
                                                    {
                                                        "children": [], 
                                                        "depends_on": "<choice BTDM_MODEM_SLEEP_MODE>", 
                                                        "help": "ORIG mode is a bluetooth sleep mode that can be used for dual mode controller. In this mode,\nbluetooth controller sleeps between BR/EDR frames and BLE events. A low power clock is used to\nmaintain bluetooth reference clock.\n", 
                                                        "id": "BTDM_MODEM_SLEEP_MODE_ORIG", 
                                                        "name": "BTDM_MODEM_SLEEP_MODE_ORIG", 
                                                        "range": null, 
                                                        "title": "ORIG Mode(sleep with low power clock)", 
                                                        "type": "bool"
                                                    }, 
                                                    {
                                                        "children": [], 
                                                        "depends_on": "<choice BTDM_MODEM_SLEEP_MODE>", 
                                                        "help": "EVED mode is for BLE only and is only for internal test. Do not use it for production. this\nmode is not compatible with DFS nor light sleep\n", 
                                                        "id": "BTDM_MODEM_SLEEP_MODE_EVED", 
                                                        "name": "BTDM_MODEM_SLEEP_MODE_EVED", 
                                                        "range": null, 
                                                        "title": "EVED Mode(For internal test only)", 
                                                        "type": "bool"
                                                    }
                                                ], 
                                                "depends_on": "BTDM_MODEM_SLEEP", 
                                                "help": "To select which strategy to use for modem sleep\n", 
                                                "id": "component-config-bluetooth-bluetooth-controller-modem-sleep-options-bluetooth-modem-sleep-bluetooth-modem-sleep-mode", 
                                                "name": "BTDM_MODEM_SLEEP_MODE", 
                                                "title": "Bluetooth Modem sleep mode", 
                                                "type": "choice"
                                            }
                                        ], 
                                        "depends_on": "BT_ENABLED", 
                                        "help": "Enable/disable bluetooth controller low power mode.\n", 
                                        "id": "BTDM_MODEM_SLEEP", 
                                        "name": "BTDM_MODEM_SLEEP", 
                                        "range": null, 
                                        "title": "Bluetooth modem sleep", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTDM_LOW_POWER_CLOCK>", 
                                                "help": "Main crystal can be used as low power clock for bluetooth modem sleep. If this option is\nselected, bluetooth modem sleep can work under Dynamic Frequency Scaling(DFS) enabled, but\ncannot work when light sleep is enabled. Main crystal has a good performance in accuracy as\nthe bluetooth low power clock source.\n", 
                                                "id": "BTDM_LPCLK_SEL_MAIN_XTAL", 
                                                "name": "BTDM_LPCLK_SEL_MAIN_XTAL", 
                                                "range": null, 
                                                "title": "Main crystal", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "ESP32_RTC_CLK_SRC_EXT_CRYS && <choice BTDM_LOW_POWER_CLOCK>", 
                                                "help": "External 32kHz crystal has a nominal frequency of 32.768kHz and provides good frequency\nstability. If used as Bluetooth low power clock, External 32kHz can support Bluetooth\nmodem sleep to be used with both DFS and light sleep.\n", 
                                                "id": "BTDM_LPCLK_SEL_EXT_32K_XTAL", 
                                                "name": "BTDM_LPCLK_SEL_EXT_32K_XTAL", 
                                                "range": null, 
                                                "title": "External 32kHz crystal", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BTDM_MODEM_SLEEP_MODE_ORIG", 
                                        "help": "Select the low power clock source for bluetooth controller. Bluetooth low power clock is\nthe clock source to maintain time in sleep mode.\n\n- \"Main crystal\" option provides good accuracy and can support Dynamic Frequency Scaling\n  to be used with Bluetooth modem sleep. Light sleep is not supported.\n- \"External 32kHz crystal\" option allows user to use a 32.768kHz crystal as Bluetooth low\n  power clock. This option is allowed as long as External 32kHz crystal is configured as\n  the system RTC clock source. This option provides good accuracy and supports Bluetooth\n  modem sleep to be used alongside Dynamic Frequency Scaling or light sleep.\n", 
                                        "id": "component-config-bluetooth-bluetooth-controller-modem-sleep-options-bluetooth-low-power-clock", 
                                        "name": "BTDM_LOW_POWER_CLOCK", 
                                        "title": "Bluetooth low power clock", 
                                        "type": "choice"
                                    }
                                ], 
                                "depends_on": null, 
                                "id": "component-config-bluetooth-bluetooth-controller-modem-sleep-options", 
                                "title": "MODEM SLEEP Options", 
                                "type": "menu"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "BTDM_LPCLK_SEL_EXT_32K_XTAL && BTDM_CTRL_MODE_BLE_ONLY && <choice BTDM_BLE_SLEEP_CLOCK_ACCURACY>", 
                                        "help": null, 
                                        "id": "BTDM_BLE_DEFAULT_SCA_500PPM", 
                                        "name": "BTDM_BLE_DEFAULT_SCA_500PPM", 
                                        "range": null, 
                                        "title": "251ppm to 500ppm", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BTDM_BLE_SLEEP_CLOCK_ACCURACY>", 
                                        "help": null, 
                                        "id": "BTDM_BLE_DEFAULT_SCA_250PPM", 
                                        "name": "BTDM_BLE_DEFAULT_SCA_250PPM", 
                                        "range": null, 
                                        "title": "151ppm to 250ppm", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BTDM_CTRL_MODE_BLE_ONLY || BTDM_CTRL_MODE_BTDM", 
                                "help": "BLE Sleep Clock Accuracy(SCA) for the local device is used to estimate window widening in BLE\nconnection events. With a lower level of clock accuracy(e.g. 500ppm over 250ppm), the slave\nneeds a larger RX window to synchronize with master in each anchor point, thus resulting in an\nincrease of power consumption but a higher level of robustness in keeping connected. According\nto the requirements of Bluetooth Core specification 4.2, the worst-case accuracy of Classic\nBluetooth low power oscialltor(LPO) is +/-250ppm in STANDBY and in low power modes such as\nsniff. For BLE the worst-case SCA is +/-500ppm.\n\n- \"151ppm to 250ppm\" option is the default value for Bluetooth Dual mode\n- \"251ppm to 500ppm\" option can be used in BLE only mode when using external 32kHz crystal as\n   low power clock. This option is provided in case that BLE sleep clock has a lower level of\n   accuracy, or other error sources contribute to the inaccurate timing during sleep.\n", 
                                "id": "component-config-bluetooth-bluetooth-controller-ble-sleep-clock-accuracy", 
                                "name": "BTDM_BLE_SLEEP_CLOCK_ACCURACY", 
                                "title": "BLE Sleep Clock Accuracy", 
                                "type": "choice"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": null, 
                                "id": "BTDM_BLE_SLEEP_CLOCK_ACCURACY_INDEX_EFF", 
                                "name": "BTDM_BLE_SLEEP_CLOCK_ACCURACY_INDEX_EFF", 
                                "range": null, 
                                "title": null, 
                                "type": "int"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTDM_SCAN_DUPL_TYPE>", 
                                                "help": "This way is to use advertiser address filtering. The adv packet of the same address is only\nallowed to be reported once\n", 
                                                "id": "BTDM_SCAN_DUPL_TYPE_DEVICE", 
                                                "name": "BTDM_SCAN_DUPL_TYPE_DEVICE", 
                                                "range": null, 
                                                "title": "Scan Duplicate By Device Address", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTDM_SCAN_DUPL_TYPE>", 
                                                "help": "This way is to use advertising data filtering. All same advertising data only allow to be reported\nonce even though they are from different devices.\n", 
                                                "id": "BTDM_SCAN_DUPL_TYPE_DATA", 
                                                "name": "BTDM_SCAN_DUPL_TYPE_DATA", 
                                                "range": null, 
                                                "title": "Scan Duplicate By Advertising Data", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTDM_SCAN_DUPL_TYPE>", 
                                                "help": "This way is to use advertising data and device address filtering. All different adv packets with\nthe same address are allowed to be reported.\n", 
                                                "id": "BTDM_SCAN_DUPL_TYPE_DATA_DEVICE", 
                                                "name": "BTDM_SCAN_DUPL_TYPE_DATA_DEVICE", 
                                                "range": null, 
                                                "title": "Scan Duplicate By Device Address And Advertising Data", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BTDM_BLE_SCAN_DUPL", 
                                        "help": "Scan duplicate have three ways. one is \"Scan Duplicate By Device Address\", This way is to use\nadvertiser address filtering. The adv packet of the same address is only allowed to be reported once.\nAnother way is \"Scan Duplicate By Device Address And Advertising Data\". This way is to use advertising\ndata and device address filtering. All different adv packets with the same address are allowed to be\nreported. The last way is \"Scan Duplicate By Advertising Data\". This way is to use advertising data\nfiltering. All same advertising data only allow to be reported once even though they are from\ndifferent devices.\n", 
                                        "id": "component-config-bluetooth-bluetooth-controller-ble-scan-duplicate-options-scan-duplicate-type", 
                                        "name": "BTDM_SCAN_DUPL_TYPE", 
                                        "title": "Scan Duplicate Type", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BTDM_BLE_SCAN_DUPL", 
                                        "help": null, 
                                        "id": "BTDM_SCAN_DUPL_TYPE", 
                                        "name": "BTDM_SCAN_DUPL_TYPE", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BTDM_BLE_SCAN_DUPL", 
                                        "help": "Maximum number of devices which can be recorded in scan duplicate filter.\nWhen the maximum amount of device in the filter is reached, the cache will be refreshed.\n", 
                                        "id": "BTDM_SCAN_DUPL_CACHE_SIZE", 
                                        "name": "BTDM_SCAN_DUPL_CACHE_SIZE", 
                                        "range": null, 
                                        "title": "Maximum number of devices in scan duplicate filter", 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "BTDM_BLE_MESH_SCAN_DUPL_EN", 
                                                "help": "Maximum number of adv packets which can be recorded in duplicate scan cache for BLE Mesh.\nWhen the maximum amount of device in the filter is reached, the cache will be refreshed.\n", 
                                                "id": "BTDM_MESH_DUPL_SCAN_CACHE_SIZE", 
                                                "name": "BTDM_MESH_DUPL_SCAN_CACHE_SIZE", 
                                                "range": null, 
                                                "title": "Maximum number of Mesh adv packets in scan duplicate filter", 
                                                "type": "int"
                                            }
                                        ], 
                                        "depends_on": "BTDM_BLE_SCAN_DUPL", 
                                        "help": "This enables the BLE scan duplicate for special BLE Mesh scan.\n", 
                                        "id": "BTDM_BLE_MESH_SCAN_DUPL_EN", 
                                        "name": "BTDM_BLE_MESH_SCAN_DUPL_EN", 
                                        "range": null, 
                                        "title": "Special duplicate scan mechanism for BLE Mesh scan", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BTDM_CTRL_MODE_BTDM || BTDM_CTRL_MODE_BLE_ONLY", 
                                "help": "This select enables parameters setting of BLE scan duplicate.\n", 
                                "id": "BTDM_BLE_SCAN_DUPL", 
                                "name": "BTDM_BLE_SCAN_DUPL", 
                                "range": null, 
                                "title": "BLE Scan Duplicate Options", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BTDM_CTRL_MODE_BLE_ONLY || BTDM_CTRL_MODE_BTDM", 
                                "help": "The full scan function is mainly used to provide BLE scan performance.\nThis is required for scenes with high scan performance requirements, such as BLE Mesh scenes.\n", 
                                "id": "BTDM_CTRL_FULL_SCAN_SUPPORTED", 
                                "name": "BTDM_CTRL_FULL_SCAN_SUPPORTED", 
                                "range": null, 
                                "title": "BLE full scan feature supported", 
                                "type": "bool"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "BTDM_BLE_ADV_REPORT_FLOW_CTRL_SUPP", 
                                        "help": "The number of unprocessed advertising report that Bluedroid can save.If you set\n`BTDM_BLE_ADV_REPORT_FLOW_CTRL_NUM` to a small value, this may cause adv packets lost.\nIf you set `BTDM_BLE_ADV_REPORT_FLOW_CTRL_NUM` to a large value, Bluedroid may cache a\nlot of adv packets and this may cause system memory run out. For example, if you set\nit to 50, the maximum memory consumed by host is 35 * 50 bytes. Please set\n`BTDM_BLE_ADV_REPORT_FLOW_CTRL_NUM` according to your system free memory and handle adv\npackets as fast as possible, otherwise it will cause adv packets lost.\n", 
                                        "id": "BTDM_BLE_ADV_REPORT_FLOW_CTRL_NUM", 
                                        "name": "BTDM_BLE_ADV_REPORT_FLOW_CTRL_NUM", 
                                        "range": null, 
                                        "title": "BLE adv report flow control number", 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BTDM_BLE_ADV_REPORT_FLOW_CTRL_SUPP", 
                                        "help": "When adv report flow control is enabled, The ADV lost event will be generated when the number\nof ADV packets lost in the controller reaches this threshold. It is better to set a larger value.\nIf you set `BTDM_BLE_ADV_REPORT_DISCARD_THRSHOLD` to a small value or printf every adv lost event, it\nmay cause adv packets lost more.\n", 
                                        "id": "BTDM_BLE_ADV_REPORT_DISCARD_THRSHOLD", 
                                        "name": "BTDM_BLE_ADV_REPORT_DISCARD_THRSHOLD", 
                                        "range": null, 
                                        "title": "BLE adv lost event threshold value", 
                                        "type": "int"
                                    }
                                ], 
                                "depends_on": "BTDM_CTRL_MODE_BTDM || BTDM_CTRL_MODE_BLE_ONLY", 
                                "help": "The function is mainly used to enable flow control for advertising reports. When it is enabled,\nadvertising reports will be discarded by the controller if the number of unprocessed advertising\nreports exceeds the size of BLE adv report flow control.\n", 
                                "id": "BTDM_BLE_ADV_REPORT_FLOW_CTRL_SUPP", 
                                "name": "BTDM_BLE_ADV_REPORT_FLOW_CTRL_SUPP", 
                                "range": null, 
                                "title": "BLE adv report flow control supported", 
                                "type": "bool"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "BTDM_COEX_BT_OPTIONS", 
                                        "help": "Improve BLE ADV coexistence priority to make it better performance.\nFor example, BLE mesh need to enable this option to improve BLE adv performance.\n", 
                                        "id": "BTDM_COEX_BLE_ADV_HIGH_PRIORITY", 
                                        "name": "BTDM_COEX_BLE_ADV_HIGH_PRIORITY", 
                                        "range": null, 
                                        "title": "Improve BLE ADV priority for WiFi & BLE coexistence", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "ESP32_WIFI_SW_COEXIST_ENABLE", 
                                "help": "Options of Bluetooth Side of WiFi and bluetooth coexistence.\n", 
                                "id": "BTDM_COEX_BT_OPTIONS", 
                                "is_menuconfig": true, 
                                "name": "BTDM_COEX_BT_OPTIONS", 
                                "range": null, 
                                "title": "Coexistence Bluetooth Side Options", 
                                "type": "menu"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-bluetooth-bluetooth-controller", 
                        "title": "Bluetooth controller", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice BT_HOST>", 
                                "help": "This option is recommended for classic Bluetooth or for dual-mode\nusecases\n", 
                                "id": "BT_BLUEDROID_ENABLED", 
                                "name": "BT_BLUEDROID_ENABLED", 
                                "range": null, 
                                "title": "Bluedroid - Dual-mode", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice BT_HOST>", 
                                "help": "This option is recommended for BLE only usecases to save on memory\n", 
                                "id": "BT_NIMBLE_ENABLED", 
                                "name": "BT_NIMBLE_ENABLED", 
                                "range": null, 
                                "title": "NimBLE - BLE only", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice BT_HOST>", 
                                "help": "This option is recommended when you want to communicate directly with the\ncontroller (without any host) or when you are using any other host stack\nnot supported by Espressif (not mentioned here).\n", 
                                "id": "BT_CONTROLLER_ONLY", 
                                "name": "BT_CONTROLLER_ONLY", 
                                "range": null, 
                                "title": "Controller Only", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "BT_ENABLED && BTDM_CTRL_HCI_MODE_VHCI", 
                        "help": "This helps to choose Bluetooth host stack\n", 
                        "id": "component-config-bluetooth-bluetooth-host", 
                        "name": "BT_HOST", 
                        "title": "Bluetooth Host", 
                        "type": "choice"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "BT_BLUEDROID_ENABLED", 
                                "help": "This select btc task stack size\n", 
                                "id": "BT_BTC_TASK_STACK_SIZE", 
                                "name": "BT_BTC_TASK_STACK_SIZE", 
                                "range": null, 
                                "title": "Bluetooth event (callback to application) task stack size", 
                                "type": "int"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BT_BLUEDROID_PINNED_TO_CORE_CHOICE>", 
                                        "help": null, 
                                        "id": "BT_BLUEDROID_PINNED_TO_CORE_0", 
                                        "name": "BT_BLUEDROID_PINNED_TO_CORE_0", 
                                        "range": null, 
                                        "title": "Core 0 (PRO CPU)", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "!FREERTOS_UNICORE && <choice BT_BLUEDROID_PINNED_TO_CORE_CHOICE>", 
                                        "help": null, 
                                        "id": "BT_BLUEDROID_PINNED_TO_CORE_1", 
                                        "name": "BT_BLUEDROID_PINNED_TO_CORE_1", 
                                        "range": null, 
                                        "title": "Core 1 (APP CPU)", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BT_BLUEDROID_ENABLED && !FREERTOS_UNICORE", 
                                "help": "Which the cpu core to run Bluedroid. Can choose core0 and core1.\nCan not specify no-affinity.\n", 
                                "id": "component-config-bluetooth-bluedroid-options-the-cpu-core-which-bluedroid-run", 
                                "name": "BT_BLUEDROID_PINNED_TO_CORE_CHOICE", 
                                "title": "The cpu core which Bluedroid run", 
                                "type": "choice"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_BLUEDROID_ENABLED", 
                                "help": null, 
                                "id": "BT_BLUEDROID_PINNED_TO_CORE", 
                                "name": "BT_BLUEDROID_PINNED_TO_CORE", 
                                "range": null, 
                                "title": null, 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_BLUEDROID_ENABLED", 
                                "help": "This select btu task stack size\n", 
                                "id": "BT_BTU_TASK_STACK_SIZE", 
                                "name": "BT_BTU_TASK_STACK_SIZE", 
                                "range": null, 
                                "title": "Bluetooth Bluedroid Host Stack task stack size", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_BLUEDROID_ENABLED", 
                                "help": "Bluedroid memory debug\n", 
                                "id": "BT_BLUEDROID_MEM_DEBUG", 
                                "name": "BT_BLUEDROID_MEM_DEBUG", 
                                "range": null, 
                                "title": "Bluedroid memory debug", 
                                "type": "bool"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "BT_CLASSIC_ENABLED", 
                                        "help": "Advanced Audio Distrubution Profile\n", 
                                        "id": "BT_A2DP_ENABLE", 
                                        "name": "BT_A2DP_ENABLE", 
                                        "range": null, 
                                        "title": "A2DP", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_CLASSIC_ENABLED", 
                                        "help": "This enables the Serial Port Profile\n", 
                                        "id": "BT_SPP_ENABLED", 
                                        "name": "BT_SPP_ENABLED", 
                                        "range": null, 
                                        "title": "SPP", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [
                                                    {
                                                        "children": [], 
                                                        "depends_on": "<choice BT_HFP_ROLE>", 
                                                        "help": null, 
                                                        "id": "BT_HFP_CLIENT_ENABLE", 
                                                        "name": "BT_HFP_CLIENT_ENABLE", 
                                                        "range": null, 
                                                        "title": "Hands Free Unit", 
                                                        "type": "bool"
                                                    }
                                                ], 
                                                "depends_on": "BT_HFP_ENABLE", 
                                                "help": null, 
                                                "id": "component-config-bluetooth-bluedroid-options-classic-bluetooth-hands-free-handset-profile-hands-free-profile-role-configuration", 
                                                "name": "BT_HFP_ROLE", 
                                                "title": "Hands-free Profile Role configuration", 
                                                "type": "choice"
                                            }, 
                                            {
                                                "children": [
                                                    {
                                                        "children": [], 
                                                        "depends_on": "<choice BT_HFP_AUDIO_DATA_PATH>", 
                                                        "help": null, 
                                                        "id": "BT_HFP_AUDIO_DATA_PATH_PCM", 
                                                        "name": "BT_HFP_AUDIO_DATA_PATH_PCM", 
                                                        "range": null, 
                                                        "title": "PCM", 
                                                        "type": "bool"
                                                    }, 
                                                    {
                                                        "children": [], 
                                                        "depends_on": "<choice BT_HFP_AUDIO_DATA_PATH>", 
                                                        "help": null, 
                                                        "id": "BT_HFP_AUDIO_DATA_PATH_HCI", 
                                                        "name": "BT_HFP_AUDIO_DATA_PATH_HCI", 
                                                        "range": null, 
                                                        "title": "HCI", 
                                                        "type": "bool"
                                                    }
                                                ], 
                                                "depends_on": "BT_HFP_ENABLE", 
                                                "help": "SCO data path, i.e. HCI or PCM. This option is set using API\n\"esp_bredr_sco_datapath_set\" in Bluetooth host. Default SCO data\npath can also be set in Bluetooth Controller.\n", 
                                                "id": "component-config-bluetooth-bluedroid-options-classic-bluetooth-hands-free-handset-profile-audio-sco-data-path", 
                                                "name": "BT_HFP_AUDIO_DATA_PATH", 
                                                "title": "audio(SCO) data path", 
                                                "type": "choice"
                                            }
                                        ], 
                                        "depends_on": "BT_CLASSIC_ENABLED", 
                                        "help": null, 
                                        "id": "BT_HFP_ENABLE", 
                                        "name": "BT_HFP_ENABLE", 
                                        "range": null, 
                                        "title": "Hands Free/Handset Profile", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BT_BLUEDROID_ENABLED", 
                                "help": "For now this option needs \"SMP_ENABLE\" to be set to yes\n", 
                                "id": "BT_CLASSIC_ENABLED", 
                                "name": "BT_CLASSIC_ENABLED", 
                                "range": null, 
                                "title": "Classic Bluetooth", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_HFP_AUDIO_DATA_PATH_HCI", 
                                "help": "This enables Wide Band Speech. Should disable it when SCO data path is PCM.\nOtherwise there will be no data transmited via GPIOs.\n", 
                                "id": "BT_HFP_WBS_ENABLE", 
                                "name": "BT_HFP_WBS_ENABLE", 
                                "range": null, 
                                "title": "Wide Band Speech", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_CLASSIC_ENABLED", 
                                "help": "This enables the Secure Simple Pairing. If disable this option,\nBluedroid will only support Legacy Pairing\n", 
                                "id": "BT_SSP_ENABLED", 
                                "name": "BT_SSP_ENABLED", 
                                "range": null, 
                                "title": "Secure Simple Pairing", 
                                "type": "bool"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [
                                                    {
                                                        "children": [], 
                                                        "depends_on": "<choice BT_GATTS_SEND_SERVICE_CHANGE_MODE>", 
                                                        "help": "Manually send service change indication through API esp_ble_gatts_send_service_change_indication()\n", 
                                                        "id": "BT_GATTS_SEND_SERVICE_CHANGE_MANUAL", 
                                                        "name": "BT_GATTS_SEND_SERVICE_CHANGE_MANUAL", 
                                                        "range": null, 
                                                        "title": "GATTS manually send service change indication", 
                                                        "type": "bool"
                                                    }, 
                                                    {
                                                        "children": [], 
                                                        "depends_on": "<choice BT_GATTS_SEND_SERVICE_CHANGE_MODE>", 
                                                        "help": "Let Bluedroid handle the service change indication internally\n", 
                                                        "id": "BT_GATTS_SEND_SERVICE_CHANGE_AUTO", 
                                                        "name": "BT_GATTS_SEND_SERVICE_CHANGE_AUTO", 
                                                        "range": null, 
                                                        "title": "GATTS automatically send service change indication", 
                                                        "type": "bool"
                                                    }
                                                ], 
                                                "depends_on": "BT_GATTS_ENABLE", 
                                                "help": "Service change indication mode for GATT Server.\n", 
                                                "id": "component-config-bluetooth-bluedroid-options-bluetooth-low-energy-include-gatt-server-module-gatts--gatts-service-change-mode", 
                                                "name": "BT_GATTS_SEND_SERVICE_CHANGE_MODE", 
                                                "title": "GATTS Service Change Mode", 
                                                "type": "choice"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "BT_GATTS_ENABLE", 
                                                "help": null, 
                                                "id": "BT_GATTS_SEND_SERVICE_CHANGE_MODE", 
                                                "name": "BT_GATTS_SEND_SERVICE_CHANGE_MODE", 
                                                "range": null, 
                                                "title": null, 
                                                "type": "int"
                                            }
                                        ], 
                                        "depends_on": "BT_BLE_ENABLED", 
                                        "help": "This option can be disabled when the app work only on gatt client mode\n", 
                                        "id": "BT_GATTS_ENABLE", 
                                        "name": "BT_GATTS_ENABLE", 
                                        "range": null, 
                                        "title": "Include GATT server module(GATTS)", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "BT_GATTC_ENABLE", 
                                                "help": "This select can save gattc cache data to nvs flash\n", 
                                                "id": "BT_GATTC_CACHE_NVS_FLASH", 
                                                "name": "BT_GATTC_CACHE_NVS_FLASH", 
                                                "range": null, 
                                                "title": "Save gattc cache data to nvs flash", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLE_ENABLED", 
                                        "help": "This option can be close when the app work only on gatt server mode\n", 
                                        "id": "BT_GATTC_ENABLE", 
                                        "name": "BT_GATTC_ENABLE", 
                                        "range": null, 
                                        "title": "Include GATT client module(GATTC)", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "BT_BLE_SMP_ENABLE", 
                                                "help": "In order to reduce the pairing time, slave actively initiates connection parameters\nupdate during pairing.\n", 
                                                "id": "BT_SMP_SLAVE_CON_PARAMS_UPD_ENABLE", 
                                                "name": "BT_SMP_SLAVE_CON_PARAMS_UPD_ENABLE", 
                                                "range": null, 
                                                "title": "Slave enable connection parameters update during pairing", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLE_ENABLED", 
                                        "help": "This option can be close when the app not used the ble security connect.\n", 
                                        "id": "BT_BLE_SMP_ENABLE", 
                                        "name": "BT_BLE_SMP_ENABLE", 
                                        "range": null, 
                                        "title": "Include BLE security module(SMP)", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BT_BLUEDROID_ENABLED", 
                                "help": "This enables Bluetooth Low Energy\n", 
                                "id": "BT_BLE_ENABLED", 
                                "name": "BT_BLE_ENABLED", 
                                "range": null, 
                                "title": "Bluetooth Low Energy", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_BLUEDROID_ENABLED", 
                                "help": "This select can save the rodata code size\n", 
                                "id": "BT_STACK_NO_LOG", 
                                "name": "BT_STACK_NO_LOG", 
                                "range": null, 
                                "title": "Disable BT debug logs (minimize bin size)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_HCI_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_HCI_TRACE_LEVEL_NONE", 
                                                "name": "BT_LOG_HCI_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_HCI_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_HCI_TRACE_LEVEL_ERROR", 
                                                "name": "BT_LOG_HCI_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_HCI_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_HCI_TRACE_LEVEL_WARNING", 
                                                "name": "BT_LOG_HCI_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_HCI_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_HCI_TRACE_LEVEL_API", 
                                                "name": "BT_LOG_HCI_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_HCI_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_HCI_TRACE_LEVEL_EVENT", 
                                                "name": "BT_LOG_HCI_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_HCI_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_HCI_TRACE_LEVEL_DEBUG", 
                                                "name": "BT_LOG_HCI_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_HCI_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_HCI_TRACE_LEVEL_VERBOSE", 
                                                "name": "BT_LOG_HCI_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for HCI layer\n", 
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-hci-layer", 
                                        "name": "BT_LOG_HCI_TRACE_LEVEL", 
                                        "title": "HCI layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "id": "BT_LOG_HCI_TRACE_LEVEL", 
                                        "name": "BT_LOG_HCI_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BTM_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BTM_TRACE_LEVEL_NONE", 
                                                "name": "BT_LOG_BTM_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BTM_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BTM_TRACE_LEVEL_ERROR", 
                                                "name": "BT_LOG_BTM_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BTM_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BTM_TRACE_LEVEL_WARNING", 
                                                "name": "BT_LOG_BTM_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BTM_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BTM_TRACE_LEVEL_API", 
                                                "name": "BT_LOG_BTM_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BTM_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BTM_TRACE_LEVEL_EVENT", 
                                                "name": "BT_LOG_BTM_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BTM_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BTM_TRACE_LEVEL_DEBUG", 
                                                "name": "BT_LOG_BTM_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BTM_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BTM_TRACE_LEVEL_VERBOSE", 
                                                "name": "BT_LOG_BTM_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for BTM layer\n", 
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-btm-layer", 
                                        "name": "BT_LOG_BTM_TRACE_LEVEL", 
                                        "title": "BTM layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "id": "BT_LOG_BTM_TRACE_LEVEL", 
                                        "name": "BT_LOG_BTM_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_L2CAP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_L2CAP_TRACE_LEVEL_NONE", 
                                                "name": "BT_LOG_L2CAP_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_L2CAP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_L2CAP_TRACE_LEVEL_ERROR", 
                                                "name": "BT_LOG_L2CAP_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_L2CAP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_L2CAP_TRACE_LEVEL_WARNING", 
                                                "name": "BT_LOG_L2CAP_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_L2CAP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_L2CAP_TRACE_LEVEL_API", 
                                                "name": "BT_LOG_L2CAP_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_L2CAP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_L2CAP_TRACE_LEVEL_EVENT", 
                                                "name": "BT_LOG_L2CAP_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_L2CAP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_L2CAP_TRACE_LEVEL_DEBUG", 
                                                "name": "BT_LOG_L2CAP_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_L2CAP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_L2CAP_TRACE_LEVEL_VERBOSE", 
                                                "name": "BT_LOG_L2CAP_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for L2CAP layer\n", 
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-l2cap-layer", 
                                        "name": "BT_LOG_L2CAP_TRACE_LEVEL", 
                                        "title": "L2CAP layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "id": "BT_LOG_L2CAP_TRACE_LEVEL", 
                                        "name": "BT_LOG_L2CAP_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_RFCOMM_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_RFCOMM_TRACE_LEVEL_NONE", 
                                                "name": "BT_LOG_RFCOMM_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_RFCOMM_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_RFCOMM_TRACE_LEVEL_ERROR", 
                                                "name": "BT_LOG_RFCOMM_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_RFCOMM_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_RFCOMM_TRACE_LEVEL_WARNING", 
                                                "name": "BT_LOG_RFCOMM_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_RFCOMM_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_RFCOMM_TRACE_LEVEL_API", 
                                                "name": "BT_LOG_RFCOMM_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_RFCOMM_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_RFCOMM_TRACE_LEVEL_EVENT", 
                                                "name": "BT_LOG_RFCOMM_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_RFCOMM_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_RFCOMM_TRACE_LEVEL_DEBUG", 
                                                "name": "BT_LOG_RFCOMM_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_RFCOMM_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_RFCOMM_TRACE_LEVEL_VERBOSE", 
                                                "name": "BT_LOG_RFCOMM_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for RFCOMM layer\n", 
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-rfcomm-layer", 
                                        "name": "BT_LOG_RFCOMM_TRACE_LEVEL", 
                                        "title": "RFCOMM layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "id": "BT_LOG_RFCOMM_TRACE_LEVEL", 
                                        "name": "BT_LOG_RFCOMM_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_SDP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_SDP_TRACE_LEVEL_NONE", 
                                                "name": "BT_LOG_SDP_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_SDP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_SDP_TRACE_LEVEL_ERROR", 
                                                "name": "BT_LOG_SDP_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_SDP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_SDP_TRACE_LEVEL_WARNING", 
                                                "name": "BT_LOG_SDP_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_SDP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_SDP_TRACE_LEVEL_API", 
                                                "name": "BT_LOG_SDP_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_SDP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_SDP_TRACE_LEVEL_EVENT", 
                                                "name": "BT_LOG_SDP_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_SDP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_SDP_TRACE_LEVEL_DEBUG", 
                                                "name": "BT_LOG_SDP_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_SDP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_SDP_TRACE_LEVEL_VERBOSE", 
                                                "name": "BT_LOG_SDP_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for SDP layer\n", 
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-sdp-layer", 
                                        "name": "BT_LOG_SDP_TRACE_LEVEL", 
                                        "title": "SDP layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "id": "BT_LOG_SDP_TRACE_LEVEL", 
                                        "name": "BT_LOG_SDP_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_GAP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_GAP_TRACE_LEVEL_NONE", 
                                                "name": "BT_LOG_GAP_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_GAP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_GAP_TRACE_LEVEL_ERROR", 
                                                "name": "BT_LOG_GAP_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_GAP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_GAP_TRACE_LEVEL_WARNING", 
                                                "name": "BT_LOG_GAP_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_GAP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_GAP_TRACE_LEVEL_API", 
                                                "name": "BT_LOG_GAP_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_GAP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_GAP_TRACE_LEVEL_EVENT", 
                                                "name": "BT_LOG_GAP_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_GAP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_GAP_TRACE_LEVEL_DEBUG", 
                                                "name": "BT_LOG_GAP_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_GAP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_GAP_TRACE_LEVEL_VERBOSE", 
                                                "name": "BT_LOG_GAP_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for GAP layer\n", 
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-gap-layer", 
                                        "name": "BT_LOG_GAP_TRACE_LEVEL", 
                                        "title": "GAP layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "id": "BT_LOG_GAP_TRACE_LEVEL", 
                                        "name": "BT_LOG_GAP_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BNEP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BNEP_TRACE_LEVEL_NONE", 
                                                "name": "BT_LOG_BNEP_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BNEP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BNEP_TRACE_LEVEL_ERROR", 
                                                "name": "BT_LOG_BNEP_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BNEP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BNEP_TRACE_LEVEL_WARNING", 
                                                "name": "BT_LOG_BNEP_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BNEP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BNEP_TRACE_LEVEL_API", 
                                                "name": "BT_LOG_BNEP_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BNEP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BNEP_TRACE_LEVEL_EVENT", 
                                                "name": "BT_LOG_BNEP_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BNEP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BNEP_TRACE_LEVEL_DEBUG", 
                                                "name": "BT_LOG_BNEP_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BNEP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BNEP_TRACE_LEVEL_VERBOSE", 
                                                "name": "BT_LOG_BNEP_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for BNEP layer\n", 
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-bnep-layer", 
                                        "name": "BT_LOG_BNEP_TRACE_LEVEL", 
                                        "title": "BNEP layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "id": "BT_LOG_BNEP_TRACE_LEVEL", 
                                        "name": "BT_LOG_BNEP_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_PAN_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_PAN_TRACE_LEVEL_NONE", 
                                                "name": "BT_LOG_PAN_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_PAN_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_PAN_TRACE_LEVEL_ERROR", 
                                                "name": "BT_LOG_PAN_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_PAN_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_PAN_TRACE_LEVEL_WARNING", 
                                                "name": "BT_LOG_PAN_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_PAN_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_PAN_TRACE_LEVEL_API", 
                                                "name": "BT_LOG_PAN_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_PAN_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_PAN_TRACE_LEVEL_EVENT", 
                                                "name": "BT_LOG_PAN_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_PAN_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_PAN_TRACE_LEVEL_DEBUG", 
                                                "name": "BT_LOG_PAN_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_PAN_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_PAN_TRACE_LEVEL_VERBOSE", 
                                                "name": "BT_LOG_PAN_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for PAN layer\n", 
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-pan-layer", 
                                        "name": "BT_LOG_PAN_TRACE_LEVEL", 
                                        "title": "PAN layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "id": "BT_LOG_PAN_TRACE_LEVEL", 
                                        "name": "BT_LOG_PAN_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_A2D_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_A2D_TRACE_LEVEL_NONE", 
                                                "name": "BT_LOG_A2D_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_A2D_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_A2D_TRACE_LEVEL_ERROR", 
                                                "name": "BT_LOG_A2D_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_A2D_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_A2D_TRACE_LEVEL_WARNING", 
                                                "name": "BT_LOG_A2D_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_A2D_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_A2D_TRACE_LEVEL_API", 
                                                "name": "BT_LOG_A2D_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_A2D_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_A2D_TRACE_LEVEL_EVENT", 
                                                "name": "BT_LOG_A2D_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_A2D_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_A2D_TRACE_LEVEL_DEBUG", 
                                                "name": "BT_LOG_A2D_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_A2D_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_A2D_TRACE_LEVEL_VERBOSE", 
                                                "name": "BT_LOG_A2D_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for A2D layer\n", 
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-a2d-layer", 
                                        "name": "BT_LOG_A2D_TRACE_LEVEL", 
                                        "title": "A2D layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "id": "BT_LOG_A2D_TRACE_LEVEL", 
                                        "name": "BT_LOG_A2D_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_AVDT_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_AVDT_TRACE_LEVEL_NONE", 
                                                "name": "BT_LOG_AVDT_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_AVDT_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_AVDT_TRACE_LEVEL_ERROR", 
                                                "name": "BT_LOG_AVDT_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_AVDT_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_AVDT_TRACE_LEVEL_WARNING", 
                                                "name": "BT_LOG_AVDT_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_AVDT_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_AVDT_TRACE_LEVEL_API", 
                                                "name": "BT_LOG_AVDT_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_AVDT_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_AVDT_TRACE_LEVEL_EVENT", 
                                                "name": "BT_LOG_AVDT_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_AVDT_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_AVDT_TRACE_LEVEL_DEBUG", 
                                                "name": "BT_LOG_AVDT_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_AVDT_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_AVDT_TRACE_LEVEL_VERBOSE", 
                                                "name": "BT_LOG_AVDT_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for AVDT layer\n", 
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-avdt-layer", 
                                        "name": "BT_LOG_AVDT_TRACE_LEVEL", 
                                        "title": "AVDT layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "id": "BT_LOG_AVDT_TRACE_LEVEL", 
                                        "name": "BT_LOG_AVDT_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_AVCT_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_AVCT_TRACE_LEVEL_NONE", 
                                                "name": "BT_LOG_AVCT_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_AVCT_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_AVCT_TRACE_LEVEL_ERROR", 
                                                "name": "BT_LOG_AVCT_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_AVCT_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_AVCT_TRACE_LEVEL_WARNING", 
                                                "name": "BT_LOG_AVCT_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_AVCT_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_AVCT_TRACE_LEVEL_API", 
                                                "name": "BT_LOG_AVCT_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_AVCT_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_AVCT_TRACE_LEVEL_EVENT", 
                                                "name": "BT_LOG_AVCT_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_AVCT_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_AVCT_TRACE_LEVEL_DEBUG", 
                                                "name": "BT_LOG_AVCT_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_AVCT_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_AVCT_TRACE_LEVEL_VERBOSE", 
                                                "name": "BT_LOG_AVCT_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for AVCT layer\n", 
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-avct-layer", 
                                        "name": "BT_LOG_AVCT_TRACE_LEVEL", 
                                        "title": "AVCT layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "id": "BT_LOG_AVCT_TRACE_LEVEL", 
                                        "name": "BT_LOG_AVCT_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_AVRC_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_AVRC_TRACE_LEVEL_NONE", 
                                                "name": "BT_LOG_AVRC_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_AVRC_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_AVRC_TRACE_LEVEL_ERROR", 
                                                "name": "BT_LOG_AVRC_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_AVRC_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_AVRC_TRACE_LEVEL_WARNING", 
                                                "name": "BT_LOG_AVRC_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_AVRC_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_AVRC_TRACE_LEVEL_API", 
                                                "name": "BT_LOG_AVRC_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_AVRC_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_AVRC_TRACE_LEVEL_EVENT", 
                                                "name": "BT_LOG_AVRC_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_AVRC_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_AVRC_TRACE_LEVEL_DEBUG", 
                                                "name": "BT_LOG_AVRC_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_AVRC_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_AVRC_TRACE_LEVEL_VERBOSE", 
                                                "name": "BT_LOG_AVRC_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for AVRC layer\n", 
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-avrc-layer", 
                                        "name": "BT_LOG_AVRC_TRACE_LEVEL", 
                                        "title": "AVRC layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "id": "BT_LOG_AVRC_TRACE_LEVEL", 
                                        "name": "BT_LOG_AVRC_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_MCA_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_MCA_TRACE_LEVEL_NONE", 
                                                "name": "BT_LOG_MCA_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_MCA_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_MCA_TRACE_LEVEL_ERROR", 
                                                "name": "BT_LOG_MCA_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_MCA_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_MCA_TRACE_LEVEL_WARNING", 
                                                "name": "BT_LOG_MCA_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_MCA_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_MCA_TRACE_LEVEL_API", 
                                                "name": "BT_LOG_MCA_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_MCA_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_MCA_TRACE_LEVEL_EVENT", 
                                                "name": "BT_LOG_MCA_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_MCA_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_MCA_TRACE_LEVEL_DEBUG", 
                                                "name": "BT_LOG_MCA_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_MCA_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_MCA_TRACE_LEVEL_VERBOSE", 
                                                "name": "BT_LOG_MCA_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for MCA layer\n", 
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-mca-layer", 
                                        "name": "BT_LOG_MCA_TRACE_LEVEL", 
                                        "title": "MCA layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "id": "BT_LOG_MCA_TRACE_LEVEL", 
                                        "name": "BT_LOG_MCA_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_HID_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_HID_TRACE_LEVEL_NONE", 
                                                "name": "BT_LOG_HID_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_HID_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_HID_TRACE_LEVEL_ERROR", 
                                                "name": "BT_LOG_HID_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_HID_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_HID_TRACE_LEVEL_WARNING", 
                                                "name": "BT_LOG_HID_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_HID_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_HID_TRACE_LEVEL_API", 
                                                "name": "BT_LOG_HID_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_HID_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_HID_TRACE_LEVEL_EVENT", 
                                                "name": "BT_LOG_HID_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_HID_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_HID_TRACE_LEVEL_DEBUG", 
                                                "name": "BT_LOG_HID_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_HID_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_HID_TRACE_LEVEL_VERBOSE", 
                                                "name": "BT_LOG_HID_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for HID layer\n", 
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-hid-layer", 
                                        "name": "BT_LOG_HID_TRACE_LEVEL", 
                                        "title": "HID layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "id": "BT_LOG_HID_TRACE_LEVEL", 
                                        "name": "BT_LOG_HID_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_APPL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_APPL_TRACE_LEVEL_NONE", 
                                                "name": "BT_LOG_APPL_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_APPL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_APPL_TRACE_LEVEL_ERROR", 
                                                "name": "BT_LOG_APPL_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_APPL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_APPL_TRACE_LEVEL_WARNING", 
                                                "name": "BT_LOG_APPL_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_APPL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_APPL_TRACE_LEVEL_API", 
                                                "name": "BT_LOG_APPL_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_APPL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_APPL_TRACE_LEVEL_EVENT", 
                                                "name": "BT_LOG_APPL_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_APPL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_APPL_TRACE_LEVEL_DEBUG", 
                                                "name": "BT_LOG_APPL_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_APPL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_APPL_TRACE_LEVEL_VERBOSE", 
                                                "name": "BT_LOG_APPL_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for APPL layer\n", 
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-appl-layer", 
                                        "name": "BT_LOG_APPL_TRACE_LEVEL", 
                                        "title": "APPL layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "id": "BT_LOG_APPL_TRACE_LEVEL", 
                                        "name": "BT_LOG_APPL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_GATT_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_GATT_TRACE_LEVEL_NONE", 
                                                "name": "BT_LOG_GATT_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_GATT_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_GATT_TRACE_LEVEL_ERROR", 
                                                "name": "BT_LOG_GATT_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_GATT_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_GATT_TRACE_LEVEL_WARNING", 
                                                "name": "BT_LOG_GATT_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_GATT_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_GATT_TRACE_LEVEL_API", 
                                                "name": "BT_LOG_GATT_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_GATT_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_GATT_TRACE_LEVEL_EVENT", 
                                                "name": "BT_LOG_GATT_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_GATT_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_GATT_TRACE_LEVEL_DEBUG", 
                                                "name": "BT_LOG_GATT_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_GATT_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_GATT_TRACE_LEVEL_VERBOSE", 
                                                "name": "BT_LOG_GATT_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for GATT layer\n", 
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-gatt-layer", 
                                        "name": "BT_LOG_GATT_TRACE_LEVEL", 
                                        "title": "GATT layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "id": "BT_LOG_GATT_TRACE_LEVEL", 
                                        "name": "BT_LOG_GATT_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_SMP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_SMP_TRACE_LEVEL_NONE", 
                                                "name": "BT_LOG_SMP_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_SMP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_SMP_TRACE_LEVEL_ERROR", 
                                                "name": "BT_LOG_SMP_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_SMP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_SMP_TRACE_LEVEL_WARNING", 
                                                "name": "BT_LOG_SMP_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_SMP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_SMP_TRACE_LEVEL_API", 
                                                "name": "BT_LOG_SMP_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_SMP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_SMP_TRACE_LEVEL_EVENT", 
                                                "name": "BT_LOG_SMP_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_SMP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_SMP_TRACE_LEVEL_DEBUG", 
                                                "name": "BT_LOG_SMP_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_SMP_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_SMP_TRACE_LEVEL_VERBOSE", 
                                                "name": "BT_LOG_SMP_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for SMP layer\n", 
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-smp-layer", 
                                        "name": "BT_LOG_SMP_TRACE_LEVEL", 
                                        "title": "SMP layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "id": "BT_LOG_SMP_TRACE_LEVEL", 
                                        "name": "BT_LOG_SMP_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BTIF_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BTIF_TRACE_LEVEL_NONE", 
                                                "name": "BT_LOG_BTIF_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BTIF_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BTIF_TRACE_LEVEL_ERROR", 
                                                "name": "BT_LOG_BTIF_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BTIF_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BTIF_TRACE_LEVEL_WARNING", 
                                                "name": "BT_LOG_BTIF_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BTIF_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BTIF_TRACE_LEVEL_API", 
                                                "name": "BT_LOG_BTIF_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BTIF_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BTIF_TRACE_LEVEL_EVENT", 
                                                "name": "BT_LOG_BTIF_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BTIF_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BTIF_TRACE_LEVEL_DEBUG", 
                                                "name": "BT_LOG_BTIF_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BTIF_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BTIF_TRACE_LEVEL_VERBOSE", 
                                                "name": "BT_LOG_BTIF_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for BTIF layer\n", 
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-btif-layer", 
                                        "name": "BT_LOG_BTIF_TRACE_LEVEL", 
                                        "title": "BTIF layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "id": "BT_LOG_BTIF_TRACE_LEVEL", 
                                        "name": "BT_LOG_BTIF_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BTC_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BTC_TRACE_LEVEL_NONE", 
                                                "name": "BT_LOG_BTC_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BTC_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BTC_TRACE_LEVEL_ERROR", 
                                                "name": "BT_LOG_BTC_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BTC_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BTC_TRACE_LEVEL_WARNING", 
                                                "name": "BT_LOG_BTC_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BTC_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BTC_TRACE_LEVEL_API", 
                                                "name": "BT_LOG_BTC_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BTC_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BTC_TRACE_LEVEL_EVENT", 
                                                "name": "BT_LOG_BTC_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BTC_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BTC_TRACE_LEVEL_DEBUG", 
                                                "name": "BT_LOG_BTC_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BTC_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BTC_TRACE_LEVEL_VERBOSE", 
                                                "name": "BT_LOG_BTC_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for BTC layer\n", 
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-btc-layer", 
                                        "name": "BT_LOG_BTC_TRACE_LEVEL", 
                                        "title": "BTC layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "id": "BT_LOG_BTC_TRACE_LEVEL", 
                                        "name": "BT_LOG_BTC_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_OSI_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_OSI_TRACE_LEVEL_NONE", 
                                                "name": "BT_LOG_OSI_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_OSI_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_OSI_TRACE_LEVEL_ERROR", 
                                                "name": "BT_LOG_OSI_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_OSI_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_OSI_TRACE_LEVEL_WARNING", 
                                                "name": "BT_LOG_OSI_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_OSI_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_OSI_TRACE_LEVEL_API", 
                                                "name": "BT_LOG_OSI_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_OSI_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_OSI_TRACE_LEVEL_EVENT", 
                                                "name": "BT_LOG_OSI_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_OSI_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_OSI_TRACE_LEVEL_DEBUG", 
                                                "name": "BT_LOG_OSI_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_OSI_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_OSI_TRACE_LEVEL_VERBOSE", 
                                                "name": "BT_LOG_OSI_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for OSI layer\n", 
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-osi-layer", 
                                        "name": "BT_LOG_OSI_TRACE_LEVEL", 
                                        "title": "OSI layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "id": "BT_LOG_OSI_TRACE_LEVEL", 
                                        "name": "BT_LOG_OSI_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BLUFI_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BLUFI_TRACE_LEVEL_NONE", 
                                                "name": "BT_LOG_BLUFI_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BLUFI_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BLUFI_TRACE_LEVEL_ERROR", 
                                                "name": "BT_LOG_BLUFI_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BLUFI_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BLUFI_TRACE_LEVEL_WARNING", 
                                                "name": "BT_LOG_BLUFI_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BLUFI_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BLUFI_TRACE_LEVEL_API", 
                                                "name": "BT_LOG_BLUFI_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BLUFI_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BLUFI_TRACE_LEVEL_EVENT", 
                                                "name": "BT_LOG_BLUFI_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BLUFI_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BLUFI_TRACE_LEVEL_DEBUG", 
                                                "name": "BT_LOG_BLUFI_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BT_LOG_BLUFI_TRACE_LEVEL>", 
                                                "help": null, 
                                                "id": "BT_LOG_BLUFI_TRACE_LEVEL_VERBOSE", 
                                                "name": "BT_LOG_BLUFI_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for BLUFI layer\n", 
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-blufi-layer", 
                                        "name": "BT_LOG_BLUFI_TRACE_LEVEL", 
                                        "title": "BLUFI layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "id": "BT_LOG_BLUFI_TRACE_LEVEL", 
                                        "name": "BT_LOG_BLUFI_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }
                                ], 
                                "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level", 
                                "title": "BT DEBUG LOG LEVEL", 
                                "type": "menu"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_BLUEDROID_ENABLED", 
                                "help": "Maximum BT/BLE connection count\n", 
                                "id": "BT_ACL_CONNECTIONS", 
                                "name": "BT_ACL_CONNECTIONS", 
                                "range": null, 
                                "title": "BT/BLE MAX ACL CONNECTIONS(1~7)", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_BLUEDROID_ENABLED", 
                                "help": "This select can save the internal RAM if there have the PSRAM\n", 
                                "id": "BT_ALLOCATION_FROM_SPIRAM_FIRST", 
                                "name": "BT_ALLOCATION_FROM_SPIRAM_FIRST", 
                                "range": null, 
                                "title": "BT/BLE will first malloc the memory from the PSRAM", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_BLUEDROID_ENABLED", 
                                "help": "This select can make the allocation of memory will become more flexible\n", 
                                "id": "BT_BLE_DYNAMIC_ENV_MEMORY", 
                                "name": "BT_BLE_DYNAMIC_ENV_MEMORY", 
                                "range": null, 
                                "title": "Use dynamic memory allocation in BT/BLE stack", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_BLUEDROID_ENABLED", 
                                "help": "When scanning and scan duplicate is not enabled, if there are a lot of adv packets around\nor application layer handling adv packets is slow, it will cause the controller memory\nto run out. if enabled, adv packets will be lost when host queue is congested.\n", 
                                "id": "BT_BLE_HOST_QUEUE_CONG_CHECK", 
                                "name": "BT_BLE_HOST_QUEUE_CONG_CHECK", 
                                "range": null, 
                                "title": "BLE queue congestion check", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_BLUEDROID_ENABLED", 
                                "help": null, 
                                "id": "BT_SMP_ENABLE", 
                                "name": "BT_SMP_ENABLE", 
                                "range": null, 
                                "title": null, 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_BLUEDROID_ENABLED && (BTDM_CTRL_MODE_BTDM || BTDM_CTRL_MODE_BLE_ONLY)", 
                                "help": "Originally, when doing BLE active scan, Bluedroid will not report adv to application layer\nuntil receive scan response. This option is used to disable the behavior. When enable this option,\nBluedroid will report adv data or scan response to application layer immediately.\n\n# Memory reserved at start of DRAM for Bluetooth stack\n", 
                                "id": "BT_BLE_ACT_SCAN_REP_ADV_SCAN", 
                                "name": "BT_BLE_ACT_SCAN_REP_ADV_SCAN", 
                                "range": null, 
                                "title": "Report adv data and scan response individually when BLE active scan", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_BLUEDROID_ENABLED", 
                                "help": "Bluetooth Connection establishment maximum time, if connection time exceeds this value, the connection\nestablishment fails, ESP_GATTC_OPEN_EVT or ESP_GATTS_OPEN_EVT is triggered.\n", 
                                "id": "BT_BLE_ESTAB_LINK_CONN_TOUT", 
                                "name": "BT_BLE_ESTAB_LINK_CONN_TOUT", 
                                "range": null, 
                                "title": "Timeout of BLE connection establishment", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": null, 
                                "id": "BT_RESERVE_DRAM", 
                                "name": "BT_RESERVE_DRAM", 
                                "range": null, 
                                "title": null, 
                                "type": "hex"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-bluetooth-bluedroid-options", 
                        "title": "Bluedroid Options", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BT_NIMBLE_MEM_ALLOC_MODE>", 
                                        "help": null, 
                                        "id": "BT_NIMBLE_MEM_ALLOC_MODE_INTERNAL", 
                                        "name": "BT_NIMBLE_MEM_ALLOC_MODE_INTERNAL", 
                                        "range": null, 
                                        "title": "Internal memory", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP32_SPIRAM_SUPPORT && <choice BT_NIMBLE_MEM_ALLOC_MODE>", 
                                        "help": null, 
                                        "id": "BT_NIMBLE_MEM_ALLOC_MODE_EXTERNAL", 
                                        "name": "BT_NIMBLE_MEM_ALLOC_MODE_EXTERNAL", 
                                        "range": null, 
                                        "title": "External SPIRAM", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BT_NIMBLE_MEM_ALLOC_MODE>", 
                                        "help": null, 
                                        "id": "BT_NIMBLE_MEM_ALLOC_MODE_DEFAULT", 
                                        "name": "BT_NIMBLE_MEM_ALLOC_MODE_DEFAULT", 
                                        "range": null, 
                                        "title": "Default alloc mode", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": null, 
                                "help": "Allocation strategy for NimBLE host stack, essentially provides ability to\nallocate all required dynamic allocations from,\n\n- Internal DRAM memory only\n- External SPIRAM memory only\n- Either internal or external memory based on default malloc()\n  behavior in ESP-IDF\n\nRecommended mode here is always internal, since that is most preferred\nfrom security perspective. But if application requirement does not\nallow sufficient free internal memory then alternate mode can be\nselected.\n", 
                                "id": "component-config-bluetooth-nimble-options-memory-allocation-strategy", 
                                "name": "BT_NIMBLE_MEM_ALLOC_MODE", 
                                "title": "Memory allocation strategy", 
                                "type": "choice"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "Defines maximum number of concurrent BLE connections\n", 
                                "id": "BT_NIMBLE_MAX_CONNECTIONS", 
                                "name": "BT_NIMBLE_MAX_CONNECTIONS", 
                                "range": null, 
                                "title": "Maximum number of concurrent connections", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "Defines maximum number of bonds to save for peer security and our security\n", 
                                "id": "BT_NIMBLE_MAX_BONDS", 
                                "name": "BT_NIMBLE_MAX_BONDS", 
                                "range": null, 
                                "title": "Maximum number of bonds to save across reboots", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "Defines maximum number of CCC descriptors to save\n", 
                                "id": "BT_NIMBLE_MAX_CCCDS", 
                                "name": "BT_NIMBLE_MAX_CCCDS", 
                                "range": null, 
                                "title": "Maximum number of CCC descriptors to save across reboots", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "Defines maximum number of BLE Connection Oriented Channels. When set to (0), BLE COC is not compiled in\n", 
                                "id": "BT_NIMBLE_L2CAP_COC_MAX_NUM", 
                                "name": "BT_NIMBLE_L2CAP_COC_MAX_NUM", 
                                "range": null, 
                                "title": "Maximum number of connection oriented channels", 
                                "type": "int"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BT_NIMBLE_PINNED_TO_CORE_CHOICE>", 
                                        "help": null, 
                                        "id": "BT_NIMBLE_PINNED_TO_CORE_0", 
                                        "name": "BT_NIMBLE_PINNED_TO_CORE_0", 
                                        "range": null, 
                                        "title": "Core 0 (PRO CPU)", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "!FREERTOS_UNICORE && <choice BT_NIMBLE_PINNED_TO_CORE_CHOICE>", 
                                        "help": null, 
                                        "id": "BT_NIMBLE_PINNED_TO_CORE_1", 
                                        "name": "BT_NIMBLE_PINNED_TO_CORE_1", 
                                        "range": null, 
                                        "title": "Core 1 (APP CPU)", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BT_NIMBLE_ENABLED && !FREERTOS_UNICORE", 
                                "help": "The CPU core on which NimBLE host will run. You can choose Core 0 or Core 1.\nCannot specify no-affinity\n", 
                                "id": "component-config-bluetooth-nimble-options-the-cpu-core-on-which-nimble-host-will-run", 
                                "name": "BT_NIMBLE_PINNED_TO_CORE_CHOICE", 
                                "title": "The CPU core on which NimBLE host will run", 
                                "type": "choice"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": null, 
                                "id": "BT_NIMBLE_PINNED_TO_CORE", 
                                "name": "BT_NIMBLE_PINNED_TO_CORE", 
                                "range": null, 
                                "title": null, 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "This configures stack size of NimBLE host task\n", 
                                "id": "BT_NIMBLE_TASK_STACK_SIZE", 
                                "name": "BT_NIMBLE_TASK_STACK_SIZE", 
                                "range": null, 
                                "title": "NimBLE Host task stack size", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": null, 
                                "id": "BT_NIMBLE_ROLE_CENTRAL", 
                                "name": "BT_NIMBLE_ROLE_CENTRAL", 
                                "range": null, 
                                "title": "Enable BLE Central role", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": null, 
                                "id": "BT_NIMBLE_ROLE_PERIPHERAL", 
                                "name": "BT_NIMBLE_ROLE_PERIPHERAL", 
                                "range": null, 
                                "title": "Enable BLE Peripheral role", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": null, 
                                "id": "BT_NIMBLE_ROLE_BROADCASTER", 
                                "name": "BT_NIMBLE_ROLE_BROADCASTER", 
                                "range": null, 
                                "title": "Enable BLE Broadcaster role", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": null, 
                                "id": "BT_NIMBLE_ROLE_OBSERVER", 
                                "name": "BT_NIMBLE_ROLE_OBSERVER", 
                                "range": null, 
                                "title": "Enable BLE Observer role", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "Enable this flag to make bonding persistent across device reboots\n", 
                                "id": "BT_NIMBLE_NVS_PERSIST", 
                                "name": "BT_NIMBLE_NVS_PERSIST", 
                                "range": null, 
                                "title": "Persist the BLE Bonding keys in NVS", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "Enable security manager legacy pairing\n", 
                                "id": "BT_NIMBLE_SM_LEGACY", 
                                "name": "BT_NIMBLE_SM_LEGACY", 
                                "range": null, 
                                "title": "Security manager legacy pairing", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "Enable security manager secure connections\n", 
                                "id": "BT_NIMBLE_SM_SC", 
                                "name": "BT_NIMBLE_SM_SC", 
                                "range": null, 
                                "title": "Security manager secure connections (4.2)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "This enables extra runtime asserts and host debugging\n", 
                                "id": "BT_NIMBLE_DEBUG", 
                                "name": "BT_NIMBLE_DEBUG", 
                                "range": null, 
                                "title": "Enable extra runtime asserts and host debugging", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_SM_SC", 
                                "help": "If this option is enabled, SM uses predefined DH key pair as described\nin Core Specification, Vol. 3, Part H, 2.3.5.6.1. This allows to\ndecrypt air traffic easily and thus should only be used for debugging.\n", 
                                "id": "BT_NIMBLE_SM_SC_DEBUG_KEYS", 
                                "name": "BT_NIMBLE_SM_SC_DEBUG_KEYS", 
                                "range": null, 
                                "title": "Use predefined public-private key pair", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "The Device Name characteristic shall contain the name of the device as an UTF-8 string.\nThis name can be changed by using API ble_svc_gap_device_name_set()\n", 
                                "id": "BT_NIMBLE_SVC_GAP_DEVICE_NAME", 
                                "name": "BT_NIMBLE_SVC_GAP_DEVICE_NAME", 
                                "range": null, 
                                "title": "BLE GAP default device name", 
                                "type": "string"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "Device Name characteristic value shall be 0 to 248 octets in length\n", 
                                "id": "BT_NIMBLE_GAP_DEVICE_NAME_MAX_LEN", 
                                "name": "BT_NIMBLE_GAP_DEVICE_NAME_MAX_LEN", 
                                "range": null, 
                                "title": "Maximum length of BLE device name in octets", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "This is the default value of ATT MTU indicated by the device during an ATT MTU exchange.\nThis value can be changed using API ble_att_set_preferred_mtu()\n", 
                                "id": "BT_NIMBLE_ATT_PREFERRED_MTU", 
                                "name": "BT_NIMBLE_ATT_PREFERRED_MTU", 
                                "range": null, 
                                "title": "Preferred MTU size in octets", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "Standard BLE GAP Appearance value in HEX format e.g. 0x02C0\n", 
                                "id": "BT_NIMBLE_SVC_GAP_APPEARANCE", 
                                "name": "BT_NIMBLE_SVC_GAP_APPEARANCE", 
                                "range": null, 
                                "title": "External appearance of the device", 
                                "type": "hex"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "The number of ACL data buffers.\n", 
                                "id": "BT_NIMBLE_ACL_BUF_COUNT", 
                                "name": "BT_NIMBLE_ACL_BUF_COUNT", 
                                "range": null, 
                                "title": "ACL Buffer count", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "This is the maximum size of the data portion of HCI ACL data packets.\nIt does not include the HCI data header (of 4 bytes)\n", 
                                "id": "BT_NIMBLE_ACL_BUF_SIZE", 
                                "name": "BT_NIMBLE_ACL_BUF_SIZE", 
                                "range": null, 
                                "title": "ACL Buffer size", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "This is the size of each HCI event buffer in bytes\n", 
                                "id": "BT_NIMBLE_HCI_EVT_BUF_SIZE", 
                                "name": "BT_NIMBLE_HCI_EVT_BUF_SIZE", 
                                "range": null, 
                                "title": "HCI Event Buffer size", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "This is the high priority HCI events' buffer size. High-priority\nevent buffers are for everything except advertising reports. If there\nare no free high-priority event buffers then host will try to allocate a\nlow-priority buffer instead\n", 
                                "id": "BT_NIMBLE_HCI_EVT_HI_BUF_COUNT", 
                                "name": "BT_NIMBLE_HCI_EVT_HI_BUF_COUNT", 
                                "range": null, 
                                "title": "High Priority HCI Event Buffer count", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "This is the low priority HCI events' buffer size. Low-priority event\nbuffers are only used for advertising reports. If there are no free\nlow-priority event buffers, then an incoming advertising report will\nget dropped\n", 
                                "id": "BT_NIMBLE_HCI_EVT_LO_BUF_COUNT", 
                                "name": "BT_NIMBLE_HCI_EVT_LO_BUF_COUNT", 
                                "range": null, 
                                "title": "Low Priority HCI Event Buffer count", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "MSYS is a system level mbuf registry. For prepare write & prepare\nresponses MBUFs are allocated out of msys_1 pool. For NIMBLE_MESH\nenabled cases, this block count is increased by 8 than user defined\ncount.\n", 
                                "id": "BT_NIMBLE_MSYS1_BLOCK_COUNT", 
                                "name": "BT_NIMBLE_MSYS1_BLOCK_COUNT", 
                                "range": null, 
                                "title": "MSYS_1 Block Count", 
                                "type": "int"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "BT_NIMBLE_HS_FLOW_CTRL", 
                                        "help": "Host flow control interval in msecs\n", 
                                        "id": "BT_NIMBLE_HS_FLOW_CTRL_ITVL", 
                                        "name": "BT_NIMBLE_HS_FLOW_CTRL_ITVL", 
                                        "range": null, 
                                        "title": "Host Flow control interval", 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_NIMBLE_HS_FLOW_CTRL", 
                                        "help": "Host flow control threshold, if the number of free buffers are at or\nbelow this threshold, send an immediate number-of-completed-packets\nevent\n", 
                                        "id": "BT_NIMBLE_HS_FLOW_CTRL_THRESH", 
                                        "name": "BT_NIMBLE_HS_FLOW_CTRL_THRESH", 
                                        "range": null, 
                                        "title": "Host Flow control threshold", 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_NIMBLE_HS_FLOW_CTRL", 
                                        "help": "Enable this option to send number-of-completed-packets event to\ncontroller after disconnection\n", 
                                        "id": "BT_NIMBLE_HS_FLOW_CTRL_TX_ON_DISCONNECT", 
                                        "name": "BT_NIMBLE_HS_FLOW_CTRL_TX_ON_DISCONNECT", 
                                        "range": null, 
                                        "title": "Host Flow control on disconnect", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "Enable Host Flow control\n", 
                                "id": "BT_NIMBLE_HS_FLOW_CTRL", 
                                "name": "BT_NIMBLE_HS_FLOW_CTRL", 
                                "range": null, 
                                "title": "Enable Host Flow control", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "Time interval between RPA address change. This is applicable in case of\nHost based RPA\n", 
                                "id": "BT_NIMBLE_RPA_TIMEOUT", 
                                "name": "BT_NIMBLE_RPA_TIMEOUT", 
                                "range": null, 
                                "title": "RPA timeout in seconds", 
                                "type": "int"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "BT_NIMBLE_MESH", 
                                        "help": "Enable proxy. This is automatically set whenever NIMBLE_MESH_PB_GATT or\nNIMBLE_MESH_GATT_PROXY is set\n", 
                                        "id": "BT_NIMBLE_MESH_PROXY", 
                                        "name": "BT_NIMBLE_MESH_PROXY", 
                                        "range": null, 
                                        "title": "Enable mesh proxy functionality", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "BT_NIMBLE_MESH_PROV", 
                                                "help": "Enable this option to allow the device to be provisioned over\nthe advertising bearer\n", 
                                                "id": "BT_NIMBLE_MESH_PB_ADV", 
                                                "name": "BT_NIMBLE_MESH_PB_ADV", 
                                                "range": null, 
                                                "title": "Enable mesh provisioning over advertising bearer", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "BT_NIMBLE_MESH_PROV", 
                                                "help": "Enable this option to allow the device to be provisioned over the GATT\nbearer\n", 
                                                "id": "BT_NIMBLE_MESH_PB_GATT", 
                                                "name": "BT_NIMBLE_MESH_PB_GATT", 
                                                "range": null, 
                                                "title": "Enable mesh provisioning over GATT bearer", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BT_NIMBLE_MESH", 
                                        "help": "Enable mesh provisioning\n", 
                                        "id": "BT_NIMBLE_MESH_PROV", 
                                        "name": "BT_NIMBLE_MESH_PROV", 
                                        "range": null, 
                                        "title": "Enable BLE mesh provisioning", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_NIMBLE_MESH", 
                                        "help": "This option enables support for the Mesh GATT Proxy Service,\ni.e. the ability to act as a proxy between a Mesh GATT Client\nand a Mesh network\n", 
                                        "id": "BT_NIMBLE_MESH_GATT_PROXY", 
                                        "name": "BT_NIMBLE_MESH_GATT_PROXY", 
                                        "range": null, 
                                        "title": "Enable GATT Proxy functionality", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_NIMBLE_MESH", 
                                        "help": "Support for acting as a Mesh Relay Node\n", 
                                        "id": "BT_NIMBLE_MESH_RELAY", 
                                        "name": "BT_NIMBLE_MESH_RELAY", 
                                        "range": null, 
                                        "title": "Enable mesh relay functionality", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_NIMBLE_MESH", 
                                        "help": "Enable this option to be able to act as a Low Power Node\n", 
                                        "id": "BT_NIMBLE_MESH_LOW_POWER", 
                                        "name": "BT_NIMBLE_MESH_LOW_POWER", 
                                        "range": null, 
                                        "title": "Enable mesh low power mode", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_NIMBLE_MESH", 
                                        "help": "Enable this option to be able to act as a Friend Node\n", 
                                        "id": "BT_NIMBLE_MESH_FRIEND", 
                                        "name": "BT_NIMBLE_MESH_FRIEND", 
                                        "range": null, 
                                        "title": "Enable mesh friend functionality", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BT_NIMBLE_MESH", 
                                        "help": "This value defines Bluetooth Mesh device/node name\n", 
                                        "id": "BT_NIMBLE_MESH_DEVICE_NAME", 
                                        "name": "BT_NIMBLE_MESH_DEVICE_NAME", 
                                        "range": null, 
                                        "title": "Set mesh device name", 
                                        "type": "string"
                                    }
                                ], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "Enable BLE Mesh functionality\n", 
                                "id": "BT_NIMBLE_MESH", 
                                "is_menuconfig": true, 
                                "name": "BT_NIMBLE_MESH", 
                                "range": null, 
                                "title": "Enable BLE mesh functionality", 
                                "type": "menu"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BT_NIMBLE_ENABLED", 
                                "help": "Enable this option to choose mbedTLS instead of TinyCrypt for crypto\ncomputations.\n", 
                                "id": "BT_NIMBLE_CRYPTO_STACK_MBEDTLS", 
                                "name": "BT_NIMBLE_CRYPTO_STACK_MBEDTLS", 
                                "range": null, 
                                "title": "Override TinyCrypt with mbedTLS for crypto computations", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-bluetooth-nimble-options", 
                        "title": "NimBLE Options", 
                        "type": "menu"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-bluetooth", 
                "title": "Bluetooth", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "It is a temporary solution and needs further modifications.\n", 
                        "id": "BLE_MESH_HCI_5_0", 
                        "name": "BLE_MESH_HCI_5_0", 
                        "range": null, 
                        "title": "Support sending 20ms non-connectable adv packets", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BT_BLUEDROID_ENABLED && BLE_MESH", 
                        "help": "Enable this option to allow using specific duplicate scan filter\nin BLE Mesh, and Scan Duplicate Type must be set by choosing the\noption in the Bluetooth Controller section in menuconfig, which is\n\"Scan Duplicate By Device Address and Advertising Data\".\n", 
                        "id": "BLE_MESH_USE_DUPLICATE_SCAN", 
                        "name": "BLE_MESH_USE_DUPLICATE_SCAN", 
                        "range": null, 
                        "title": "Support Duplicate Scan in BLE Mesh", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "When this option is enabled, BLE Mesh stack will try to allocate memory\nfrom PSRAM firstly. This will save the internal RAM if PSRAM exists.\n", 
                        "id": "BLE_MESH_ALLOC_FROM_PSRAM_FIRST", 
                        "name": "BLE_MESH_ALLOC_FROM_PSRAM_FIRST", 
                        "range": null, 
                        "title": "BLE Mesh will first allocate memory from PSRAM", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "Enable this option to allow BLE Mesh fast provisioning solution to be used.\nWhen there are multiple unprovisioned devices around, fast provisioning can\ngreatly reduce the time consumption of the whole provisioning process.\nWhen this option is enabled, and after an unprovisioned device is provisioned\ninto a node successfully, it can be changed to a temporary Provisioner.\n", 
                        "id": "BLE_MESH_FAST_PROV", 
                        "name": "BLE_MESH_FAST_PROV", 
                        "range": null, 
                        "title": "Enable BLE Mesh Fast Provisioning", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "Enable the device to be provisioned into a node. This option should be\nenabled when an unprovisioned device is going to be provisioned into a\nnode and communicate with other nodes in the BLE Mesh network.\n", 
                        "id": "BLE_MESH_NODE", 
                        "name": "BLE_MESH_NODE", 
                        "range": null, 
                        "title": "Support for BLE Mesh Node", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_PROVISIONER", 
                                "help": "This option specifies how many unprovisioned devices can be added to device\nqueue for provisioning. Users can use this option to define the size of the\nqueue in the bottom layer which is used to store unprovisioned device\ninformation (e.g. Device UUID, address).\n", 
                                "id": "BLE_MESH_WAIT_FOR_PROV_MAX_DEV_NUM", 
                                "name": "BLE_MESH_WAIT_FOR_PROV_MAX_DEV_NUM", 
                                "range": null, 
                                "title": "Maximum number of unprovisioned devices that can be added to device queue", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_PROVISIONER", 
                                "help": "This option specifies how many devices can be provisioned by a Provisioner.\nThis value indicates the maximum number of unprovisioned devices which can be\nprovisioned by a Provisioner. For instance, if the value is 6, it means the\nProvisioner can provision up to 6 unprovisioned devices.\nTheoretically a Provisioner without the limitation of its memory can provision\nup to 32766 unprovisioned devices, here we limit the maximum number to 100\njust to limit the memory used by a Provisioner. The bigger the value is, the\nmore memory it will cost by a Provisioner to store the information of nodes.\n", 
                                "id": "BLE_MESH_MAX_PROV_NODES", 
                                "name": "BLE_MESH_MAX_PROV_NODES", 
                                "range": null, 
                                "title": "Maximum number of devices that can be provisioned by Provisioner", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_PROVISIONER && BLE_MESH_PB_ADV", 
                                "help": "This option specifies how many devices can be provisioned at the same time\nusing PB-ADV. For examples, if the value is 2, it means a Provisioner can\nprovision two unprovisioned devices with PB-ADV at the same time.\n", 
                                "id": "BLE_MESH_PBA_SAME_TIME", 
                                "name": "BLE_MESH_PBA_SAME_TIME", 
                                "range": null, 
                                "title": "Maximum number of PB-ADV running at the same time by Provisioner", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_PROVISIONER && BLE_MESH_PB_GATT", 
                                "help": "This option specifies how many devices can be provisioned at the same\ntime using PB-GATT. For example, if the value is 2, it means a Provisioner\ncan provision two unprovisioned devices with PB-GATT at the same time.\n", 
                                "id": "BLE_MESH_PBG_SAME_TIME", 
                                "name": "BLE_MESH_PBG_SAME_TIME", 
                                "range": null, 
                                "title": "Maximum number of PB-GATT running at the same time by Provisioner", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_PROVISIONER", 
                                "help": "This option specifies how many subnets per network a Provisioner can create.\nIndeed, this value decides the number of network keys which can be added by a Provisioner.\n", 
                                "id": "BLE_MESH_PROVISIONER_SUBNET_COUNT", 
                                "name": "BLE_MESH_PROVISIONER_SUBNET_COUNT", 
                                "range": null, 
                                "title": "Maximum number of mesh subnets that can be created by Provisioner", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_PROVISIONER", 
                                "help": "This option specifies how many application keys the Provisioner can have.\nIndeed, this value decides the number of the application keys which can be added by a Provisioner.\n", 
                                "id": "BLE_MESH_PROVISIONER_APP_KEY_COUNT", 
                                "name": "BLE_MESH_PROVISIONER_APP_KEY_COUNT", 
                                "range": null, 
                                "title": "Maximum number of application keys that can be owned by Provisioner", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": "BLE_MESH", 
                        "help": "Enable the device to be a Provisioner. The option should be enabled when\na device is going to act as a Provisioner and provision unprovisioned\ndevices into the BLE Mesh network.\n", 
                        "id": "BLE_MESH_PROVISIONER", 
                        "name": "BLE_MESH_PROVISIONER", 
                        "range": null, 
                        "title": "Support for BLE Mesh Provisioner", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "Enable this option to support BLE Mesh Provisioning functionality. For\nBLE Mesh, this option should be always enabled.\n", 
                        "id": "BLE_MESH_PROV", 
                        "name": "BLE_MESH_PROV", 
                        "range": null, 
                        "title": "BLE Mesh Provisioning support", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "Enable this option to allow the device to be provisioned over the\nadvertising bearer. This option should be enabled if PB-ADV is\ngoing to be used during provisioning procedure.\n", 
                        "id": "BLE_MESH_PB_ADV", 
                        "name": "BLE_MESH_PB_ADV", 
                        "range": null, 
                        "title": "Provisioning support using the advertising bearer (PB-ADV)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "Enable this option to allow the device to be provisioned over GATT.\nThis option should be enabled if PB-GATT is going to be used during\nprovisioning procedure.\n\n# Virtual option enabled whenever any Proxy protocol is needed\n", 
                        "id": "BLE_MESH_PB_GATT", 
                        "name": "BLE_MESH_PB_GATT", 
                        "range": null, 
                        "title": "Provisioning support using GATT (PB-GATT)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "Enable this option to support BLE Mesh Proxy protocol used by PB-GATT\nand other proxy pdu transmission.\n", 
                        "id": "BLE_MESH_PROXY", 
                        "name": "BLE_MESH_PROXY", 
                        "range": null, 
                        "title": "BLE Mesh Proxy protocol support", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH_GATT_PROXY_SERVER && BLE_MESH", 
                                "help": "This option determines for how long the local node advertises using\nNode Identity. The given value is in seconds. The specification limits\nthis to 60 seconds and lists it as the recommended value as well.\nSo leaving the default value is the safest option.\nWhen an unprovisioned device is provisioned successfully and becomes a\nnode, it will start to advertise using Node Identity during the time\nset by this option. And after that, Network ID will be advertised.\n", 
                                "id": "BLE_MESH_NODE_ID_TIMEOUT", 
                                "name": "BLE_MESH_NODE_ID_TIMEOUT", 
                                "range": null, 
                                "title": "Node Identity advertising timeout", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH_GATT_PROXY_SERVER && BLE_MESH", 
                                "help": "This option specifies how many Proxy Filter entries the local node supports.\nThe entries of Proxy filter (whitelist or blacklist) are used to store a\nlist of addresses which can be used to decide which messages will be forwarded\nto the Proxy Client by the Proxy Server.\n", 
                                "id": "BLE_MESH_PROXY_FILTER_SIZE", 
                                "name": "BLE_MESH_PROXY_FILTER_SIZE", 
                                "range": null, 
                                "title": "Maximum number of filter entries per Proxy Client", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": "BLE_MESH_NODE && BLE_MESH", 
                        "help": "This option enables support for Mesh GATT Proxy Service, i.e. the\nability to act as a proxy between a Mesh GATT Client and a Mesh network.\nThis option should be enabled if a node is going to be a Proxy Server.\n", 
                        "id": "BLE_MESH_GATT_PROXY_SERVER", 
                        "name": "BLE_MESH_GATT_PROXY_SERVER", 
                        "range": null, 
                        "title": "BLE Mesh GATT Proxy Server", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "This option enables support for Mesh GATT Proxy Client. The Proxy Client\ncan use the GATT bearer to send mesh messages to a node that supports the\nadvertising bearer.\n", 
                        "id": "BLE_MESH_GATT_PROXY_CLIENT", 
                        "name": "BLE_MESH_GATT_PROXY_CLIENT", 
                        "range": null, 
                        "title": "BLE Mesh GATT Proxy Client", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "Enable BLE Mesh net buffer pool tracking. This option is used to introduce another\nvariable in the bottom layer to record the usage of advertising buffers of BLE Mesh\ndevices. Recommend to enable this option as default.\n", 
                        "id": "BLE_MESH_NET_BUF_POOL_USAGE", 
                        "name": "BLE_MESH_NET_BUF_POOL_USAGE", 
                        "range": null, 
                        "title": "BLE Mesh net buffer pool usage tracking", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "BLE_MESH && BLE_MESH_SETTINGS && BLE_MESH_SPECIFIC_PARTITION", 
                                        "help": "This value defines the name of the specified NVS partition used by the\nmesh stack.\n", 
                                        "id": "BLE_MESH_PARTITION_NAME", 
                                        "name": "BLE_MESH_PARTITION_NAME", 
                                        "range": null, 
                                        "title": "Name of the NVS partition for BLE Mesh", 
                                        "type": "string"
                                    }
                                ], 
                                "depends_on": "BLE_MESH && BLE_MESH_SETTINGS", 
                                "help": "When selected, the mesh stack will use a specified NVS partition instead of\ndefault NVS partition. Note that the specified partition must be registered\nwith NVS using nvs_flash_init_partition() API, and the partition must exists\nin the csv file.\nWhen Provisioner needs to store a large amount of nodes' information in the\nflash (e.g. more than 20), this option is recommended to be enabled.\n", 
                                "id": "BLE_MESH_SPECIFIC_PARTITION", 
                                "name": "BLE_MESH_SPECIFIC_PARTITION", 
                                "range": null, 
                                "title": "Use a specific NVS partition for BLE Mesh", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_SETTINGS", 
                                "help": "This value defines in seconds how soon any pending changes are actually\nwritten into persistent storage (flash) after a change occurs.\nThe option allows nodes to delay a certain period of time to save proper\ninformation to flash. The default value is 0, which means information\nwill be stored immediately once there are updates.\n", 
                                "id": "BLE_MESH_STORE_TIMEOUT", 
                                "name": "BLE_MESH_STORE_TIMEOUT", 
                                "range": null, 
                                "title": "Delay (in seconds) before storing anything persistently", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_SETTINGS", 
                                "help": "This value defines how often the local sequence number gets updated in\npersistent storage (i.e. flash). e.g. a value of 100 means that the\nsequence number will be stored to flash on every 100th increment.\nIf the node sends messages very frequently a higher value makes more\nsense, whereas if the node sends infrequently a value as low as 0\n(update storage for every increment) can make sense. When the stack\ngets initialized it will add sequence number to the last stored one,\nso that it starts off with a value that's guaranteed to be larger than\nthe last one used before power off.\n", 
                                "id": "BLE_MESH_SEQ_STORE_RATE", 
                                "name": "BLE_MESH_SEQ_STORE_RATE", 
                                "range": null, 
                                "title": "How often the sequence number gets updated in storage", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_SETTINGS", 
                                "help": "This value defines in seconds how soon the RPL (Replay Protection List)\ngets written to persistent storage after a change occurs. If the node\nreceives messages frequently, then a large value is recommended. If the\nnode receives messages rarely, then the value can be as low as 0 (which\nmeans the RPL is written into the storage immediately).\nNote that if the node operates in a security-sensitive case, and there is\na risk of sudden power-off, then a value of 0 is strongly recommended.\nOtherwise, a power loss before RPL being written into the storage may\nintroduce message replay attacks and system security will be in a\nvulnerable state.\n", 
                                "id": "BLE_MESH_RPL_STORE_TIMEOUT", 
                                "name": "BLE_MESH_RPL_STORE_TIMEOUT", 
                                "range": null, 
                                "title": "Minimum frequency that the RPL gets updated in storage", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": "BLE_MESH", 
                        "help": "When selected, the BLE Mesh stack will take care of storing/restoring the BLE\nMesh configuration persistently in flash.\nIf the device is a BLE Mesh node, when this option is enabled, the configuration\nof the device will be stored persistently, including unicast address, NetKey,\nAppKey, etc.\nAnd if the device is a BLE Mesh Provisioner, the information of the device will\nbe stored persistently, including the information of provisioned nodes, NetKey,\nAppKey, etc.\n", 
                        "id": "BLE_MESH_SETTINGS", 
                        "name": "BLE_MESH_SETTINGS", 
                        "range": null, 
                        "title": "Store BLE Mesh configuration persistently", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "This option specifies how many subnets a Mesh network can have at the same time.\nIndeed, this value decides the number of the network keys which can be owned by a node.\n", 
                        "id": "BLE_MESH_SUBNET_COUNT", 
                        "name": "BLE_MESH_SUBNET_COUNT", 
                        "range": null, 
                        "title": "Maximum number of mesh subnets per network", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "This option specifies how many application keys the device can store per network.\nIndeed, this value decides the number of the application keys which can be owned by a node.\n", 
                        "id": "BLE_MESH_APP_KEY_COUNT", 
                        "name": "BLE_MESH_APP_KEY_COUNT", 
                        "range": null, 
                        "title": "Maximum number of application keys per network", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "This option specifies the maximum number of application keys to which each model\ncan be bound.\n", 
                        "id": "BLE_MESH_MODEL_KEY_COUNT", 
                        "name": "BLE_MESH_MODEL_KEY_COUNT", 
                        "range": null, 
                        "title": "Maximum number of application keys per model", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "This option specifies the maximum number of addresses to which each model can\nbe subscribed.\n", 
                        "id": "BLE_MESH_MODEL_GROUP_COUNT", 
                        "name": "BLE_MESH_MODEL_GROUP_COUNT", 
                        "range": null, 
                        "title": "Maximum number of group address subscriptions per model", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "This option specifies how many Label UUIDs can be stored.\nIndeed, this value decides the number of the Virtual Addresses can be supported by a node.\n", 
                        "id": "BLE_MESH_LABEL_COUNT", 
                        "name": "BLE_MESH_LABEL_COUNT", 
                        "range": null, 
                        "title": "Maximum number of Label UUIDs used for Virtual Addresses", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "This option specifies the maximum capacity of the replay protection list.\nIt is similar to Network message cache size, but has a different purpose.\nThe replay protection list is used to prevent a node from replay attack,\nwhich will store the source address and sequence number of the received\nmesh messages.\nFor Provisioner, the replay protection list size should not be smaller than\nthe maximum number of nodes whose information can be stored. And the element\nnumber of each node should also be taken into consideration. For example, if\nProvisioner can provision up to 20 nodes and each node contains two elements,\nthen the replay protection list size of Provisioner should be at least 40.\n", 
                        "id": "BLE_MESH_CRPL", 
                        "name": "BLE_MESH_CRPL", 
                        "range": null, 
                        "title": "Maximum capacity of the replay protection list", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "Number of messages that are cached for the network. This helps prevent\nunnecessary decryption operations and unnecessary relays. This option\nis similar to Replay protection list, but has a different purpose.\nA node is not required to cache the entire Network PDU and may cache\nonly part of it for tracking, such as values for SRC/SEQ or others.\n", 
                        "id": "BLE_MESH_MSG_CACHE_SIZE", 
                        "name": "BLE_MESH_MSG_CACHE_SIZE", 
                        "range": null, 
                        "title": "Network message cache size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "Number of advertising buffers available. The transport layer reserves\nADV_BUF_COUNT - 3 buffers for outgoing segments. The maximum outgoing\nSDU size is 12 times this value (out of which 4 or 8 bytes are used\nfor the Transport Layer MIC). For example, 5 segments means the maximum\nSDU size is 60 bytes, which leaves 56 bytes for application layer data\nusing a 4-byte MIC, or 52 bytes using an 8-byte MIC.\n", 
                        "id": "BLE_MESH_ADV_BUF_COUNT", 
                        "name": "BLE_MESH_ADV_BUF_COUNT", 
                        "range": null, 
                        "title": "Number of advertising buffers", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_SUPPORT_BLE_ADV", 
                                "help": "Number of advertising buffers for BLE packets available.\n", 
                                "id": "BLE_MESH_BLE_ADV_BUF_COUNT", 
                                "name": "BLE_MESH_BLE_ADV_BUF_COUNT", 
                                "range": null, 
                                "title": "Number of advertising buffers for BLE advertising packets", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": "BLE_MESH", 
                        "help": "When selected, users can send normal BLE advertising packets\nwith specific API.\n", 
                        "id": "BLE_MESH_SUPPORT_BLE_ADV", 
                        "name": "BLE_MESH_SUPPORT_BLE_ADV", 
                        "range": null, 
                        "title": "Support sending normal BLE advertising packets", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "When the IV Update state enters Normal operation or IV Update\nin Progress, we need to keep track of how many hours has passed\nin the state, since the specification requires us to remain in\nthe state at least for 96 hours (Update in Progress has an\nadditional upper limit of 144 hours).\n\nIn order to fulfill the above requirement, even if the node might\nbe powered off once in a while, we need to store persistently\nhow many hours the node has been in the state. This doesn't\nnecessarily need to happen every hour (thanks to the flexible\nduration range). The exact cadence will depend a lot on the\nways that the node will be used and what kind of power source it\nhas.\n\nSince there is no single optimal answer, this configuration\noption allows specifying a divider, i.e. how many intervals\nthe 96 hour minimum gets split into. After each interval the\nduration that the node has been in the current state gets\nstored to flash. E.g. the default value of 4 means that the\nstate is saved every 24 hours (96 / 4).\n", 
                        "id": "BLE_MESH_IVU_DIVIDER", 
                        "name": "BLE_MESH_IVU_DIVIDER", 
                        "range": null, 
                        "title": "Divider for IV Update state refresh timer", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "Maximum number of simultaneous outgoing multi-segment and/or reliable messages.\nThe default value is 1, which means the device can only send one segmented\nmessage at a time. And if another segmented message is going to be sent, it\nshould wait for the completion of the previous one.\nIf users are going to send multiple segmented messages at the same time, this\nvalue should be configured properly.\n", 
                        "id": "BLE_MESH_TX_SEG_MSG_COUNT", 
                        "name": "BLE_MESH_TX_SEG_MSG_COUNT", 
                        "range": null, 
                        "title": "Maximum number of simultaneous outgoing segmented messages", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "Maximum number of simultaneous incoming multi-segment and/or reliable messages.\nThe default value is 1, which means the device can only receive one segmented\nmessage at a time. And if another segmented message is going to be received,\nit should wait for the completion of the previous one.\nIf users are going to receive multiple segmented messages at the same time, this\nvalue should be configured properly.\n", 
                        "id": "BLE_MESH_RX_SEG_MSG_COUNT", 
                        "name": "BLE_MESH_RX_SEG_MSG_COUNT", 
                        "range": null, 
                        "title": "Maximum number of simultaneous incoming segmented messages", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "Maximum incoming Upper Transport Access PDU length. Leave this to the default\nvalue, unless you really need to optimize memory usage.\n", 
                        "id": "BLE_MESH_RX_SDU_MAX", 
                        "name": "BLE_MESH_RX_SDU_MAX", 
                        "range": null, 
                        "title": "Maximum incoming Upper Transport Access PDU length", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "Maximum number of segments supported for outgoing messages.\nThis value should typically be fine-tuned based on what\nmodels the local node supports, i.e. what's the largest\nmessage payload that the node needs to be able to send.\nThis value affects memory and call stack consumption, which\nis why the default is lower than the maximum that the\nspecification would allow (32 segments).\n\nThe maximum outgoing SDU size is 12 times this number (out of\nwhich 4 or 8 bytes is used for the Transport Layer MIC). For\nexample, 5 segments means the maximum SDU size is 60 bytes,\nwhich leaves 56 bytes for application layer data using a\n4-byte MIC and 52 bytes using an 8-byte MIC.\n\nBe sure to specify a sufficient number of advertising buffers\nwhen setting this option to a higher value. There must be at\nleast three more advertising buffers (BLE_MESH_ADV_BUF_COUNT)\nas there are outgoing segments.\n", 
                        "id": "BLE_MESH_TX_SEG_MAX", 
                        "name": "BLE_MESH_TX_SEG_MAX", 
                        "range": null, 
                        "title": "Maximum number of segments in outgoing messages", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "BLE_MESH && BLE_MESH_RELAY && BLE_MESH_RELAY_ADV_BUF", 
                                        "help": "Number of advertising buffers for relay packets available.\n", 
                                        "id": "BLE_MESH_RELAY_ADV_BUF_COUNT", 
                                        "name": "BLE_MESH_RELAY_ADV_BUF_COUNT", 
                                        "range": null, 
                                        "title": "Number of advertising buffers for relay packets", 
                                        "type": "int"
                                    }
                                ], 
                                "depends_on": "BLE_MESH && BLE_MESH_RELAY", 
                                "help": "When selected, self-send packets will be put in a high-priority\nqueue and relay packets will be put in a low-priority queue.\n", 
                                "id": "BLE_MESH_RELAY_ADV_BUF", 
                                "name": "BLE_MESH_RELAY_ADV_BUF", 
                                "range": null, 
                                "title": "Use separate advertising buffers for relay packets", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "BLE_MESH_NODE && BLE_MESH", 
                        "help": "Support for acting as a Mesh Relay Node. Enabling this option will allow\na node to support the Relay feature, and the Relay feature can still\nbe enabled or disabled by proper configuration messages. Disabling this\noption will let a node not support the Relay feature.\n", 
                        "id": "BLE_MESH_RELAY", 
                        "name": "BLE_MESH_RELAY", 
                        "range": null, 
                        "title": "Relay support", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_LOW_POWER", 
                                "help": "Perform the Friendship establishment using low power with the help of a\nreduced scan duty cycle. The downside of this is that the node may miss\nout on messages intended for it until it has successfully set up Friendship\nwith a Friend node.\nWhen this option is enabled, the node will stop scanning for a period of\ntime after a Friend Request or Friend Poll is sent, so as to reduce more\npower consumption.\n", 
                                "id": "BLE_MESH_LPN_ESTABLISHMENT", 
                                "name": "BLE_MESH_LPN_ESTABLISHMENT", 
                                "range": null, 
                                "title": "Perform Friendship establishment using low power", 
                                "type": "bool"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "BLE_MESH_LPN_AUTO && BLE_MESH && BLE_MESH_LOW_POWER", 
                                        "help": "Time in seconds from the last received message, that the node waits out\nbefore starting to look for Friend nodes.\n", 
                                        "id": "BLE_MESH_LPN_AUTO_TIMEOUT", 
                                        "name": "BLE_MESH_LPN_AUTO_TIMEOUT", 
                                        "range": null, 
                                        "title": "Time from last received message before going to LPN mode", 
                                        "type": "int"
                                    }
                                ], 
                                "depends_on": "BLE_MESH && BLE_MESH_LOW_POWER", 
                                "help": "Once provisioned, automatically enable LPN functionality and start looking\nfor Friend nodes. If this option is disabled LPN mode needs to be manually\nenabled by calling bt_mesh_lpn_set(true).\nWhen an unprovisioned device is provisioned successfully and becomes a node,\nenabling this option will trigger the node starts to send Friend Request at\na certain period until it finds a proper Friend node.\n", 
                                "id": "BLE_MESH_LPN_AUTO", 
                                "name": "BLE_MESH_LPN_AUTO", 
                                "range": null, 
                                "title": "Automatically start looking for Friend nodes once provisioned", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_LOW_POWER", 
                                "help": "Time in seconds between Friend Requests, if a previous Friend Request did\nnot yield any acceptable Friend Offers.\n", 
                                "id": "BLE_MESH_LPN_RETRY_TIMEOUT", 
                                "name": "BLE_MESH_LPN_RETRY_TIMEOUT", 
                                "range": null, 
                                "title": "Retry timeout for Friend requests", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_LOW_POWER", 
                                "help": "The contribution of the RSSI, measured by the Friend node, used in Friend\nOffer Delay calculations. 0 = 1, 1 = 1.5, 2 = 2, 3 = 2.5.\nRSSIFactor, one of the parameters carried by Friend Request sent by Low Power\nnode, which is used to calculate the Friend Offer Delay.\n", 
                                "id": "BLE_MESH_LPN_RSSI_FACTOR", 
                                "name": "BLE_MESH_LPN_RSSI_FACTOR", 
                                "range": null, 
                                "title": "RSSIFactor, used in Friend Offer Delay calculation", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_LOW_POWER", 
                                "help": "The contribution of the supported Receive Window used in Friend Offer\nDelay calculations. 0 = 1, 1 = 1.5, 2 = 2, 3 = 2.5.\nReceiveWindowFactor, one of the parameters carried by Friend Request sent by\nLow Power node, which is used to calculate the Friend Offer Delay.\n", 
                                "id": "BLE_MESH_LPN_RECV_WIN_FACTOR", 
                                "name": "BLE_MESH_LPN_RECV_WIN_FACTOR", 
                                "range": null, 
                                "title": "ReceiveWindowFactor, used in Friend Offer Delay calculation", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_LOW_POWER", 
                                "help": "The MinQueueSizeLog field is defined as log_2(N), where N is the minimum\nnumber of maximum size Lower Transport PDUs that the Friend node can store\nin its Friend Queue. As an example, MinQueueSizeLog value 1 gives N = 2,\nand value 7 gives N = 128.\n", 
                                "id": "BLE_MESH_LPN_MIN_QUEUE_SIZE", 
                                "name": "BLE_MESH_LPN_MIN_QUEUE_SIZE", 
                                "range": null, 
                                "title": "Minimum size of the acceptable friend queue (MinQueueSizeLog)", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_LOW_POWER", 
                                "help": "The ReceiveDelay is the time between the Low Power node sending a\nrequest and listening for a response. This delay allows the Friend\nnode time to prepare the response. The value is in units of milliseconds.\n", 
                                "id": "BLE_MESH_LPN_RECV_DELAY", 
                                "name": "BLE_MESH_LPN_RECV_DELAY", 
                                "range": null, 
                                "title": "Receive delay requested by the local node", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_LOW_POWER", 
                                "help": "PollTimeout timer is used to measure time between two consecutive\nrequests sent by a Low Power node. If no requests are received\nthe Friend node before the PollTimeout timer expires, then the\nfriendship is considered terminated. The value is in units of 100\nmilliseconds, so e.g. a value of 300 means 30 seconds.\nThe smaller the value, the faster the Low Power node tries to get\nmessages from corresponding Friend node and vice versa.\n", 
                                "id": "BLE_MESH_LPN_POLL_TIMEOUT", 
                                "name": "BLE_MESH_LPN_POLL_TIMEOUT", 
                                "range": null, 
                                "title": "The value of the PollTimeout timer", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_LOW_POWER", 
                                "help": "The initial value of the PollTimeout timer when Friendship is to be\nestablished for the first time. After this, the timeout gradually\ngrows toward the actual PollTimeout, doubling in value for each iteration.\nThe value is in units of 100 milliseconds, so e.g. a value of 300 means\n30 seconds.\n", 
                                "id": "BLE_MESH_LPN_INIT_POLL_TIMEOUT", 
                                "name": "BLE_MESH_LPN_INIT_POLL_TIMEOUT", 
                                "range": null, 
                                "title": "The starting value of the PollTimeout timer", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_LOW_POWER", 
                                "help": "Latency (in milliseconds) is the time it takes to enable scanning. In\npractice, it means how much time in advance of the Receive Window, the\nrequest to enable scanning is made.\n", 
                                "id": "BLE_MESH_LPN_SCAN_LATENCY", 
                                "name": "BLE_MESH_LPN_SCAN_LATENCY", 
                                "range": null, 
                                "title": "Latency for enabling scanning", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_LOW_POWER", 
                                "help": "Maximum number of groups to which the LPN can subscribe.\n", 
                                "id": "BLE_MESH_LPN_GROUPS", 
                                "name": "BLE_MESH_LPN_GROUPS", 
                                "range": null, 
                                "title": "Number of groups the LPN can subscribe to", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": "BLE_MESH_NODE && BLE_MESH", 
                        "help": "Enable this option to operate as a Low Power Node. If low power consumption\nis required by a node, this option should be enabled. And once the node\nenters the mesh network, it will try to find a Friend node and establish a\nfriendship.\n", 
                        "id": "BLE_MESH_LOW_POWER", 
                        "name": "BLE_MESH_LOW_POWER", 
                        "range": null, 
                        "title": "Support for Low Power features", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_FRIEND", 
                                "help": "Receive Window in milliseconds supported by the Friend node.\n", 
                                "id": "BLE_MESH_FRIEND_RECV_WIN", 
                                "name": "BLE_MESH_FRIEND_RECV_WIN", 
                                "range": null, 
                                "title": "Friend Receive Window", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_FRIEND", 
                                "help": "Minimum number of buffers available to be stored for each local Friend Queue.\nThis option decides the size of each buffer which can be used by a Friend node\nto store messages for each Low Power node.\n", 
                                "id": "BLE_MESH_FRIEND_QUEUE_SIZE", 
                                "name": "BLE_MESH_FRIEND_QUEUE_SIZE", 
                                "range": null, 
                                "title": "Minimum number of buffers supported per Friend Queue", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_FRIEND", 
                                "help": "Size of the Subscription List that can be supported by a Friend node for a\nLow Power node. And Low Power node can send Friend Subscription List Add or\nFriend Subscription List Remove messages to the Friend node to add or remove\nsubscription addresses.\n", 
                                "id": "BLE_MESH_FRIEND_SUB_LIST_SIZE", 
                                "name": "BLE_MESH_FRIEND_SUB_LIST_SIZE", 
                                "range": null, 
                                "title": "Friend Subscription List Size", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_FRIEND", 
                                "help": "Number of Low Power Nodes with which a Friend can have Friendship simultaneously.\nA Friend node can have friendship with multiple Low Power nodes at the same time,\nwhile a Low Power node can only establish friendship with only one Friend node at\nthe same time.\n", 
                                "id": "BLE_MESH_FRIEND_LPN_COUNT", 
                                "name": "BLE_MESH_FRIEND_LPN_COUNT", 
                                "range": null, 
                                "title": "Number of supported LPN nodes", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH_FRIEND", 
                                "help": "Number of incomplete segment lists tracked for each Friends' LPN.\nIn other words, this determines from how many elements can segmented\nmessages destined for the Friend queue be received simultaneously.\n", 
                                "id": "BLE_MESH_FRIEND_SEG_RX", 
                                "name": "BLE_MESH_FRIEND_SEG_RX", 
                                "range": null, 
                                "title": "Number of incomplete segment lists per LPN", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": "BLE_MESH", 
                        "help": "Enable this option to be able to act as a Friend Node.\n", 
                        "id": "BLE_MESH_FRIEND", 
                        "name": "BLE_MESH_FRIEND", 
                        "range": null, 
                        "title": "Support for Friend feature", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH && BLE_MESH", 
                        "help": "Select this to save the BLE Mesh related rodata code size. Enabling this option\nwill disable the output of BLE Mesh debug log.\n", 
                        "id": "BLE_MESH_NO_LOG", 
                        "name": "BLE_MESH_NO_LOG", 
                        "range": null, 
                        "title": "Disable BLE Mesh debug logs (minimize bin size)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BLE_MESH_STACK_TRACE_LEVEL>", 
                                        "help": null, 
                                        "id": "BLE_MESH_TRACE_LEVEL_NONE", 
                                        "name": "BLE_MESH_TRACE_LEVEL_NONE", 
                                        "range": null, 
                                        "title": "NONE", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BLE_MESH_STACK_TRACE_LEVEL>", 
                                        "help": null, 
                                        "id": "BLE_MESH_TRACE_LEVEL_ERROR", 
                                        "name": "BLE_MESH_TRACE_LEVEL_ERROR", 
                                        "range": null, 
                                        "title": "ERROR", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BLE_MESH_STACK_TRACE_LEVEL>", 
                                        "help": null, 
                                        "id": "BLE_MESH_TRACE_LEVEL_WARNING", 
                                        "name": "BLE_MESH_TRACE_LEVEL_WARNING", 
                                        "range": null, 
                                        "title": "WARNING", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BLE_MESH_STACK_TRACE_LEVEL>", 
                                        "help": null, 
                                        "id": "BLE_MESH_TRACE_LEVEL_INFO", 
                                        "name": "BLE_MESH_TRACE_LEVEL_INFO", 
                                        "range": null, 
                                        "title": "INFO", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BLE_MESH_STACK_TRACE_LEVEL>", 
                                        "help": null, 
                                        "id": "BLE_MESH_TRACE_LEVEL_DEBUG", 
                                        "name": "BLE_MESH_TRACE_LEVEL_DEBUG", 
                                        "range": null, 
                                        "title": "DEBUG", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BLE_MESH_STACK_TRACE_LEVEL>", 
                                        "help": null, 
                                        "id": "BLE_MESH_TRACE_LEVEL_VERBOSE", 
                                        "name": "BLE_MESH_TRACE_LEVEL_VERBOSE", 
                                        "range": null, 
                                        "title": "VERBOSE", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BLE_MESH && !BLE_MESH_NO_LOG && BLE_MESH && !BLE_MESH_NO_LOG && BLE_MESH", 
                                "help": "Define BLE Mesh trace level for BLE Mesh stack.\n", 
                                "id": "component-config-esp-ble-mesh-support-ble-mesh-stack-debug-log-level-ble_mesh_stack", 
                                "name": "BLE_MESH_STACK_TRACE_LEVEL", 
                                "title": "BLE_MESH_STACK", 
                                "type": "choice"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH && !BLE_MESH_NO_LOG && BLE_MESH", 
                                "help": null, 
                                "id": "BLE_MESH_STACK_TRACE_LEVEL", 
                                "name": "BLE_MESH_STACK_TRACE_LEVEL", 
                                "range": null, 
                                "title": null, 
                                "type": "int"
                            }
                        ], 
                        "depends_on": "BLE_MESH && !BLE_MESH_NO_LOG && BLE_MESH", 
                        "id": "component-config-esp-ble-mesh-support-ble-mesh-stack-debug-log-level", 
                        "title": "BLE Mesh STACK DEBUG LOG LEVEL", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BLE_MESH_NET_BUF_TRACE_LEVEL>", 
                                        "help": null, 
                                        "id": "BLE_MESH_NET_BUF_TRACE_LEVEL_NONE", 
                                        "name": "BLE_MESH_NET_BUF_TRACE_LEVEL_NONE", 
                                        "range": null, 
                                        "title": "NONE", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BLE_MESH_NET_BUF_TRACE_LEVEL>", 
                                        "help": null, 
                                        "id": "BLE_MESH_NET_BUF_TRACE_LEVEL_ERROR", 
                                        "name": "BLE_MESH_NET_BUF_TRACE_LEVEL_ERROR", 
                                        "range": null, 
                                        "title": "ERROR", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BLE_MESH_NET_BUF_TRACE_LEVEL>", 
                                        "help": null, 
                                        "id": "BLE_MESH_NET_BUF_TRACE_LEVEL_WARNING", 
                                        "name": "BLE_MESH_NET_BUF_TRACE_LEVEL_WARNING", 
                                        "range": null, 
                                        "title": "WARNING", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BLE_MESH_NET_BUF_TRACE_LEVEL>", 
                                        "help": null, 
                                        "id": "BLE_MESH_NET_BUF_TRACE_LEVEL_INFO", 
                                        "name": "BLE_MESH_NET_BUF_TRACE_LEVEL_INFO", 
                                        "range": null, 
                                        "title": "INFO", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BLE_MESH_NET_BUF_TRACE_LEVEL>", 
                                        "help": null, 
                                        "id": "BLE_MESH_NET_BUF_TRACE_LEVEL_DEBUG", 
                                        "name": "BLE_MESH_NET_BUF_TRACE_LEVEL_DEBUG", 
                                        "range": null, 
                                        "title": "DEBUG", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BLE_MESH_NET_BUF_TRACE_LEVEL>", 
                                        "help": null, 
                                        "id": "BLE_MESH_NET_BUF_TRACE_LEVEL_VERBOSE", 
                                        "name": "BLE_MESH_NET_BUF_TRACE_LEVEL_VERBOSE", 
                                        "range": null, 
                                        "title": "VERBOSE", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BLE_MESH && !BLE_MESH_NO_LOG && BLE_MESH && !BLE_MESH_NO_LOG && BLE_MESH", 
                                "help": "Define BLE Mesh trace level for BLE Mesh net buffer.\n", 
                                "id": "component-config-esp-ble-mesh-support-ble-mesh-net-buf-debug-log-level-ble_mesh_net_buf", 
                                "name": "BLE_MESH_NET_BUF_TRACE_LEVEL", 
                                "title": "BLE_MESH_NET_BUF", 
                                "type": "choice"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH && BLE_MESH && !BLE_MESH_NO_LOG && BLE_MESH", 
                                "help": null, 
                                "id": "BLE_MESH_NET_BUF_TRACE_LEVEL", 
                                "name": "BLE_MESH_NET_BUF_TRACE_LEVEL", 
                                "range": null, 
                                "title": null, 
                                "type": "int"
                            }
                        ], 
                        "depends_on": "BLE_MESH && !BLE_MESH_NO_LOG && BLE_MESH", 
                        "id": "component-config-esp-ble-mesh-support-ble-mesh-net-buf-debug-log-level", 
                        "title": "BLE Mesh NET BUF DEBUG LOG LEVEL", 
                        "type": "menu"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "Timeout value used by the node to get response of the acknowledged\nmessage which is sent by the client model.\nThis value indicates the maximum time that a client model waits for\nthe response of the sent acknowledged messages. If a client model\nuses 0 as the timeout value when sending acknowledged messages, then\nthe default value will be used which is four seconds.\n", 
                        "id": "BLE_MESH_CLIENT_MSG_TIMEOUT", 
                        "name": "BLE_MESH_CLIENT_MSG_TIMEOUT", 
                        "range": null, 
                        "title": "Timeout(ms) for client message response", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH", 
                                "help": "Enable support for Configuration client model.\n", 
                                "id": "BLE_MESH_CFG_CLI", 
                                "name": "BLE_MESH_CFG_CLI", 
                                "range": null, 
                                "title": "Configuration Client Model", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH", 
                                "help": "Enable support for Health client model.\n", 
                                "id": "BLE_MESH_HEALTH_CLI", 
                                "name": "BLE_MESH_HEALTH_CLI", 
                                "range": null, 
                                "title": "Health Client Model", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH", 
                                "help": "Enable support for Generic OnOff client model.\n", 
                                "id": "BLE_MESH_GENERIC_ONOFF_CLI", 
                                "name": "BLE_MESH_GENERIC_ONOFF_CLI", 
                                "range": null, 
                                "title": "Generic OnOff Client Model", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH", 
                                "help": "Enable support for Generic Level client model.\n", 
                                "id": "BLE_MESH_GENERIC_LEVEL_CLI", 
                                "name": "BLE_MESH_GENERIC_LEVEL_CLI", 
                                "range": null, 
                                "title": "Generic Level Client Model", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH", 
                                "help": "Enable support for Generic Default Transition Time client model.\n", 
                                "id": "BLE_MESH_GENERIC_DEF_TRANS_TIME_CLI", 
                                "name": "BLE_MESH_GENERIC_DEF_TRANS_TIME_CLI", 
                                "range": null, 
                                "title": "Generic Default Transition Time Client Model", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH", 
                                "help": "Enable support for Generic Power Onoff client model.\n", 
                                "id": "BLE_MESH_GENERIC_POWER_ONOFF_CLI", 
                                "name": "BLE_MESH_GENERIC_POWER_ONOFF_CLI", 
                                "range": null, 
                                "title": "Generic Power Onoff Client Model", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH", 
                                "help": "Enable support for Generic Power Level client model.\n", 
                                "id": "BLE_MESH_GENERIC_POWER_LEVEL_CLI", 
                                "name": "BLE_MESH_GENERIC_POWER_LEVEL_CLI", 
                                "range": null, 
                                "title": "Generic Power Level Client Model", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH", 
                                "help": "Enable support for Generic Battery client model.\n", 
                                "id": "BLE_MESH_GENERIC_BATTERY_CLI", 
                                "name": "BLE_MESH_GENERIC_BATTERY_CLI", 
                                "range": null, 
                                "title": "Generic Battery Client Model", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH", 
                                "help": "Enable support for Generic Location client model.\n", 
                                "id": "BLE_MESH_GENERIC_LOCATION_CLI", 
                                "name": "BLE_MESH_GENERIC_LOCATION_CLI", 
                                "range": null, 
                                "title": "Generic Location Client Model", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH", 
                                "help": "Enable support for Generic Property client model.\n", 
                                "id": "BLE_MESH_GENERIC_PROPERTY_CLI", 
                                "name": "BLE_MESH_GENERIC_PROPERTY_CLI", 
                                "range": null, 
                                "title": "Generic Property Client Model", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH", 
                                "help": "Enable support for Sensor client model.\n", 
                                "id": "BLE_MESH_SENSOR_CLI", 
                                "name": "BLE_MESH_SENSOR_CLI", 
                                "range": null, 
                                "title": "Sensor Client Model", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH", 
                                "help": "Enable support for Time client model.\n", 
                                "id": "BLE_MESH_TIME_CLI", 
                                "name": "BLE_MESH_TIME_CLI", 
                                "range": null, 
                                "title": "Time Client Model", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH", 
                                "help": "Enable support for Scene client model.\n", 
                                "id": "BLE_MESH_SCENE_CLI", 
                                "name": "BLE_MESH_SCENE_CLI", 
                                "range": null, 
                                "title": "Scene Client Model", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH", 
                                "help": "Enable support for Scheduler client model.\n", 
                                "id": "BLE_MESH_SCHEDULER_CLI", 
                                "name": "BLE_MESH_SCHEDULER_CLI", 
                                "range": null, 
                                "title": "Scheduler Client Model", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH", 
                                "help": "Enable support for Light Lightness client model.\n", 
                                "id": "BLE_MESH_LIGHT_LIGHTNESS_CLI", 
                                "name": "BLE_MESH_LIGHT_LIGHTNESS_CLI", 
                                "range": null, 
                                "title": "Light Lightness Client Model", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH", 
                                "help": "Enable support for Light CTL client model.\n", 
                                "id": "BLE_MESH_LIGHT_CTL_CLI", 
                                "name": "BLE_MESH_LIGHT_CTL_CLI", 
                                "range": null, 
                                "title": "Light CTL Client Model", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH", 
                                "help": "Enable support for Light HSL client model.\n", 
                                "id": "BLE_MESH_LIGHT_HSL_CLI", 
                                "name": "BLE_MESH_LIGHT_HSL_CLI", 
                                "range": null, 
                                "title": "Light HSL Client Model", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH", 
                                "help": "Enable support for Light XYL client model.\n", 
                                "id": "BLE_MESH_LIGHT_XYL_CLI", 
                                "name": "BLE_MESH_LIGHT_XYL_CLI", 
                                "range": null, 
                                "title": "Light XYL Client Model", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH", 
                                "help": "Enable support for Light LC client model.\n", 
                                "id": "BLE_MESH_LIGHT_LC_CLI", 
                                "name": "BLE_MESH_LIGHT_LC_CLI", 
                                "range": null, 
                                "title": "Light LC Client Model", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "BLE_MESH", 
                        "id": "component-config-esp-ble-mesh-support-support-for-ble-mesh-client-models", 
                        "title": "Support for BLE Mesh Client Models", 
                        "type": "menu"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BLE_MESH", 
                        "help": "This option removes the 96 hour limit of the IV Update Procedure and\nlets the state to be changed at any time.\nIf IV Update test mode is going to be used, this option should be enabled.\n", 
                        "id": "BLE_MESH_IV_UPDATE_TEST", 
                        "name": "BLE_MESH_IV_UPDATE_TEST", 
                        "range": null, 
                        "title": "Test the IV Update Procedure", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "BLE_MESH && BLE_MESH_SELF_TEST", 
                                        "help": "With this option enabled, an unprovisioned device can automatically\nenters mesh network using a specific test function without the pro-\nvisioning procedure. And on the Provisioner side, a test function\nneeds to be invoked to add the node information into the mesh stack.\n", 
                                        "id": "BLE_MESH_TEST_AUTO_ENTER_NETWORK", 
                                        "name": "BLE_MESH_TEST_AUTO_ENTER_NETWORK", 
                                        "range": null, 
                                        "title": "Unprovisioned device enters mesh network automatically", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLE_MESH && BLE_MESH_SELF_TEST", 
                                        "help": "With this option enabled, users can use whilte list to filter mesh\nadvertising packets while scanning.\n", 
                                        "id": "BLE_MESH_TEST_USE_WHITE_LIST", 
                                        "name": "BLE_MESH_TEST_USE_WHITE_LIST", 
                                        "range": null, 
                                        "title": "Use white list to filter mesh advertising packets", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BLE_MESH", 
                                "help": "This option adds extra self-tests which are run every time BLE Mesh\nnetworking is initialized.\n", 
                                "id": "BLE_MESH_SELF_TEST", 
                                "name": "BLE_MESH_SELF_TEST", 
                                "range": null, 
                                "title": "Perform BLE Mesh self-tests", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLE_MESH", 
                                "help": "Activate shell module that provides BLE Mesh commands to the console.\n", 
                                "id": "BLE_MESH_SHELL", 
                                "name": "BLE_MESH_SHELL", 
                                "range": null, 
                                "title": "Enable BLE Mesh shell", 
                                "type": "bool"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "BLE_MESH && BLE_MESH_DEBUG", 
                                        "help": "Enable Network layer debug logs for the BLE Mesh functionality.\n", 
                                        "id": "BLE_MESH_DEBUG_NET", 
                                        "name": "BLE_MESH_DEBUG_NET", 
                                        "range": null, 
                                        "title": "Network layer debug", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLE_MESH && BLE_MESH_DEBUG", 
                                        "help": "Enable Transport layer debug logs for the BLE Mesh functionality.\n", 
                                        "id": "BLE_MESH_DEBUG_TRANS", 
                                        "name": "BLE_MESH_DEBUG_TRANS", 
                                        "range": null, 
                                        "title": "Transport layer debug", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLE_MESH && BLE_MESH_DEBUG", 
                                        "help": "Enable Beacon-related debug logs for the BLE Mesh functionality.\n", 
                                        "id": "BLE_MESH_DEBUG_BEACON", 
                                        "name": "BLE_MESH_DEBUG_BEACON", 
                                        "range": null, 
                                        "title": "Beacon debug", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLE_MESH && BLE_MESH_DEBUG", 
                                        "help": "Enable cryptographic debug logs for the BLE Mesh functionality.\n", 
                                        "id": "BLE_MESH_DEBUG_CRYPTO", 
                                        "name": "BLE_MESH_DEBUG_CRYPTO", 
                                        "range": null, 
                                        "title": "Crypto debug", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLE_MESH && BLE_MESH_DEBUG", 
                                        "help": "Enable Provisioning debug logs for the BLE Mesh functionality.\n", 
                                        "id": "BLE_MESH_DEBUG_PROV", 
                                        "name": "BLE_MESH_DEBUG_PROV", 
                                        "range": null, 
                                        "title": "Provisioning debug", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLE_MESH && BLE_MESH_DEBUG", 
                                        "help": "Enable Access layer debug logs for the BLE Mesh functionality.\n", 
                                        "id": "BLE_MESH_DEBUG_ACCESS", 
                                        "name": "BLE_MESH_DEBUG_ACCESS", 
                                        "range": null, 
                                        "title": "Access layer debug", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLE_MESH && BLE_MESH_DEBUG", 
                                        "help": "Enable Foundation Models debug logs for the BLE Mesh functionality.\n", 
                                        "id": "BLE_MESH_DEBUG_MODEL", 
                                        "name": "BLE_MESH_DEBUG_MODEL", 
                                        "range": null, 
                                        "title": "Foundation model debug", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLE_MESH && BLE_MESH_DEBUG", 
                                        "help": "Enable advertising debug logs for the BLE Mesh functionality.\n", 
                                        "id": "BLE_MESH_DEBUG_ADV", 
                                        "name": "BLE_MESH_DEBUG_ADV", 
                                        "range": null, 
                                        "title": "Advertising debug", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLE_MESH && BLE_MESH_DEBUG", 
                                        "help": "Enable Low Power debug logs for the BLE Mesh functionality.\n", 
                                        "id": "BLE_MESH_DEBUG_LOW_POWER", 
                                        "name": "BLE_MESH_DEBUG_LOW_POWER", 
                                        "range": null, 
                                        "title": "Low Power debug", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLE_MESH && BLE_MESH_DEBUG", 
                                        "help": "Enable Friend debug logs for the BLE Mesh functionality.\n", 
                                        "id": "BLE_MESH_DEBUG_FRIEND", 
                                        "name": "BLE_MESH_DEBUG_FRIEND", 
                                        "range": null, 
                                        "title": "Friend debug", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLE_MESH_PROXY && BLE_MESH && BLE_MESH_DEBUG", 
                                        "help": "Enable Proxy protocol debug logs for the BLE Mesh functionality.\n", 
                                        "id": "BLE_MESH_DEBUG_PROXY", 
                                        "name": "BLE_MESH_DEBUG_PROXY", 
                                        "range": null, 
                                        "title": "Proxy debug", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BLE_MESH", 
                                "help": "Enable debug logs for the BLE Mesh functionality.\n", 
                                "id": "BLE_MESH_DEBUG", 
                                "name": "BLE_MESH_DEBUG", 
                                "range": null, 
                                "title": "Enable BLE Mesh debug logs", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "BLE_MESH", 
                        "id": "component-config-esp-ble-mesh-support-ble-mesh-specific-test-option", 
                        "title": "BLE Mesh specific test option", 
                        "type": "menu"
                    }
                ], 
                "depends_on": null, 
                "help": "This option enables ESP BLE Mesh support. The specific features that are\navailable may depend on other features that have been enabled in the\nstack, such as Bluetooth Support, Bluedroid Support & GATT support.\n", 
                "id": "BLE_MESH", 
                "is_menuconfig": true, 
                "name": "BLE_MESH", 
                "range": null, 
                "title": "ESP BLE Mesh Support", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "ADC power can be controlled by the FSM instead of software. This allows the ADC to\nbe shut off when it is not working leading to lower power consumption. However\nusing the FSM control ADC power will increase the noise of ADC.\n", 
                                "id": "ADC_FORCE_XPD_FSM", 
                                "name": "ADC_FORCE_XPD_FSM", 
                                "range": null, 
                                "title": "Use the FSM to control ADC power", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "If this is set, the ADC2 driver will disable the output of the DAC corresponding to the specified\nchannel. This is the default value.\n\nFor testing, disable this option so that we can measure the output of DAC by internal ADC.\n", 
                                "id": "ADC_DISABLE_DAC", 
                                "name": "ADC_DISABLE_DAC", 
                                "range": null, 
                                "title": "Disable DAC when ADC2 is used on GPIO 25 and 26", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-driver-configurations-adc-configuration", 
                        "title": "ADC configuration", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Normally only the ISR of SPI master is placed in the IRAM, so that it\ncan work without the flash when interrupt is triggered.\nFor other functions, there's some possibility that the flash cache\nmiss when running inside and out of SPI functions, which may increase\nthe interval of SPI transactions.\nEnable this to put ``queue_trans``, ``get_trans_result`` and\n``transmit`` functions into the IRAM to avoid possible cache miss.\n\nDuring unit test, this is enabled to measure the ideal case of api.\n", 
                                "id": "SPI_MASTER_IN_IRAM", 
                                "name": "SPI_MASTER_IN_IRAM", 
                                "range": null, 
                                "title": "Place transmitting functions of SPI master into IRAM", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Place the SPI master ISR in to IRAM to avoid possible cache miss.\n\nAlso you can forbid the ISR being disabled during flash writing\naccess, by add ESP_INTR_FLAG_IRAM when initializing the driver.\n", 
                                "id": "SPI_MASTER_ISR_IN_IRAM", 
                                "name": "SPI_MASTER_ISR_IN_IRAM", 
                                "range": null, 
                                "title": "Place SPI master ISR function into IRAM", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Normally only the ISR of SPI slave is placed in the IRAM, so that it\ncan work without the flash when interrupt is triggered.\nFor other functions, there's some possibility that the flash cache\nmiss when running inside and out of SPI functions, which may increase\nthe interval of SPI transactions.\nEnable this to put ``queue_trans``, ``get_trans_result`` and\n``transmit`` functions into the IRAM to avoid possible cache miss.\n", 
                                "id": "SPI_SLAVE_IN_IRAM", 
                                "name": "SPI_SLAVE_IN_IRAM", 
                                "range": null, 
                                "title": "Place transmitting functions of SPI slave into IRAM", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Place the SPI slave ISR in to IRAM to avoid possible cache miss.\n\nAlso you can forbid the ISR being disabled during flash writing\naccess, by add ESP_INTR_FLAG_IRAM when initializing the driver.\n", 
                                "id": "SPI_SLAVE_ISR_IN_IRAM", 
                                "name": "SPI_SLAVE_ISR_IN_IRAM", 
                                "range": null, 
                                "title": "Place SPI slave ISR function into IRAM", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-driver-configurations-spi-configuration", 
                        "title": "SPI configuration", 
                        "type": "menu"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-driver-configurations", 
                "title": "Driver configurations", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "EFUSE_CUSTOM_TABLE", 
                                "help": "Name of the custom eFuse CSV filename. This path is evaluated\nrelative to the project root directory.\n", 
                                "id": "EFUSE_CUSTOM_TABLE_FILENAME", 
                                "name": "EFUSE_CUSTOM_TABLE_FILENAME", 
                                "range": null, 
                                "title": "Custom eFuse CSV file", 
                                "type": "string"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Allows to generate a structure for eFuse from the CSV file.\n", 
                        "id": "EFUSE_CUSTOM_TABLE", 
                        "name": "EFUSE_CUSTOM_TABLE", 
                        "range": null, 
                        "title": "Use custom eFuse table", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "All read and writes operations are redirected to RAM instead of eFuse registers.\nIf this option is set, all permanent changes (via eFuse) are disabled.\nLog output will state changes which would be applied, but they will not be.\n", 
                        "id": "EFUSE_VIRTUAL", 
                        "name": "EFUSE_VIRTUAL", 
                        "range": null, 
                        "title": "Simulate eFuse operations in RAM", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice EFUSE_CODE_SCHEME_SELECTOR>", 
                                "help": null, 
                                "id": "EFUSE_CODE_SCHEME_COMPAT_NONE", 
                                "name": "EFUSE_CODE_SCHEME_COMPAT_NONE", 
                                "range": null, 
                                "title": "None Only", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice EFUSE_CODE_SCHEME_SELECTOR>", 
                                "help": null, 
                                "id": "EFUSE_CODE_SCHEME_COMPAT_3_4", 
                                "name": "EFUSE_CODE_SCHEME_COMPAT_3_4", 
                                "range": null, 
                                "title": "3/4 and None", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice EFUSE_CODE_SCHEME_SELECTOR>", 
                                "help": null, 
                                "id": "EFUSE_CODE_SCHEME_COMPAT_REPEAT", 
                                "name": "EFUSE_CODE_SCHEME_COMPAT_REPEAT", 
                                "range": null, 
                                "title": "Repeat, 3/4 and None (common table does not support it)", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Selector eFuse code scheme.\n", 
                        "id": "component-config-efuse-bit-manager-coding-scheme-compatibility", 
                        "name": "EFUSE_CODE_SCHEME_SELECTOR", 
                        "title": "Coding Scheme Compatibility", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "EFUSE_MAX_BLK_LEN", 
                        "name": "EFUSE_MAX_BLK_LEN", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-efuse-bit-manager", 
                "title": "eFuse Bit Manager", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable support for creating server side SSL/TLS session\n", 
                        "id": "ESP_TLS_SERVER", 
                        "name": "ESP_TLS_SERVER", 
                        "range": null, 
                        "title": "Enable ESP-TLS Server", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-esp-tls", 
                "title": "ESP-TLS", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_REV_MIN>", 
                                "help": null, 
                                "id": "ESP32_REV_MIN_0", 
                                "name": "ESP32_REV_MIN_0", 
                                "range": null, 
                                "title": "Rev 0", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_REV_MIN>", 
                                "help": null, 
                                "id": "ESP32_REV_MIN_1", 
                                "name": "ESP32_REV_MIN_1", 
                                "range": null, 
                                "title": "Rev 1", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_REV_MIN>", 
                                "help": null, 
                                "id": "ESP32_REV_MIN_2", 
                                "name": "ESP32_REV_MIN_2", 
                                "range": null, 
                                "title": "Rev 2", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_REV_MIN>", 
                                "help": null, 
                                "id": "ESP32_REV_MIN_3", 
                                "name": "ESP32_REV_MIN_3", 
                                "range": null, 
                                "title": "Rev 3", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Minimum revision that ESP-IDF would support.\nESP-IDF performs different strategy on different esp32 revision.\n", 
                        "id": "component-config-esp32-specific-minimum-supported-esp32-revision", 
                        "name": "ESP32_REV_MIN", 
                        "title": "Minimum Supported ESP32 Revision", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP32_REV_MIN", 
                        "name": "ESP32_REV_MIN", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP32_DPORT_WORKAROUND", 
                        "name": "ESP32_DPORT_WORKAROUND", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_DEFAULT_CPU_FREQ_MHZ>", 
                                "help": null, 
                                "id": "ESP32_DEFAULT_CPU_FREQ_80", 
                                "name": "ESP32_DEFAULT_CPU_FREQ_80", 
                                "range": null, 
                                "title": "80 MHz", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_DEFAULT_CPU_FREQ_MHZ>", 
                                "help": null, 
                                "id": "ESP32_DEFAULT_CPU_FREQ_160", 
                                "name": "ESP32_DEFAULT_CPU_FREQ_160", 
                                "range": null, 
                                "title": "160 MHz", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_DEFAULT_CPU_FREQ_MHZ>", 
                                "help": null, 
                                "id": "ESP32_DEFAULT_CPU_FREQ_240", 
                                "name": "ESP32_DEFAULT_CPU_FREQ_240", 
                                "range": null, 
                                "title": "240 MHz", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "CPU frequency to be set on application startup.\n", 
                        "id": "component-config-esp32-specific-cpu-frequency", 
                        "name": "ESP32_DEFAULT_CPU_FREQ_MHZ", 
                        "title": "CPU frequency", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP32_DEFAULT_CPU_FREQ_MHZ", 
                        "name": "ESP32_DEFAULT_CPU_FREQ_MHZ", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "SPIRAM_BOOT_INIT && !SPIRAM_ALLOW_BSS_SEG_EXTERNAL_MEMORY && ESP32_SPIRAM_SUPPORT", 
                                                "help": "Normally, if psram initialization is enabled during compile time but not found at runtime, it\nis seen as an error making the ESP32 panic. If this is enabled, the ESP32 will keep on\nrunning but will not add the (non-existing) RAM to any allocator.\n", 
                                                "id": "SPIRAM_IGNORE_NOTFOUND", 
                                                "name": "SPIRAM_IGNORE_NOTFOUND", 
                                                "range": null, 
                                                "title": "Ignore PSRAM when not found", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "ESP32_SPIRAM_SUPPORT", 
                                        "help": "If this is enabled, the SPI RAM will be enabled during initial boot. Unless you\nhave specific requirements, you'll want to leave this enabled so memory allocated\nduring boot-up can also be placed in SPI RAM.\n", 
                                        "id": "SPIRAM_BOOT_INIT", 
                                        "name": "SPIRAM_BOOT_INIT", 
                                        "range": null, 
                                        "title": "Initialize SPI RAM when booting the ESP32", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_USE>", 
                                                "help": null, 
                                                "id": "SPIRAM_USE_MEMMAP", 
                                                "name": "SPIRAM_USE_MEMMAP", 
                                                "range": null, 
                                                "title": "Integrate RAM into ESP32 memory map", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_USE>", 
                                                "help": null, 
                                                "id": "SPIRAM_USE_CAPS_ALLOC", 
                                                "name": "SPIRAM_USE_CAPS_ALLOC", 
                                                "range": null, 
                                                "title": "Make RAM allocatable using heap_caps_malloc(..., MALLOC_CAP_SPIRAM)", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_USE>", 
                                                "help": null, 
                                                "id": "SPIRAM_USE_MALLOC", 
                                                "name": "SPIRAM_USE_MALLOC", 
                                                "range": null, 
                                                "title": "Make RAM allocatable using malloc() as well", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "ESP32_SPIRAM_SUPPORT", 
                                        "help": "The SPI RAM can be accessed in multiple methods: by just having it available as an unmanaged\nmemory region in the ESP32 memory map, by integrating it in the ESP32s heap as 'special' memory\nneeding heap_caps_malloc to allocate, or by fully integrating it making malloc() also able to\nreturn SPI RAM pointers.\n", 
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-spi-ram-access-method", 
                                        "name": "SPIRAM_USE", 
                                        "title": "SPI RAM access method", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_TYPE>", 
                                                "help": null, 
                                                "id": "SPIRAM_TYPE_AUTO", 
                                                "name": "SPIRAM_TYPE_AUTO", 
                                                "range": null, 
                                                "title": "Auto-detect", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_TYPE>", 
                                                "help": null, 
                                                "id": "SPIRAM_TYPE_ESPPSRAM32", 
                                                "name": "SPIRAM_TYPE_ESPPSRAM32", 
                                                "range": null, 
                                                "title": "ESP-PSRAM32 or IS25WP032", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_TYPE>", 
                                                "help": null, 
                                                "id": "SPIRAM_TYPE_ESPPSRAM64", 
                                                "name": "SPIRAM_TYPE_ESPPSRAM64", 
                                                "range": null, 
                                                "title": "ESP-PSRAM64 or LY68L6400", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "ESP32_SPIRAM_SUPPORT", 
                                        "help": null, 
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-type-of-spi-ram-chip-in-use", 
                                        "name": "SPIRAM_TYPE", 
                                        "title": "Type of SPI RAM chip in use", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP32_SPIRAM_SUPPORT", 
                                        "help": null, 
                                        "id": "SPIRAM_SIZE", 
                                        "name": "SPIRAM_SIZE", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_SPEED>", 
                                                "help": null, 
                                                "id": "SPIRAM_SPEED_40M", 
                                                "name": "SPIRAM_SPEED_40M", 
                                                "range": null, 
                                                "title": "40MHz clock speed", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "ESPTOOLPY_FLASHFREQ_80M && <choice SPIRAM_SPEED>", 
                                                "help": null, 
                                                "id": "SPIRAM_SPEED_80M", 
                                                "name": "SPIRAM_SPEED_80M", 
                                                "range": null, 
                                                "title": "80MHz clock speed", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "ESP32_SPIRAM_SUPPORT", 
                                        "help": "Select the speed for the SPI RAM chip.\nIf SPI RAM is enabled, we only support three combinations of SPI speed mode we supported now:\n\n1. Flash SPI running at 40Mhz and RAM SPI running at 40Mhz\n2. Flash SPI running at 80Mhz and RAM SPI running at 40Mhz\n3. Flash SPI running at 80Mhz and RAM SPI running at 80Mhz\n\nNote: If the third mode(80Mhz+80Mhz) is enabled for SPI RAM of type 32MBit, one of the HSPI/VSPI host\nwill be occupied by the system. Which SPI host to use can be selected by the config item\nSPIRAM_OCCUPY_SPI_HOST. Application code should never touch HSPI/VSPI hardware in this case. The\noption to select 80MHz will only be visible if the flash SPI speed is also 80MHz.\n(ESPTOOLPY_FLASHFREQ_80M is true)\n", 
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-set-ram-clock-speed", 
                                        "name": "SPIRAM_SPEED", 
                                        "title": "Set RAM clock speed", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SPIRAM_BOOT_INIT && ESP32_SPIRAM_SUPPORT", 
                                        "help": "Runs a rudimentary memory test on initialization. Aborts when memory test fails. Disable this for\nslightly faster startop.\n", 
                                        "id": "SPIRAM_MEMTEST", 
                                        "name": "SPIRAM_MEMTEST", 
                                        "range": null, 
                                        "title": "Run memory test on SPI RAM initialization", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "(SPIRAM_USE_MEMMAP || SPIRAM_USE_CAPS_ALLOC || SPIRAM_USE_MALLOC) && ESP32_REV_MIN < 3 && ESP32_SPIRAM_SUPPORT", 
                                        "help": "Revision 1 of the ESP32 has a bug that can cause a write to PSRAM not to take place in some situations\nwhen the cache line needs to be fetched from external RAM and an interrupt occurs. This enables a\nfix in the compiler (-mfix-esp32-psram-cache-issue) that makes sure the specific code that is\nvulnerable to this will not be emitted.\n\nThis will also not use any bits of newlib that are located in ROM, opting for a version that is\ncompiled with the workaround and located in flash instead.\n\nThe workaround is not required for ESP32 revision 3 and above.\n", 
                                        "id": "SPIRAM_CACHE_WORKAROUND", 
                                        "name": "SPIRAM_CACHE_WORKAROUND", 
                                        "range": null, 
                                        "title": "Enable workaround for bug in SPI RAM cache for Rev1 ESP32s", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "SPIRAM_BANKSWITCH_ENABLE && ESP32_SPIRAM_SUPPORT", 
                                                "help": "Select the amount of banks reserved for bank switching. Note that the amount of RAM allocatable with\nmalloc/esp_heap_alloc_caps will decrease by 32K for each page reserved here.\n\nNote that this reservation is only actually done if your program actually uses the himem API. Without\nany himem calls, the reservation is not done and the original amount of memory will be available\nto malloc/esp_heap_alloc_caps.\n", 
                                                "id": "SPIRAM_BANKSWITCH_RESERVE", 
                                                "name": "SPIRAM_BANKSWITCH_RESERVE", 
                                                "range": null, 
                                                "title": "Amount of 32K pages to reserve for bank switching", 
                                                "type": "int"
                                            }
                                        ], 
                                        "depends_on": "(SPIRAM_USE_MEMMAP || SPIRAM_USE_CAPS_ALLOC || SPIRAM_USE_MALLOC) && ESP32_SPIRAM_SUPPORT", 
                                        "help": "The ESP32 only supports 4MiB of external RAM in its address space. The hardware does support larger\nmemories, but these have to be bank-switched in and out of this address space. Enabling this allows you\nto reserve some MMU pages for this, which allows the use of the esp_himem api to manage these banks.\n\n#Note that this is limited to 62 banks, as esp_spiram_writeback_cache needs some kind of mapping of\n#some banks below that mark to work. We cannot at this moment guarantee this to exist when himem is\n#enabled.\n\nIf spiram 2T mode is enabled, the size of 64Mbit psram will be changed as 32Mbit, so himem will be\nunusable.\n", 
                                        "id": "SPIRAM_BANKSWITCH_ENABLE", 
                                        "name": "SPIRAM_BANKSWITCH_ENABLE", 
                                        "range": null, 
                                        "title": "Enable bank switching for >4MiB external RAM", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SPIRAM_USE_MALLOC && ESP32_SPIRAM_SUPPORT", 
                                        "help": "If malloc() is capable of also allocating SPI-connected ram, its allocation strategy will prefer to\nallocate chunks less than this size in internal memory, while allocations larger than this will be\ndone from external RAM. If allocation from the preferred region fails, an attempt is made to allocate\nfrom the non-preferred region instead, so malloc() will not suddenly fail when either internal or\nexternal memory is full.\n", 
                                        "id": "SPIRAM_MALLOC_ALWAYSINTERNAL", 
                                        "name": "SPIRAM_MALLOC_ALWAYSINTERNAL", 
                                        "range": null, 
                                        "title": "Maximum malloc() size, in bytes, to always put in internal memory", 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "(SPIRAM_USE_CAPS_ALLOC || SPIRAM_USE_MALLOC) && ESP32_SPIRAM_SUPPORT", 
                                        "help": "Try to allocate memories of WiFi and LWIP in SPIRAM firstly. If failed, try to allocate internal\nmemory then.\n", 
                                        "id": "SPIRAM_TRY_ALLOCATE_WIFI_LWIP", 
                                        "name": "SPIRAM_TRY_ALLOCATE_WIFI_LWIP", 
                                        "range": null, 
                                        "title": "Try to allocate memories of WiFi and LWIP in SPIRAM firstly. If failed, allocate internal memory", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SPIRAM_USE_MALLOC && ESP32_SPIRAM_SUPPORT", 
                                        "help": "Because the external/internal RAM allocation strategy is not always perfect, it sometimes may happen\nthat the internal memory is entirely filled up. This causes allocations that are specifically done in\ninternal memory, for example the stack for new tasks or memory to service DMA or have memory that's\nalso available when SPI cache is down, to fail. This option reserves a pool specifically for requests\nlike that; the memory in this pool is not given out when a normal malloc() is called.\n\nSet this to 0 to disable this feature.\n\nNote that because FreeRTOS stacks are forced to internal memory, they will also use this memory pool;\nbe sure to keep this in mind when adjusting this value.\n\nNote also that the DMA reserved pool may not be one single contiguous memory region, depending on the\nconfigured size and the static memory usage of the app.\n", 
                                        "id": "SPIRAM_MALLOC_RESERVE_INTERNAL", 
                                        "name": "SPIRAM_MALLOC_RESERVE_INTERNAL", 
                                        "range": null, 
                                        "title": "Reserve this amount of bytes for data that specifically needs to be in DMA or internal memory", 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SPIRAM_USE_MALLOC && ESP32_SPIRAM_SUPPORT", 
                                        "help": "Because some bits of the ESP32 code environment cannot be recompiled with the cache workaround,\nnormally tasks cannot be safely run with their stack residing in external memory; for this reason\nxTaskCreate and friends always allocate stack in internal memory and xTaskCreateStatic will check if\nthe memory passed to it is in internal memory. If you have a task that needs a large amount of stack\nand does not call on ROM code in any way (no direct calls, but also no Bluetooth/WiFi), you can try to\ndisable this and use xTaskCreateStatic to create the tasks stack in external memory.\n", 
                                        "id": "SPIRAM_ALLOW_STACK_EXTERNAL_MEMORY", 
                                        "name": "SPIRAM_ALLOW_STACK_EXTERNAL_MEMORY", 
                                        "range": null, 
                                        "title": "Allow external memory as an argument to xTaskCreateStatic", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP32_SPIRAM_SUPPORT && ESP32_SPIRAM_SUPPORT", 
                                        "help": "If enabled the option,and add EXT_RAM_ATTR defined your variable,then your variable will be placed in\nPSRAM instead of internal memory, and placed most of variables of lwip,net802.11,pp,bluedroid library\nto external memory defaultly.\n", 
                                        "id": "SPIRAM_ALLOW_BSS_SEG_EXTERNAL_MEMORY", 
                                        "name": "SPIRAM_ALLOW_BSS_SEG_EXTERNAL_MEMORY", 
                                        "range": null, 
                                        "title": "Allow .bss segment placed in external memory", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_OCCUPY_SPI_HOST>", 
                                                "help": null, 
                                                "id": "SPIRAM_OCCUPY_HSPI_HOST", 
                                                "name": "SPIRAM_OCCUPY_HSPI_HOST", 
                                                "range": null, 
                                                "title": "HSPI host (SPI2)", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_OCCUPY_SPI_HOST>", 
                                                "help": null, 
                                                "id": "SPIRAM_OCCUPY_VSPI_HOST", 
                                                "name": "SPIRAM_OCCUPY_VSPI_HOST", 
                                                "range": null, 
                                                "title": "VSPI host (SPI3)", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_OCCUPY_SPI_HOST>", 
                                                "help": null, 
                                                "id": "SPIRAM_OCCUPY_NO_HOST", 
                                                "name": "SPIRAM_OCCUPY_NO_HOST", 
                                                "range": null, 
                                                "title": "Will not try to use any host, will abort if not able to use the PSRAM", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "SPIRAM_SPEED_80M && ESP32_SPIRAM_SUPPORT", 
                                        "help": "When both flash and PSRAM is working under 80MHz, and the PSRAM is of type 32MBit, one of the HSPI/VSPI\nhost will be used to output the clock. Select which one to use here.\n", 
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-spi-host-to-use-for-32mbit-psram", 
                                        "name": "SPIRAM_OCCUPY_SPI_HOST", 
                                        "title": "SPI host to use for 32MBit PSRAM", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "ESP32_SPIRAM_SUPPORT && ESP32_SPIRAM_SUPPORT", 
                                                "help": "The PSRAM CLOCK IO can be any unused GPIO, user can config it based on hardware design. If user use\n1.8V flash and 1.8V psram, this value can only be one of 6, 7, 8, 9, 10, 11, 16, 17.\n", 
                                                "id": "D0WD_PSRAM_CLK_IO", 
                                                "name": "D0WD_PSRAM_CLK_IO", 
                                                "range": null, 
                                                "title": "PSRAM CLK IO number", 
                                                "type": "int"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "ESP32_SPIRAM_SUPPORT && ESP32_SPIRAM_SUPPORT", 
                                                "help": "The PSRAM CS IO can be any unused GPIO, user can config it based on hardware design. If user use\n1.8V flash and 1.8V psram, this value can only be one of 6, 7, 8, 9, 10, 11, 16, 17.\n", 
                                                "id": "D0WD_PSRAM_CS_IO", 
                                                "name": "D0WD_PSRAM_CS_IO", 
                                                "range": null, 
                                                "title": "PSRAM CS IO number", 
                                                "type": "int"
                                            }
                                        ], 
                                        "depends_on": "ESP32_SPIRAM_SUPPORT", 
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-psram-clock-and-cs-io-for-esp32-dowd", 
                                        "title": "PSRAM clock and cs IO for ESP32-DOWD", 
                                        "type": "menu"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "ESP32_SPIRAM_SUPPORT && ESP32_SPIRAM_SUPPORT", 
                                                "help": "User can config it based on hardware design. For ESP32-D2WD chip, the psram can only be 1.8V psram,\nso this value can only be one of 6, 7, 8, 9, 10, 11, 16, 17.\n", 
                                                "id": "D2WD_PSRAM_CLK_IO", 
                                                "name": "D2WD_PSRAM_CLK_IO", 
                                                "range": null, 
                                                "title": "PSRAM CLK IO number", 
                                                "type": "int"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "ESP32_SPIRAM_SUPPORT && ESP32_SPIRAM_SUPPORT", 
                                                "help": "User can config it based on hardware design. For ESP32-D2WD chip, the psram can only be 1.8V psram,\nso this value can only be one of 6, 7, 8, 9, 10, 11, 16, 17.\n", 
                                                "id": "D2WD_PSRAM_CS_IO", 
                                                "name": "D2WD_PSRAM_CS_IO", 
                                                "range": null, 
                                                "title": "PSRAM CS IO number", 
                                                "type": "int"
                                            }
                                        ], 
                                        "depends_on": "ESP32_SPIRAM_SUPPORT", 
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-psram-clock-and-cs-io-for-esp32-d2wd", 
                                        "title": "PSRAM clock and cs IO for ESP32-D2WD", 
                                        "type": "menu"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "ESP32_SPIRAM_SUPPORT && ESP32_SPIRAM_SUPPORT", 
                                                "help": "The PSRAM CS IO can be any unused GPIO, user can config it based on hardware design.\n\nFor ESP32-PICO chip, the psram share clock with flash, so user do not need to configure the clock\nIO.\nFor the reference hardware design, please refer to\nhttps://www.espressif.com/sites/default/files/documentation/esp32-pico-d4_datasheet_en.pdf\n", 
                                                "id": "PICO_PSRAM_CS_IO", 
                                                "name": "PICO_PSRAM_CS_IO", 
                                                "range": null, 
                                                "title": "PSRAM CS IO number", 
                                                "type": "int"
                                            }
                                        ], 
                                        "depends_on": "ESP32_SPIRAM_SUPPORT", 
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-psram-clock-and-cs-io-for-esp32-pico", 
                                        "title": "PSRAM clock and cs IO for ESP32-PICO", 
                                        "type": "menu"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "(ESPTOOLPY_FLASHMODE_DIO || ESPTOOLPY_FLASHMODE_DOUT) && ESP32_SPIRAM_SUPPORT", 
                                        "help": "This value is ignored unless flash mode is set to DIO or DOUT and the SPI flash pins have been\noverriden by setting the eFuses SPI_PAD_CONFIG_xxx.\n\nWhen this is the case, the eFuse config only defines 3 of the 4 Quad I/O data pins. The WP pin (aka\nESP32 pin \"SD_DATA_3\" or SPI flash pin \"IO2\") is not specified in eFuse. And the psram only has QPI\nmode, the WP pin is necessary, so we need to configure this value here.\n\nWhen flash mode is set to QIO or QOUT, the PSRAM WP pin will be set as the value configured in\nbootloader.\n\nFor ESP32-PICO chip, the default value of this config should be 7.\n", 
                                        "id": "SPIRAM_SPIWP_SD3_PIN", 
                                        "name": "SPIRAM_SPIWP_SD3_PIN", 
                                        "range": null, 
                                        "title": "SPI PSRAM WP(SD3) Pin when customising pins via eFuse (read help)", 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP32_SPIRAM_SUPPORT && ESP32_SPIRAM_SUPPORT", 
                                        "help": "Enable this option to fix single bit errors inside 64Mbit PSRAM.\n\nSome 64Mbit PSRAM chips have a hardware issue in the RAM which causes bit errors at multiple\nfixed bit positions.\n\nNote: If this option is enabled, the 64Mbit PSRAM chip will appear to be 32Mbit in size.\nApplications will not be affected unless the use the esp_himem APIs, which are not supported\nin 2T mode.\n", 
                                        "id": "SPIRAM_2T_MODE", 
                                        "name": "SPIRAM_2T_MODE", 
                                        "range": null, 
                                        "title": "Enable SPI PSRAM 2T mode", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "ESP32_SPIRAM_SUPPORT", 
                                "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config", 
                                "title": "SPI RAM config", 
                                "type": "menu"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "This enables support for an external SPI RAM chip, connected in parallel with the\nmain SPI flash chip.\n", 
                        "id": "ESP32_SPIRAM_SUPPORT", 
                        "name": "ESP32_SPIRAM_SUPPORT", 
                        "range": null, 
                        "title": "Support for external, SPI-connected RAM", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP32_MEMMAP_TRACEMEM", 
                        "name": "ESP32_MEMMAP_TRACEMEM", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP32_MEMMAP_TRACEMEM_TWOBANKS", 
                        "name": "ESP32_MEMMAP_TRACEMEM_TWOBANKS", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "ESP32_TRAX && !FREERTOS_UNICORE", 
                                "help": "The ESP32 contains a feature which allows you to trace the execution path the processor\nhas taken through the program. This is stored in a chunk of 32K (16K for single-processor)\nof memory that can't be used for general purposes anymore. Disable this if you do not know\nwhat this is.\n\n# Memory to reverse for trace, used in linker script\n", 
                                "id": "ESP32_TRAX_TWOBANKS", 
                                "name": "ESP32_TRAX_TWOBANKS", 
                                "range": null, 
                                "title": "Reserve memory for tracing both pro as well as app cpu execution", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "The ESP32 contains a feature which allows you to trace the execution path the processor\nhas taken through the program. This is stored in a chunk of 32K (16K for single-processor)\nof memory that can't be used for general purposes anymore. Disable this if you do not know\nwhat this is.\n", 
                        "id": "ESP32_TRAX", 
                        "name": "ESP32_TRAX", 
                        "range": null, 
                        "title": "Use TRAX tracing feature", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP32_TRACEMEM_RESERVE_DRAM", 
                        "name": "ESP32_TRACEMEM_RESERVE_DRAM", 
                        "range": null, 
                        "title": null, 
                        "type": "hex"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_UNIVERSAL_MAC_ADDRESSES>", 
                                "help": null, 
                                "id": "ESP32_UNIVERSAL_MAC_ADDRESSES_TWO", 
                                "name": "ESP32_UNIVERSAL_MAC_ADDRESSES_TWO", 
                                "range": null, 
                                "title": "Two", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_UNIVERSAL_MAC_ADDRESSES>", 
                                "help": null, 
                                "id": "ESP32_UNIVERSAL_MAC_ADDRESSES_FOUR", 
                                "name": "ESP32_UNIVERSAL_MAC_ADDRESSES_FOUR", 
                                "range": null, 
                                "title": "Four", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Configure the number of universally administered (by IEEE) MAC addresses.\nDuring initialisation, MAC addresses for each network interface are generated or derived from a\nsingle base MAC address.\nIf the number of universal MAC addresses is four, all four interfaces (WiFi station, WiFi softap,\nBluetooth and Ethernet) receive a universally administered MAC address. These are generated\nsequentially by adding 0, 1, 2 and 3 (respectively) to the final octet of the base MAC address.\nIf the number of universal MAC addresses is two, only two interfaces (WiFi station and Bluetooth)\nreceive a universally administered MAC address. These are generated sequentially by adding 0\nand 1 (respectively) to the base MAC address. The remaining two interfaces (WiFi softap and Ethernet)\nreceive local MAC addresses. These are derived from the universal WiFi station and Bluetooth MAC\naddresses, respectively.\nWhen using the default (Espressif-assigned) base MAC address, either setting can be used. When using\na custom universal MAC address range, the correct setting will depend on the allocation of MAC\naddresses in this range (either 2 or 4 per device.)\n", 
                        "id": "component-config-esp32-specific-number-of-universally-administered-by-ieee-mac-address", 
                        "name": "ESP32_UNIVERSAL_MAC_ADDRESSES", 
                        "title": "Number of universally administered (by IEEE) MAC address", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP32_UNIVERSAL_MAC_ADDRESSES", 
                        "name": "ESP32_UNIVERSAL_MAC_ADDRESSES", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Bytes of memory to reserve for ULP coprocessor firmware & data.\n\nData is reserved at the beginning of RTC slow memory.\n", 
                                "id": "ESP32_ULP_COPROC_RESERVE_MEM", 
                                "name": "ESP32_ULP_COPROC_RESERVE_MEM", 
                                "range": [
                                    0, 
                                    0
                                ], 
                                "title": "RTC slow memory reserved for coprocessor", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Set to 'y' if you plan to load a firmware for the coprocessor.\n\nIf this option is enabled, further coprocessor configuration will appear in the Components menu.\n", 
                        "id": "ESP32_ULP_COPROC_ENABLED", 
                        "name": "ESP32_ULP_COPROC_ENABLED", 
                        "range": null, 
                        "title": "Enable Ultra Low Power (ULP) Coprocessor", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_PANIC>", 
                                "help": "Outputs the relevant registers over the serial port and halt the\nprocessor. Needs a manual reset to restart.\n", 
                                "id": "ESP32_PANIC_PRINT_HALT", 
                                "name": "ESP32_PANIC_PRINT_HALT", 
                                "range": null, 
                                "title": "Print registers and halt", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_PANIC>", 
                                "help": "Outputs the relevant registers over the serial port and immediately\nreset the processor.\n", 
                                "id": "ESP32_PANIC_PRINT_REBOOT", 
                                "name": "ESP32_PANIC_PRINT_REBOOT", 
                                "range": null, 
                                "title": "Print registers and reboot", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_PANIC>", 
                                "help": "Just resets the processor without outputting anything\n", 
                                "id": "ESP32_PANIC_SILENT_REBOOT", 
                                "name": "ESP32_PANIC_SILENT_REBOOT", 
                                "range": null, 
                                "title": "Silent reboot", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_PANIC>", 
                                "help": "Invoke gdbstub on the serial port, allowing for gdb to attach to it to do a postmortem\nof the crash.\n", 
                                "id": "ESP32_PANIC_GDBSTUB", 
                                "name": "ESP32_PANIC_GDBSTUB", 
                                "range": null, 
                                "title": "Invoke GDBStub", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "If FreeRTOS detects unexpected behaviour or an unhandled exception, the panic handler is\ninvoked. Configure the panic handlers action here.\n", 
                        "id": "component-config-esp32-specific-panic-handler-behaviour", 
                        "name": "ESP32_PANIC", 
                        "title": "Panic handler behaviour", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The FreeRTOS panic and unhandled exception handers can detect a JTAG OCD debugger and\ninstead of panicking, have the debugger stop on the offending instruction.\n", 
                        "id": "ESP32_DEBUG_OCDAWARE", 
                        "name": "ESP32_DEBUG_OCDAWARE", 
                        "range": null, 
                        "title": "Make exception and panic handlers JTAG/OCD aware", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!ESP32_TRAX", 
                        "help": "Debug stubs are used by OpenOCD to execute pre-compiled onboard code which does some useful debugging,\ne.g. GCOV data dump.\n", 
                        "id": "ESP32_DEBUG_STUBS_ENABLE", 
                        "name": "ESP32_DEBUG_STUBS_ENABLE", 
                        "range": null, 
                        "title": "OpenOCD debug stubs", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP32_BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "id": "ESP32_BROWNOUT_DET_LVL_SEL_0", 
                                        "name": "ESP32_BROWNOUT_DET_LVL_SEL_0", 
                                        "range": null, 
                                        "title": "2.43V +/- 0.05", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP32_BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "id": "ESP32_BROWNOUT_DET_LVL_SEL_1", 
                                        "name": "ESP32_BROWNOUT_DET_LVL_SEL_1", 
                                        "range": null, 
                                        "title": "2.48V +/- 0.05", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP32_BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "id": "ESP32_BROWNOUT_DET_LVL_SEL_2", 
                                        "name": "ESP32_BROWNOUT_DET_LVL_SEL_2", 
                                        "range": null, 
                                        "title": "2.58V +/- 0.05", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP32_BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "id": "ESP32_BROWNOUT_DET_LVL_SEL_3", 
                                        "name": "ESP32_BROWNOUT_DET_LVL_SEL_3", 
                                        "range": null, 
                                        "title": "2.62V +/- 0.05", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP32_BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "id": "ESP32_BROWNOUT_DET_LVL_SEL_4", 
                                        "name": "ESP32_BROWNOUT_DET_LVL_SEL_4", 
                                        "range": null, 
                                        "title": "2.67V +/- 0.05", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP32_BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "id": "ESP32_BROWNOUT_DET_LVL_SEL_5", 
                                        "name": "ESP32_BROWNOUT_DET_LVL_SEL_5", 
                                        "range": null, 
                                        "title": "2.70V +/- 0.05", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP32_BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "id": "ESP32_BROWNOUT_DET_LVL_SEL_6", 
                                        "name": "ESP32_BROWNOUT_DET_LVL_SEL_6", 
                                        "range": null, 
                                        "title": "2.77V +/- 0.05", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP32_BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "id": "ESP32_BROWNOUT_DET_LVL_SEL_7", 
                                        "name": "ESP32_BROWNOUT_DET_LVL_SEL_7", 
                                        "range": null, 
                                        "title": "2.80V +/- 0.05", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "ESP32_BROWNOUT_DET", 
                                "help": "The brownout detector will reset the chip when the supply voltage is approximately\nbelow this level. Note that there may be some variation of brownout voltage level\nbetween each ESP32 chip.\n\n#The voltage levels here are estimates, more work needs to be done to figure out the exact voltages\n#of the brownout threshold levels.\n", 
                                "id": "component-config-esp32-specific-hardware-brownout-detect-reset-brownout-voltage-level", 
                                "name": "ESP32_BROWNOUT_DET_LVL_SEL", 
                                "title": "Brownout voltage level", 
                                "type": "choice"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "The ESP32 has a built-in brownout detector which can detect if the voltage is lower than\na specific value. If this happens, it will reset the chip in order to prevent unintended\nbehaviour.\n", 
                        "id": "ESP32_BROWNOUT_DET", 
                        "name": "ESP32_BROWNOUT_DET", 
                        "range": null, 
                        "title": "Hardware brownout detect & reset", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP32_BROWNOUT_DET_LVL", 
                        "name": "ESP32_BROWNOUT_DET_LVL", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_BROWNOUT_DET", 
                        "help": "When brownout reset occurs, reduce PHY TX power to keep the code running\n\n# Note about the use of \"FRC1\" name: currently FRC1 timer is not used for\n# high resolution timekeeping anymore. Instead the esp_timer API, implemented\n# using FRC2 timer, is used.\n# FRC1 name in the option name is kept for compatibility.\n", 
                        "id": "ESP32_REDUCE_PHY_TX_POWER", 
                        "name": "ESP32_REDUCE_PHY_TX_POWER", 
                        "range": null, 
                        "title": "Reduce PHY TX power when brownout reset", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_TIME_SYSCALL>", 
                                "help": null, 
                                "id": "ESP32_TIME_SYSCALL_USE_RTC_FRC1", 
                                "name": "ESP32_TIME_SYSCALL_USE_RTC_FRC1", 
                                "range": null, 
                                "title": "RTC and high-resolution timer", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_TIME_SYSCALL>", 
                                "help": null, 
                                "id": "ESP32_TIME_SYSCALL_USE_RTC", 
                                "name": "ESP32_TIME_SYSCALL_USE_RTC", 
                                "range": null, 
                                "title": "RTC", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_TIME_SYSCALL>", 
                                "help": null, 
                                "id": "ESP32_TIME_SYSCALL_USE_FRC1", 
                                "name": "ESP32_TIME_SYSCALL_USE_FRC1", 
                                "range": null, 
                                "title": "High-resolution timer", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_TIME_SYSCALL>", 
                                "help": null, 
                                "id": "ESP32_TIME_SYSCALL_USE_NONE", 
                                "name": "ESP32_TIME_SYSCALL_USE_NONE", 
                                "range": null, 
                                "title": "None", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "This setting defines which hardware timers are used to\nimplement 'gettimeofday' and 'time' functions in C library.\n\n- If both high-resolution and RTC timers are used, timekeeping will\n  continue in deep sleep. Time will be reported at 1 microsecond\n  resolution. This is the default, and the recommended option.\n- If only high-resolution timer is used, gettimeofday will\n  provide time at microsecond resolution.\n  Time will not be preserved when going into deep sleep mode.\n- If only RTC timer is used, timekeeping will continue in\n  deep sleep, but time will be measured at 6.(6) microsecond\n  resolution. Also the gettimeofday function itself may take\n  longer to run.\n- If no timers are used, gettimeofday and time functions\n  return -1 and set errno to ENOSYS.\n- When RTC is used for timekeeping, two RTC_STORE registers are\n  used to keep time in deep sleep mode.\n", 
                        "id": "component-config-esp32-specific-timers-used-for-gettimeofday-function", 
                        "name": "ESP32_TIME_SYSCALL", 
                        "title": "Timers used for gettimeofday function", 
                        "type": "choice"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_RTC_CLK_SRC>", 
                                "help": null, 
                                "id": "ESP32_RTC_CLK_SRC_INT_RC", 
                                "name": "ESP32_RTC_CLK_SRC_INT_RC", 
                                "range": null, 
                                "title": "Internal 150kHz RC oscillator", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_RTC_CLK_SRC>", 
                                "help": null, 
                                "id": "ESP32_RTC_CLK_SRC_EXT_CRYS", 
                                "name": "ESP32_RTC_CLK_SRC_EXT_CRYS", 
                                "range": null, 
                                "title": "External 32kHz crystal", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_RTC_CLK_SRC>", 
                                "help": null, 
                                "id": "ESP32_RTC_CLK_SRC_EXT_OSC", 
                                "name": "ESP32_RTC_CLK_SRC_EXT_OSC", 
                                "range": null, 
                                "title": "External 32kHz oscillator at 32K_XP pin", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_RTC_CLK_SRC>", 
                                "help": null, 
                                "id": "ESP32_RTC_CLK_SRC_INT_8MD256", 
                                "name": "ESP32_RTC_CLK_SRC_INT_8MD256", 
                                "range": null, 
                                "title": "Internal 8.5MHz oscillator, divided by 256 (~33kHz)", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Choose which clock is used as RTC clock source.\n\n- \"Internal 150kHz oscillator\" option provides lowest deep sleep current\n  consumption, and does not require extra external components. However\n  frequency stability with respect to temperature is poor, so time may\n  drift in deep/light sleep modes.\n- \"External 32kHz crystal\" provides better frequency stability, at the\n  expense of slightly higher (1uA) deep sleep current consumption.\n- \"External 32kHz oscillator\" allows using 32kHz clock generated by an\n  external circuit. In this case, external clock signal must be connected\n  to 32K_XP pin. Amplitude should be <1.2V in case of sine wave signal,\n  and <1V in case of square wave signal. Common mode voltage should be\n  0.1 < Vcm < 0.5Vamp, where Vamp is the signal amplitude.\n  Additionally, 1nF capacitor must be connected between 32K_XN pin and\n  ground. 32K_XN pin can not be used as a GPIO in this case.\n- \"Internal 8.5MHz oscillator divided by 256\" option results in higher\n  deep sleep current (by 5uA) but has better frequency stability than\n  the internal 150kHz oscillator. It does not require external components.\n", 
                        "id": "component-config-esp32-specific-rtc-clock-source", 
                        "name": "ESP32_RTC_CLK_SRC", 
                        "title": "RTC clock source", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_RTC_CLK_SRC_EXT_CRYS", 
                        "help": "Choose which additional current is used for rtc external crystal.\n\n- With some 32kHz crystal configurations, the X32N and X32P pins may not\n  have enough drive strength to keep the crystal oscillating during deep sleep.\n  If this option is enabled, additional current from touchpad 9 is provided\n  internally to drive the 32kHz crystal. If this option is enabled, deep sleep current\n  is slightly higher (4-5uA) and the touchpad and ULP wakeup sources are not available.\n", 
                        "id": "ESP32_RTC_EXT_CRYST_ADDIT_CURRENT", 
                        "name": "ESP32_RTC_EXT_CRYST_ADDIT_CURRENT", 
                        "range": null, 
                        "title": "Additional current for external 32kHz crystal", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "When the startup code initializes RTC_SLOW_CLK, it can perform\ncalibration by comparing the RTC_SLOW_CLK frequency with main XTAL\nfrequency. This option sets the number of RTC_SLOW_CLK cycles measured\nby the calibration routine. Higher numbers increase calibration\nprecision, which may be important for applications which spend a lot of\ntime in deep sleep. Lower numbers reduce startup time.\n\nWhen this option is set to 0, clock calibration will not be performed at\nstartup, and approximate clock frequencies will be assumed:\n\n- 150000 Hz if internal RC oscillator is used as clock source. For this use value 1024.\n- 32768 Hz if the 32k crystal oscillator is used. For this use value 3000 or more.\n  In case more value will help improve the definition of the launch of the crystal.\n  If the crystal could not start, it will be switched to internal RC.\n", 
                        "id": "ESP32_RTC_CLK_CAL_CYCLES", 
                        "name": "ESP32_RTC_CLK_CAL_CYCLES", 
                        "range": [
                            0, 
                            32766
                        ], 
                        "title": "Number of cycles for RTC_SLOW_CLK calibration", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Number of attempts to repeat 32k XTAL calibration\nbefore giving up and switching to the internal RC.\nIncrease this option if the 32k crystal oscillator\ndoes not start and switches to internal RC.\n", 
                        "id": "ESP32_RTC_XTAL_CAL_RETRY", 
                        "name": "ESP32_RTC_XTAL_CAL_RETRY", 
                        "range": null, 
                        "title": "Number of attempts to repeat 32k XTAL calibration", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_RTC_CLK_SRC_EXT_CRYS", 
                        "help": "To reduce the startup time of an external RTC crystal,\nwe bootstrap it with a 32kHz square wave for a fixed number of cycles.\nSetting 0 will disable bootstrapping (if disabled, the crystal may take\nlonger to start up or fail to oscillate under some conditions).\n\nIf this value is too high, a faulty crystal may initially start and then fail.\nIf this value is too low, an otherwise good crystal may not start.\n\nTo accurately determine if the crystal has started,\nset a larger \"Number of cycles for RTC_SLOW_CLK calibration\" (about 3000).\n", 
                        "id": "ESP32_RTC_XTAL_BOOTSTRAP_CYCLES", 
                        "name": "ESP32_RTC_XTAL_BOOTSTRAP_CYCLES", 
                        "range": null, 
                        "title": "Bootstrap cycles for external 32kHz crystal", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "When ESP32 exits deep sleep, the CPU and the flash chip are powered on\nat the same time. CPU will run deep sleep stub first, and then\nproceed to load code from flash. Some flash chips need sufficient\ntime to pass between power on and first read operation. By default,\nwithout any extra delay, this time is approximately 900us, although\nsome flash chip types need more than that.\n\nBy default extra delay is set to 2000us. When optimizing startup time\nfor applications which require it, this value may be reduced.\n\nIf you are seeing \"flash read err, 1000\" message printed to the\nconsole after deep sleep reset, try increasing this value.\n", 
                        "id": "ESP32_DEEP_SLEEP_WAKEUP_DELAY", 
                        "name": "ESP32_DEEP_SLEEP_WAKEUP_DELAY", 
                        "range": [
                            0, 
                            5000
                        ], 
                        "title": "Extra delay in deep sleep wake stub (in us)", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_XTAL_FREQ_SEL>", 
                                "help": null, 
                                "id": "ESP32_XTAL_FREQ_40", 
                                "name": "ESP32_XTAL_FREQ_40", 
                                "range": null, 
                                "title": "40 MHz", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_XTAL_FREQ_SEL>", 
                                "help": null, 
                                "id": "ESP32_XTAL_FREQ_26", 
                                "name": "ESP32_XTAL_FREQ_26", 
                                "range": null, 
                                "title": "26 MHz", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_XTAL_FREQ_SEL>", 
                                "help": null, 
                                "id": "ESP32_XTAL_FREQ_AUTO", 
                                "name": "ESP32_XTAL_FREQ_AUTO", 
                                "range": null, 
                                "title": "Autodetect", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "ESP32 currently supports the following XTAL frequencies:\n\n- 26 MHz\n- 40 MHz\n\nStartup code can automatically estimate XTAL frequency. This feature\nuses the internal 8MHz oscillator as a reference. Because the internal\noscillator frequency is temperature dependent, it is not recommended\nto use automatic XTAL frequency detection in applications which need\nto work at high ambient temperatures and use high-temperature\nqualified chips and modules.\n", 
                        "id": "component-config-esp32-specific-main-xtal-frequency", 
                        "name": "ESP32_XTAL_FREQ_SEL", 
                        "title": "Main XTAL frequency", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP32_XTAL_FREQ", 
                        "name": "ESP32_XTAL_FREQ", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If set, the first time the app boots it will disable the BASIC ROM Console\npermanently (by burning an eFuse).\n\nOtherwise, the BASIC ROM Console starts on reset if no valid bootloader is\nread from the flash.\n\n(Enabling secure boot also disables the BASIC ROM Console by default.)\n", 
                        "id": "ESP32_DISABLE_BASIC_ROM_CONSOLE", 
                        "name": "ESP32_DISABLE_BASIC_ROM_CONSOLE", 
                        "range": null, 
                        "title": "Permanently disable BASIC ROM Console", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!BT_ENABLED", 
                        "help": "If enabled, this disables the linking of binary libraries in the application build. Note\nthat after enabling this Wi-Fi/Bluetooth will not work.\n", 
                        "id": "ESP32_NO_BLOBS", 
                        "name": "ESP32_NO_BLOBS", 
                        "range": null, 
                        "title": "No Binary Blobs", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Bootloaders before IDF v2.1 did less initialisation of the\nsystem clock. This setting needs to be enabled to build an app\nwhich can be booted by these older bootloaders.\n\nIf this setting is enabled, the app can be booted by any bootloader\nfrom IDF v1.0 up to the current version.\n\nIf this setting is disabled, the app can only be booted by bootloaders\nfrom IDF v2.1 or newer.\n\nEnabling this setting adds approximately 1KB to the app's IRAM usage.\n", 
                        "id": "ESP32_COMPATIBLE_PRE_V2_1_BOOTLOADERS", 
                        "name": "ESP32_COMPATIBLE_PRE_V2_1_BOOTLOADERS", 
                        "range": null, 
                        "title": "App compatible with bootloaders before IDF v2.1", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "FREERTOS_UNICORE", 
                        "help": "This option allows to place .rtc_data and .rtc_rodata sections into\nRTC fast memory segment to free the slow memory region for ULP programs.\nThis option depends on the CONFIG_FREERTOS_UNICORE option because RTC fast memory\ncan be accessed only by PRO_CPU core.\n", 
                        "id": "ESP32_RTCDATA_IN_FAST_MEM", 
                        "name": "ESP32_RTCDATA_IN_FAST_MEM", 
                        "range": null, 
                        "title": "Place RTC_DATA_ATTR and RTC_RODATA_ATTR variables into RTC fast memory segment", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "ESP32_USE_FIXED_STATIC_RAM_SIZE", 
                                "help": "RAM size dedicated for static variables (.data & .bss sections).\nPlease note that the actual length will be reduced by BT_RESERVE_DRAM if Bluetooth\ncontroller is enabled.\n", 
                                "id": "ESP32_FIXED_STATIC_RAM_SIZE", 
                                "name": "ESP32_FIXED_STATIC_RAM_SIZE", 
                                "range": null, 
                                "title": "Fixed Static RAM size", 
                                "type": "hex"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "If this option is disabled, the DRAM part of the heap starts right after the .bss section,\nwithin the dram0_0 region. As a result, adding or removing some static variables\nwill change the available heap size.\n\nIf this option is enabled, the DRAM part of the heap starts right after the dram0_0 region,\nwhere its length is set with ESP32_FIXED_STATIC_RAM_SIZE\n", 
                        "id": "ESP32_USE_FIXED_STATIC_RAM_SIZE", 
                        "name": "ESP32_USE_FIXED_STATIC_RAM_SIZE", 
                        "range": null, 
                        "title": "Use fixed static RAM size", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "To prevent interrupting DPORT workarounds,\nneed to disable interrupt with a maximum used level in the system.\n", 
                        "id": "ESP32_DPORT_DIS_INTERRUPT_LVL", 
                        "name": "ESP32_DPORT_DIS_INTERRUPT_LVL", 
                        "range": null, 
                        "title": "Disable the interrupt level for the DPORT workarounds", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-esp32-specific", 
                "title": "ESP32-specific", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "PM_ENABLE", 
                                "help": "If enabled, startup code configures dynamic frequency scaling.\nMax CPU frequency is set to CONFIG_ESP32_DEFAULT_CPU_FREQ_MHZ setting,\nmin frequency is set to XTAL frequency.\nIf disabled, DFS will not be active until the application\nconfigures it using esp_pm_configure function.\n", 
                                "id": "PM_DFS_INIT_AUTO", 
                                "name": "PM_DFS_INIT_AUTO", 
                                "range": null, 
                                "title": "Enable dynamic frequency scaling (DFS) at startup", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "PM_ENABLE && (ESP32_TIME_SYSCALL_USE_RTC || ESP32_TIME_SYSCALL_USE_RTC_FRC1)", 
                                "help": "When APB clock frequency changes, high-resolution timer (esp_timer)\nscale and base value need to be adjusted. Each adjustment may cause\nsmall error, and over time such small errors may cause time drift.\nIf this option is enabled, RTC timer will be used as a reference to\ncompensate for the drift.\nIt is recommended that this option is only used if 32k XTAL is selected\nas RTC clock source.\n", 
                                "id": "PM_USE_RTC_TIMER_REF", 
                                "name": "PM_USE_RTC_TIMER_REF", 
                                "range": null, 
                                "title": "Use RTC timer to prevent time drift (EXPERIMENTAL)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "PM_ENABLE", 
                                "help": "If enabled, esp_pm_* functions will keep track of the amount of time\neach of the power management locks has been held, and esp_pm_dump_locks\nfunction will print this information.\nThis feature can be used to analyze which locks are preventing the chip\nfrom going into a lower power state, and see what time the chip spends\nin each power saving mode. This feature does incur some run-time\noverhead, so should typically be disabled in production builds.\n", 
                                "id": "PM_PROFILING", 
                                "name": "PM_PROFILING", 
                                "range": null, 
                                "title": "Enable profiling counters for PM locks", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "PM_ENABLE", 
                                "help": "If enabled, some GPIOs will be used to signal events such as RTOS ticks,\nfrequency switching, entry/exit from idle state. Refer to pm_trace.c\nfile for the list of GPIOs.\nThis feature is intended to be used when analyzing/debugging behavior\nof power management implementation, and should be kept disabled in\napplications.\n", 
                                "id": "PM_TRACE", 
                                "name": "PM_TRACE", 
                                "range": null, 
                                "title": "Enable debug tracing of PM using GPIOs", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "If enabled, application is compiled with support for power management.\nThis option has run-time overhead (increased interrupt latency,\nlonger time to enter idle state), and it also reduces accuracy of\nRTOS ticks and timers used for timekeeping.\nEnable this option if application uses power management APIs.\n", 
                        "id": "PM_ENABLE", 
                        "name": "PM_ENABLE", 
                        "range": null, 
                        "title": "Support for power management", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-power-management", 
                "title": "Power Management", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Some ESP32s have Two Point calibration values burned into eFuse BLOCK3.\nThis option will allow the ADC calibration component to characterize the\nADC-Voltage curve using Two Point values if they are available.\n", 
                        "id": "ADC_CAL_EFUSE_TP_ENABLE", 
                        "name": "ADC_CAL_EFUSE_TP_ENABLE", 
                        "range": null, 
                        "title": "Use Two Point Values", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Some ESP32s have Vref burned into eFuse BLOCK0. This option will allow\nthe ADC calibration component to characterize the ADC-Voltage curve using\neFuse Vref if it is available.\n", 
                        "id": "ADC_CAL_EFUSE_VREF_ENABLE", 
                        "name": "ADC_CAL_EFUSE_VREF_ENABLE", 
                        "range": null, 
                        "title": "Use eFuse Vref", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This option will allow the ADC calibration component to use Lookup Tables\nto correct for non-linear behavior in 11db attenuation. Other attenuations\ndo not exhibit non-linear behavior hence will not be affected by this option.\n", 
                        "id": "ADC_CAL_LUT_ENABLE", 
                        "name": "ADC_CAL_LUT_ENABLE", 
                        "range": null, 
                        "title": "Use Lookup Tables", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-adc-calibration", 
                "title": "ADC-Calibration", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If enabled, esp_timer_dump will dump information such as number of times the timer was started, number of\ntimes the timer has triggered, and the total time it took for the callback to run. This option has some\neffect on timer performance and the amount of memory used for timer storage, and should only be used for\ndebugging/testing purposes.\n", 
                        "id": "ESP_TIMER_PROFILING", 
                        "name": "ESP_TIMER_PROFILING", 
                        "range": null, 
                        "title": "Enable esp_timer profiling features", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Functions esp_err_to_name() and esp_err_to_name_r() return string representations of error codes from a\npre-generated lookup table. This option can be used to turn off the use of the look-up table in order to\nsave memory but this comes at the price of sacrificing distinguishable (meaningful) output string\nrepresentations.\n", 
                        "id": "ESP_ERR_TO_NAME_LOOKUP", 
                        "name": "ESP_ERR_TO_NAME_LOOKUP", 
                        "range": null, 
                        "title": "Enable lookup of error code strings", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Config system event queue size in different application.\n", 
                        "id": "ESP_SYSTEM_EVENT_QUEUE_SIZE", 
                        "name": "ESP_SYSTEM_EVENT_QUEUE_SIZE", 
                        "range": null, 
                        "title": "System event queue size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Config system event task stack size in different application.\n", 
                        "id": "ESP_SYSTEM_EVENT_TASK_STACK_SIZE", 
                        "name": "ESP_SYSTEM_EVENT_TASK_STACK_SIZE", 
                        "range": null, 
                        "title": "Event loop task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Configure the \"main task\" stack size. This is the stack of the task\nwhich calls app_main(). If app_main() returns then this task is deleted\nand its stack memory is freed.\n", 
                        "id": "ESP_MAIN_TASK_STACK_SIZE", 
                        "name": "ESP_MAIN_TASK_STACK_SIZE", 
                        "range": null, 
                        "title": "Main task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Configure the IPC tasks stack size. One IPC task runs on each core\n(in dual core mode), and allows for cross-core function calls.\n\nSee IPC documentation for more details.\n\nThe default stack size should be enough for most common use cases.\nIt can be shrunk if you are sure that you do not use any custom\nIPC functionality.\n", 
                        "id": "ESP_IPC_TASK_STACK_SIZE", 
                        "name": "ESP_IPC_TASK_STACK_SIZE", 
                        "range": [
                            512, 
                            65536
                        ], 
                        "title": "Inter-Processor Call (IPC) task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Configure the stack size of esp_timer/ets_timer task. This task is used\nto dispatch callbacks of timers created using ets_timer and esp_timer\nAPIs. If you are seing stack overflow errors in timer task, increase\nthis value.\n\nNote that this is not the same as FreeRTOS timer task. To configure\nFreeRTOS timer task size, see \"FreeRTOS timer task stack size\" option\nin \"FreeRTOS\" menu.\n", 
                        "id": "ESP_TIMER_TASK_STACK_SIZE", 
                        "name": "ESP_TIMER_TASK_STACK_SIZE", 
                        "range": [
                            2048, 
                            65536
                        ], 
                        "title": "High-resolution timer task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP_CONSOLE_UART>", 
                                "help": null, 
                                "id": "ESP_CONSOLE_UART_DEFAULT", 
                                "name": "ESP_CONSOLE_UART_DEFAULT", 
                                "range": null, 
                                "title": "Default: UART0, TX=GPIO1, RX=GPIO3", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP_CONSOLE_UART>", 
                                "help": null, 
                                "id": "ESP_CONSOLE_UART_CUSTOM", 
                                "name": "ESP_CONSOLE_UART_CUSTOM", 
                                "range": null, 
                                "title": "Custom", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP_CONSOLE_UART>", 
                                "help": null, 
                                "id": "ESP_CONSOLE_UART_NONE", 
                                "name": "ESP_CONSOLE_UART_NONE", 
                                "range": null, 
                                "title": "None", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select whether to use UART for console output (through stdout and stderr).\n\n- Default is to use UART0 on pins GPIO1(TX) and GPIO3(RX).\n- If \"Custom\" is selected, UART0 or UART1 can be chosen,\n  and any pins can be selected.\n- If \"None\" is selected, there will be no console output on any UART, except\n  for initial output from ROM bootloader. This output can be further suppressed by\n  bootstrapping GPIO13 pin to low logic level.\n", 
                        "id": "component-config-common-esp-related-uart-for-console-output", 
                        "name": "ESP_CONSOLE_UART", 
                        "title": "UART for console output", 
                        "type": "choice"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP_CONSOLE_UART_NUM>", 
                                "help": null, 
                                "id": "ESP_CONSOLE_UART_CUSTOM_NUM_0", 
                                "name": "ESP_CONSOLE_UART_CUSTOM_NUM_0", 
                                "range": null, 
                                "title": "UART0", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP_CONSOLE_UART_NUM>", 
                                "help": null, 
                                "id": "ESP_CONSOLE_UART_CUSTOM_NUM_1", 
                                "name": "ESP_CONSOLE_UART_CUSTOM_NUM_1", 
                                "range": null, 
                                "title": "UART1", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "ESP_CONSOLE_UART_CUSTOM", 
                        "help": "Due of a ROM bug, UART2 is not supported for console output\nvia ets_printf.\n", 
                        "id": "component-config-common-esp-related-uart-peripheral-to-use-for-console-output-0-1-", 
                        "name": "ESP_CONSOLE_UART_NUM", 
                        "title": "UART peripheral to use for console output (0-1)", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP_CONSOLE_UART_NUM", 
                        "name": "ESP_CONSOLE_UART_NUM", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP_CONSOLE_UART_CUSTOM", 
                        "help": null, 
                        "id": "ESP_CONSOLE_UART_TX_GPIO", 
                        "name": "ESP_CONSOLE_UART_TX_GPIO", 
                        "range": null, 
                        "title": "UART TX on GPIO#", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP_CONSOLE_UART_CUSTOM", 
                        "help": null, 
                        "id": "ESP_CONSOLE_UART_RX_GPIO", 
                        "name": "ESP_CONSOLE_UART_RX_GPIO", 
                        "range": null, 
                        "title": "UART RX on GPIO#", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!ESP_CONSOLE_UART_NONE", 
                        "help": null, 
                        "id": "ESP_CONSOLE_UART_BAUDRATE", 
                        "name": "ESP_CONSOLE_UART_BAUDRATE", 
                        "range": [
                            1200, 
                            4000000
                        ], 
                        "title": "UART console baud rate", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "ESP_INT_WDT", 
                                "help": "The timeout of the watchdog, in miliseconds. Make this higher than the FreeRTOS tick rate.\n", 
                                "id": "ESP_INT_WDT_TIMEOUT_MS", 
                                "name": "ESP_INT_WDT_TIMEOUT_MS", 
                                "range": [
                                    10, 
                                    10000
                                ], 
                                "title": "Interrupt watchdog timeout (ms)", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "ESP_INT_WDT && !FREERTOS_UNICORE", 
                                "help": "Also detect if interrupts on CPU 1 are disabled for too long.\n", 
                                "id": "ESP_INT_WDT_CHECK_CPU1", 
                                "name": "ESP_INT_WDT_CHECK_CPU1", 
                                "range": null, 
                                "title": "Also watch CPU1 tick interrupt", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "This watchdog timer can detect if the FreeRTOS tick interrupt has not been called for a certain time,\neither because a task turned off interrupts and did not turn them on for a long time, or because an\ninterrupt handler did not return. It will try to invoke the panic handler first and failing that\nreset the SoC.\n", 
                        "id": "ESP_INT_WDT", 
                        "name": "ESP_INT_WDT", 
                        "range": null, 
                        "title": "Interrupt watchdog", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "ESP_TASK_WDT", 
                                "help": "If this option is enabled, the Task Watchdog Timer will be configured to\ntrigger the panic handler when it times out. This can also be configured\nat run time (see Task Watchdog Timer API Reference)\n", 
                                "id": "ESP_TASK_WDT_PANIC", 
                                "name": "ESP_TASK_WDT_PANIC", 
                                "range": null, 
                                "title": "Invoke panic handler on Task Watchdog timeout", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "ESP_TASK_WDT", 
                                "help": "Timeout period configuration for the Task Watchdog Timer in seconds.\nThis is also configurable at run time (see Task Watchdog Timer API Reference)\n", 
                                "id": "ESP_TASK_WDT_TIMEOUT_S", 
                                "name": "ESP_TASK_WDT_TIMEOUT_S", 
                                "range": [
                                    1, 
                                    60
                                ], 
                                "title": "Task Watchdog timeout period (seconds)", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "ESP_TASK_WDT", 
                                "help": "If this option is enabled, the Task Watchdog Timer will watch the CPU0\nIdle Task. Having the Task Watchdog watch the Idle Task allows for detection\nof CPU starvation as the Idle Task not being called is usually a symptom of\nCPU starvation. Starvation of the Idle Task is detrimental as FreeRTOS household\ntasks depend on the Idle Task getting some runtime every now and then.\n", 
                                "id": "ESP_TASK_WDT_CHECK_IDLE_TASK_CPU0", 
                                "name": "ESP_TASK_WDT_CHECK_IDLE_TASK_CPU0", 
                                "range": null, 
                                "title": "Watch CPU0 Idle Task", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "ESP_TASK_WDT && !FREERTOS_UNICORE", 
                                "help": "If this option is enabled, the Task Wtachdog Timer will wach the CPU1\nIdle Task.\n", 
                                "id": "ESP_TASK_WDT_CHECK_IDLE_TASK_CPU1", 
                                "name": "ESP_TASK_WDT_CHECK_IDLE_TASK_CPU1", 
                                "range": null, 
                                "title": "Watch CPU1 Idle Task", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "The Task Watchdog Timer can be used to make sure individual tasks are still\nrunning. Enabling this option will cause the Task Watchdog Timer to be\ninitialized automatically at startup. The Task Watchdog timer can be\ninitialized after startup as well (see Task Watchdog Timer API Reference)\n", 
                        "id": "ESP_TASK_WDT", 
                        "name": "ESP_TASK_WDT", 
                        "range": null, 
                        "title": "Initialize Task Watchdog Timer on startup", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-common-esp-related", 
                "title": "Common ESP-related", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ETH_PHY_INTERFACE>", 
                                        "help": null, 
                                        "id": "ETH_PHY_INTERFACE_RMII", 
                                        "name": "ETH_PHY_INTERFACE_RMII", 
                                        "range": null, 
                                        "title": "Reduced Media Independent Interface (RMII)", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ETH_PHY_INTERFACE>", 
                                        "help": null, 
                                        "id": "ETH_PHY_INTERFACE_MII", 
                                        "name": "ETH_PHY_INTERFACE_MII", 
                                        "range": null, 
                                        "title": "Media Independent Interface (MII)", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "ETH_USE_ESP32_EMAC", 
                                "help": "Select the communication interface between MAC and PHY chip.\n", 
                                "id": "component-config-ethernet-support-esp32-internal-emac-controller-phy-interface", 
                                "name": "ETH_PHY_INTERFACE", 
                                "title": "PHY interface", 
                                "type": "choice"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ETH_RMII_CLK_MODE>", 
                                        "help": "MAC will get RMII clock from outside.\nNote that ESP32 only supports GPIO0 to input the RMII clock.\n", 
                                        "id": "ETH_RMII_CLK_INPUT", 
                                        "name": "ETH_RMII_CLK_INPUT", 
                                        "range": null, 
                                        "title": "Input RMII clock from external", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ETH_RMII_CLK_MODE>", 
                                        "help": "ESP32 can generate RMII clock by internal APLL.\nThis clock can be routed to the external PHY device.\nESP32 supports to route the RMII clock to GPIO0/16/17.\n", 
                                        "id": "ETH_RMII_CLK_OUTPUT", 
                                        "name": "ETH_RMII_CLK_OUTPUT", 
                                        "range": null, 
                                        "title": "Output RMII clock from internal", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "ETH_USE_ESP32_EMAC && ETH_PHY_INTERFACE_RMII", 
                                "help": "Select external or internal RMII clock.\n", 
                                "id": "component-config-ethernet-support-esp32-internal-emac-controller-rmii-clock-mode", 
                                "name": "ETH_RMII_CLK_MODE", 
                                "title": "RMII clock mode", 
                                "type": "choice"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "ETH_USE_ESP32_EMAC && ETH_RMII_CLK_INPUT", 
                                "help": "ESP32 only supports GPIO0 to input the RMII clock.\n", 
                                "id": "ETH_RMII_CLK_IN_GPIO", 
                                "name": "ETH_RMII_CLK_IN_GPIO", 
                                "range": [
                                    0, 
                                    0
                                ], 
                                "title": null, 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "ETH_USE_ESP32_EMAC && ETH_RMII_CLK_OUTPUT", 
                                "help": "GPIO0 can be set to output a pre-divided PLL clock (test only!).\nEnabling this option will configure GPIO0 to output a 50MHz clock.\nIn fact this clock doesn't have directly relationship with EMAC peripheral.\nSometimes this clock won't work well with your PHY chip. You might need to\nadd some extra devices after GPIO0 (e.g. inverter).\nNote that outputting RMII clock on GPIO0 is an experimental practice.\nIf you want the Ethernet to work with WiFi, don't select GPIO0 output mode for stability.\n", 
                                "id": "ETH_RMII_CLK_OUTPUT_GPIO0", 
                                "name": "ETH_RMII_CLK_OUTPUT_GPIO0", 
                                "range": null, 
                                "title": "Output RMII clock from GPIO0 (Experimental!)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "ETH_USE_ESP32_EMAC && ETH_RMII_CLK_OUTPUT && !ETH_RMII_CLK_OUTPUT_GPIO0", 
                                "help": "Set the GPIO number to output RMII Clock.\n", 
                                "id": "ETH_RMII_CLK_OUT_GPIO", 
                                "name": "ETH_RMII_CLK_OUT_GPIO", 
                                "range": null, 
                                "title": "RMII clock GPIO number", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "ETH_USE_ESP32_EMAC", 
                                "help": "Set the size of each buffer used by Ethernet MAC DMA.\n", 
                                "id": "ETH_DMA_BUFFER_SIZE", 
                                "name": "ETH_DMA_BUFFER_SIZE", 
                                "range": [
                                    256, 
                                    1600
                                ], 
                                "title": "Ethernet DMA buffer size (Byte)", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "ETH_USE_ESP32_EMAC", 
                                "help": "Number of DMA receive buffers. Each buffer's size is ETH_DMA_BUFFER_SIZE.\nLarger number of buffers could increase throughput somehow.\n", 
                                "id": "ETH_DMA_RX_BUFFER_NUM", 
                                "name": "ETH_DMA_RX_BUFFER_NUM", 
                                "range": [
                                    3, 
                                    30
                                ], 
                                "title": "Amount of Ethernet DMA Rx buffers", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "ETH_USE_ESP32_EMAC", 
                                "help": "Number of DMA transmit buffers. Each buffer's size is ETH_DMA_BUFFER_SIZE.\nLarger number of buffers could increase throughput somehow.\n", 
                                "id": "ETH_DMA_TX_BUFFER_NUM", 
                                "name": "ETH_DMA_TX_BUFFER_NUM", 
                                "range": [
                                    3, 
                                    30
                                ], 
                                "title": "Amount of Ethernet DMA Tx buffers", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": "IDF_TARGET_ESP32", 
                        "help": "ESP32 integrates a 10/100M Ethernet MAC controller.\n", 
                        "id": "ETH_USE_ESP32_EMAC", 
                        "is_menuconfig": true, 
                        "name": "ETH_USE_ESP32_EMAC", 
                        "range": null, 
                        "title": "Support ESP32 internal EMAC controller", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "ETH_USE_SPI_ETHERNET", 
                                "help": "DM9051 is a fast Ethernet controller with an SPI interface.\nIt's also integrated with a 10/100M PHY and MAC.\nSet true to enable DM9051 driver.\n", 
                                "id": "ETH_SPI_ETHERNET_DM9051", 
                                "name": "ETH_SPI_ETHERNET_DM9051", 
                                "range": null, 
                                "title": "Use DM9051", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "ESP-IDF can also support some SPI-Ethernet module.\n", 
                        "id": "ETH_USE_SPI_ETHERNET", 
                        "is_menuconfig": true, 
                        "name": "ETH_USE_SPI_ETHERNET", 
                        "range": null, 
                        "title": "Support SPI to Ethernet Module", 
                        "type": "menu"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-ethernet", 
                "title": "Ethernet", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enables collections of statistics in the event loop library such as the number of events posted\nto/recieved by an event loop, number of callbacks involved, number of events dropped to to a full event\nloop queue, run time of event handlers, and number of times/run time of each event handler.\n", 
                        "id": "ESP_EVENT_LOOP_PROFILING", 
                        "name": "ESP_EVENT_LOOP_PROFILING", 
                        "range": null, 
                        "title": "Enable event loop profiling", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "ESP_EVENT_POST_FROM_ISR", 
                                "help": "Enable posting events from interrupt handlers placed in IRAM. Enabling this option places API functions\nesp_event_post and esp_event_post_to in IRAM.\n", 
                                "id": "ESP_EVENT_POST_FROM_IRAM_ISR", 
                                "name": "ESP_EVENT_POST_FROM_IRAM_ISR", 
                                "range": null, 
                                "title": "Support posting events from ISRs placed in IRAM", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable posting events from interrupt handlers.\n", 
                        "id": "ESP_EVENT_POST_FROM_ISR", 
                        "name": "ESP_EVENT_POST_FROM_ISR", 
                        "range": null, 
                        "title": "Support posting events from ISRs", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-event-loop-library", 
                "title": "Event Loop Library", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP_GDBSTUB_ENABLED", 
                        "name": "ESP_GDBSTUB_ENABLED", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "ESP_GDBSTUB_SUPPORT_TASKS", 
                                "help": "Set the number of tasks which GDB Stub will support.\n", 
                                "id": "ESP_GDBSTUB_MAX_TASKS", 
                                "name": "ESP_GDBSTUB_MAX_TASKS", 
                                "range": null, 
                                "title": "Maximum number of tasks supported by GDB Stub", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": "ESP_GDBSTUB_ENABLED", 
                        "help": "If enabled, GDBStub can supply the list of FreeRTOS tasks to GDB.\nThread list can be queried from GDB using 'info threads' command.\nNote that if GDB task lists were corrupted, this feature may not work.\nIf GDBStub fails, try disabling this feature.\n", 
                        "id": "ESP_GDBSTUB_SUPPORT_TASKS", 
                        "name": "ESP_GDBSTUB_SUPPORT_TASKS", 
                        "range": null, 
                        "title": "Enable listing FreeRTOS tasks through GDB Stub", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-gdb-stub", 
                "title": "GDB Stub", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This option will enable https protocol by linking mbedtls library and initializing SSL transport\n", 
                        "id": "ESP_HTTP_CLIENT_ENABLE_HTTPS", 
                        "name": "ESP_HTTP_CLIENT_ENABLE_HTTPS", 
                        "range": null, 
                        "title": "Enable https", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This option will enable HTTP Basic Authentication. It is disabled by default as Basic\nauth uses unencrypted encoding, so it introduces a vulnerability when not using TLS\n", 
                        "id": "ESP_HTTP_CLIENT_ENABLE_BASIC_AUTH", 
                        "name": "ESP_HTTP_CLIENT_ENABLE_BASIC_AUTH", 
                        "range": null, 
                        "title": "Enable HTTP Basic Authentication", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-esp-http-client", 
                "title": "ESP HTTP client", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This sets the maximum supported size of headers section in HTTP request packet to be processed by the\nserver\n", 
                        "id": "HTTPD_MAX_REQ_HDR_LEN", 
                        "name": "HTTPD_MAX_REQ_HDR_LEN", 
                        "range": null, 
                        "title": "Max HTTP Request Header Length", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This sets the maximum supported size of HTTP request URI to be processed by the server\n", 
                        "id": "HTTPD_MAX_URI_LEN", 
                        "name": "HTTPD_MAX_URI_LEN", 
                        "range": null, 
                        "title": "Max HTTP URI Length", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Using TCP_NODEALY socket option ensures that HTTP error response reaches the client before the\nunderlying socket is closed. Please note that turning this off may cause multiple test failures\n", 
                        "id": "HTTPD_ERR_RESP_NO_DELAY", 
                        "name": "HTTPD_ERR_RESP_NO_DELAY", 
                        "range": null, 
                        "title": "Use TCP_NODELAY socket option when sending HTTP error responses", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This sets the size of the temporary buffer used to receive and discard any remaining data that is\nreceived from the HTTP client in the request, but not processed as part of the server HTTP request\nhandler.\n\nIf the remaining data is larger than the available buffer size, the buffer will be filled in multiple\niterations. The buffer should be small enough to fit on the stack, but large enough to avoid excessive\niterations.\n", 
                        "id": "HTTPD_PURGE_BUF_LEN", 
                        "name": "HTTPD_PURGE_BUF_LEN", 
                        "range": null, 
                        "title": "Length of temporary buffer for purging data", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enabling this will log discarded binary HTTP request data at Debug level.\nFor large content data this may not be desirable as it will clutter the log.\n", 
                        "id": "HTTPD_LOG_PURGE_DATA", 
                        "name": "HTTPD_LOG_PURGE_DATA", 
                        "range": null, 
                        "title": "Log purged content data at Debug level", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-http-server", 
                "title": "HTTP Server", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "It is highly recommended to keep HTTPS (along with server certificate validation) enabled.\nEnabling this option comes with potential risk of:\n- Non-encrypted communication channel with server\n- Accepting firmware upgrade image from server with fake identity\n", 
                        "id": "OTA_ALLOW_HTTP", 
                        "name": "OTA_ALLOW_HTTP", 
                        "range": null, 
                        "title": "Allow HTTP for OTA (WARNING: ONLY FOR TESTING PURPOSE, READ HELP)", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-esp-https-ota", 
                "title": "ESP HTTPS OTA", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable ESP HTTPS server component\n", 
                        "id": "ESP_HTTPS_SERVER_ENABLE", 
                        "name": "ESP_HTTPS_SERVER_ENABLE", 
                        "range": null, 
                        "title": "Enable ESP_HTTPS_SERVER component", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-esp-https-server", 
                "title": "ESP HTTPS server", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "BT_ENABLED", 
                        "help": "If enabled, WiFi & Bluetooth coexistence is controlled by software rather than hardware.\nRecommended for heavy traffic scenarios. Both coexistence configuration options are\nautomatically managed, no user intervention is required.\nIf only Bluetooth is used, it is recommended to disable this option to reduce binary file\nsize.\n", 
                        "id": "ESP32_WIFI_SW_COEXIST_ENABLE", 
                        "name": "ESP32_WIFI_SW_COEXIST_ENABLE", 
                        "range": null, 
                        "title": "Software controls WiFi/Bluetooth coexistence", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Set the number of WiFi static RX buffers. Each buffer takes approximately 1.6KB of RAM.\nThe static rx buffers are allocated when esp_wifi_init is called, they are not freed\nuntil esp_wifi_deinit is called.\n\nWiFi hardware use these buffers to receive all 802.11 frames.\nA higher number may allow higher throughput but increases memory use. If ESP32_WIFI_AMPDU_RX_ENABLED\nis enabled, this value is recommended to set equal or bigger than ESP32_WIFI_RX_BA_WIN in order to\nachieve better throughput and compatibility with both stations and APs.\n", 
                        "id": "ESP32_WIFI_STATIC_RX_BUFFER_NUM", 
                        "name": "ESP32_WIFI_STATIC_RX_BUFFER_NUM", 
                        "range": [
                            2, 
                            25
                        ], 
                        "title": "Max number of WiFi static RX buffers", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Set the number of WiFi dynamic RX buffers, 0 means unlimited RX buffers will be allocated\n(provided sufficient free RAM). The size of each dynamic RX buffer depends on the size of\nthe received data frame.\n\nFor each received data frame, the WiFi driver makes a copy to an RX buffer and then delivers\nit to the high layer TCP/IP stack. The dynamic RX buffer is freed after the higher layer has\nsuccessfully received the data frame.\n\nFor some applications, WiFi data frames may be received faster than the application can\nprocess them. In these cases we may run out of memory if RX buffer number is unlimited (0).\n\nIf a dynamic RX buffer limit is set, it should be at least the number of static RX buffers.\n", 
                        "id": "ESP32_WIFI_DYNAMIC_RX_BUFFER_NUM", 
                        "name": "ESP32_WIFI_DYNAMIC_RX_BUFFER_NUM", 
                        "range": [
                            0, 
                            128
                        ], 
                        "title": "Max number of WiFi dynamic RX buffers", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_WIFI_TX_BUFFER>", 
                                "help": null, 
                                "id": "ESP32_WIFI_STATIC_TX_BUFFER", 
                                "name": "ESP32_WIFI_STATIC_TX_BUFFER", 
                                "range": null, 
                                "title": "Static", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "!SPIRAM_USE_MALLOC && <choice ESP32_WIFI_TX_BUFFER>", 
                                "help": null, 
                                "id": "ESP32_WIFI_DYNAMIC_TX_BUFFER", 
                                "name": "ESP32_WIFI_DYNAMIC_TX_BUFFER", 
                                "range": null, 
                                "title": "Dynamic", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select type of WiFi TX buffers:\n\nIf \"Static\" is selected, WiFi TX buffers are allocated when WiFi is initialized and released\nwhen WiFi is de-initialized. The size of each static TX buffer is fixed to about 1.6KB.\n\nIf \"Dynamic\" is selected, each WiFi TX buffer is allocated as needed when a data frame is\ndelivered to the Wifi driver from the TCP/IP stack. The buffer is freed after the data frame\nhas been sent by the WiFi driver. The size of each dynamic TX buffer depends on the length\nof each data frame sent by the TCP/IP layer.\n\nIf PSRAM is enabled, \"Static\" should be selected to guarantee enough WiFi TX buffers.\nIf PSRAM is disabled, \"Dynamic\" should be selected to improve the utilization of RAM.\n", 
                        "id": "component-config-wi-fi-type-of-wifi-tx-buffers", 
                        "name": "ESP32_WIFI_TX_BUFFER", 
                        "title": "Type of WiFi TX buffers", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP32_WIFI_TX_BUFFER_TYPE", 
                        "name": "ESP32_WIFI_TX_BUFFER_TYPE", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_WIFI_STATIC_TX_BUFFER", 
                        "help": "Set the number of WiFi static TX buffers. Each buffer takes approximately 1.6KB of RAM.\nThe static RX buffers are allocated when esp_wifi_init() is called, they are not released\nuntil esp_wifi_deinit() is called.\n\nFor each transmitted data frame from the higher layer TCP/IP stack, the WiFi driver makes a\ncopy of it in a TX buffer.  For some applications especially UDP applications, the upper\nlayer can deliver frames faster than WiFi layer can transmit. In these cases, we may run out\nof TX buffers.\n", 
                        "id": "ESP32_WIFI_STATIC_TX_BUFFER_NUM", 
                        "name": "ESP32_WIFI_STATIC_TX_BUFFER_NUM", 
                        "range": null, 
                        "title": "Max number of WiFi static TX buffers", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_WIFI_DYNAMIC_TX_BUFFER", 
                        "help": "Set the number of WiFi dynamic TX buffers. The size of each dynamic TX buffer is not fixed,\nit depends on the size of each transmitted data frame.\n\nFor each transmitted frame from the higher layer TCP/IP stack, the WiFi driver makes a copy\nof it in a TX buffer. For some applications, especially UDP applications, the upper layer\ncan deliver frames faster than WiFi layer can transmit. In these cases, we may run out of TX\nbuffers.\n", 
                        "id": "ESP32_WIFI_DYNAMIC_TX_BUFFER_NUM", 
                        "name": "ESP32_WIFI_DYNAMIC_TX_BUFFER_NUM", 
                        "range": [
                            16, 
                            128
                        ], 
                        "title": "Max number of WiFi dynamic TX buffers", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select this option to enable CSI(Channel State Information) feature. CSI takes about\nCONFIG_ESP32_WIFI_STATIC_RX_BUFFER_NUM KB of RAM. If CSI is not used, it is better to disable\nthis feature in order to save memory.\n", 
                        "id": "ESP32_WIFI_CSI_ENABLED", 
                        "name": "ESP32_WIFI_CSI_ENABLED", 
                        "range": null, 
                        "title": "WiFi CSI(Channel State Information)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "ESP32_WIFI_AMPDU_TX_ENABLED", 
                                "help": "Set the size of WiFi Block Ack TX window. Generally a bigger value means higher throughput but\nmore memory. Most of time we should NOT change the default value unless special reason, e.g.\ntest the maximum UDP TX throughput with iperf etc. For iperf test in shieldbox, the recommended\nvalue is 9~12.\n", 
                                "id": "ESP32_WIFI_TX_BA_WIN", 
                                "name": "ESP32_WIFI_TX_BA_WIN", 
                                "range": [
                                    2, 
                                    32
                                ], 
                                "title": "WiFi AMPDU TX BA window size", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select this option to enable AMPDU TX feature\n", 
                        "id": "ESP32_WIFI_AMPDU_TX_ENABLED", 
                        "name": "ESP32_WIFI_AMPDU_TX_ENABLED", 
                        "range": null, 
                        "title": "WiFi AMPDU TX", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "ESP32_WIFI_AMPDU_RX_ENABLED", 
                                "help": "Set the size of WiFi Block Ack RX window. Generally a bigger value means higher throughput and better\ncompatibility but more memory. Most of time we should NOT change the default value unless special\nreason, e.g. test the maximum UDP RX throughput with iperf etc. For iperf test in shieldbox, the\nrecommended value is 9~12. If PSRAM is used and WiFi memory is prefered to allocat in PSRAM first,\nthe default and minimum value should be 16 to achieve better throughput and compatibility with both\nstations and APs.\n", 
                                "id": "ESP32_WIFI_RX_BA_WIN", 
                                "name": "ESP32_WIFI_RX_BA_WIN", 
                                "range": [
                                    2, 
                                    32
                                ], 
                                "title": "WiFi AMPDU RX BA window size", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select this option to enable AMPDU RX feature\n", 
                        "id": "ESP32_WIFI_AMPDU_RX_ENABLED", 
                        "name": "ESP32_WIFI_AMPDU_RX_ENABLED", 
                        "range": null, 
                        "title": "WiFi AMPDU RX", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select this option to enable WiFi NVS flash\n", 
                        "id": "ESP32_WIFI_NVS_ENABLED", 
                        "name": "ESP32_WIFI_NVS_ENABLED", 
                        "range": null, 
                        "title": "WiFi NVS flash", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_WIFI_TASK_CORE_ID>", 
                                "help": null, 
                                "id": "ESP32_WIFI_TASK_PINNED_TO_CORE_0", 
                                "name": "ESP32_WIFI_TASK_PINNED_TO_CORE_0", 
                                "range": null, 
                                "title": "Core 0", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_WIFI_TASK_CORE_ID>", 
                                "help": null, 
                                "id": "ESP32_WIFI_TASK_PINNED_TO_CORE_1", 
                                "name": "ESP32_WIFI_TASK_PINNED_TO_CORE_1", 
                                "range": null, 
                                "title": "Core 1", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "!FREERTOS_UNICORE", 
                        "help": "Pinned WiFi task to core 0 or core 1.\n", 
                        "id": "component-config-wi-fi-wifi-task-core-id", 
                        "name": "ESP32_WIFI_TASK_CORE_ID", 
                        "title": "WiFi Task Core ID", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "ESP-MESH utilizes beacon frames to detect and resolve root node conflicts (see documentation). However the\ndefault length of a beacon frame can simultaneously hold only five root node identifier structures,\nmeaning that a root node conflict of up to five nodes can be detected at one time. In the occurence of\nmore root nodes conflict involving more than five root nodes, the conflict resolution process will detect\nfive of the root nodes, resolve the conflict, and re-detect more root nodes. This process will repeat\nuntil all root node conflicts are resolved. However this process can generally take a very long time.\n\nTo counter this situation, the beacon frame length can be increased such that more root nodes can be\ndetected simultaneously. Each additional root node will require 36 bytes and should be added ontop of the\ndefault beacon frame length of\n752 bytes. For example, if you want to detect 10 root nodes simultaneously, you need to set the beacon\nframe length as\n932 (752+36*5).\n\nSetting a longer beacon length also assists with debugging as the conflicting root nodes can be identified\nmore quickly.\n", 
                        "id": "ESP32_WIFI_SOFTAP_BEACON_MAX_LEN", 
                        "name": "ESP32_WIFI_SOFTAP_BEACON_MAX_LEN", 
                        "range": [
                            752, 
                            1256
                        ], 
                        "title": "Max length of WiFi SoftAP Beacon", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Set the number of WiFi management short buffer.\n", 
                        "id": "ESP32_WIFI_MGMT_SBUF_NUM", 
                        "name": "ESP32_WIFI_MGMT_SBUF_NUM", 
                        "range": [
                            6, 
                            32
                        ], 
                        "title": "WiFi mgmt short buffer number", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP32_WIFI_DEBUG_LOG_LEVEL>", 
                                        "help": null, 
                                        "id": "ESP32_WIFI_DEBUG_LOG_DEBUG", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_DEBUG", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Debug", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP32_WIFI_DEBUG_LOG_LEVEL>", 
                                        "help": null, 
                                        "id": "ESP32_WIFI_DEBUG_LOG_VERBOSE", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_VERBOSE", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Verbose", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "ESP32_WIFI_DEBUG_LOG_ENABLE", 
                                "help": "The WiFi log is divided into the following levels: ERROR,WARNING,INFO,DEBUG,VERBOSE.\nThe ERROR,WARNING,INFO levels are enabled by default, and the DEBUG,VERBOSE levels can be enabled here.\n", 
                                "id": "component-config-wi-fi-enable-wifi-debug-log-wifi-debug-log-level", 
                                "name": "ESP32_WIFI_DEBUG_LOG_LEVEL", 
                                "title": "WiFi debug log level", 
                                "type": "choice"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP32_WIFI_DEBUG_LOG_MODULE>", 
                                        "help": null, 
                                        "id": "ESP32_WIFI_DEBUG_LOG_MODULE_ALL", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_MODULE_ALL", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Module All", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP32_WIFI_DEBUG_LOG_MODULE>", 
                                        "help": null, 
                                        "id": "ESP32_WIFI_DEBUG_LOG_MODULE_WIFI", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_MODULE_WIFI", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Module WiFi", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP32_WIFI_DEBUG_LOG_MODULE>", 
                                        "help": null, 
                                        "id": "ESP32_WIFI_DEBUG_LOG_MODULE_COEX", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_MODULE_COEX", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Module Coex", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP32_WIFI_DEBUG_LOG_MODULE>", 
                                        "help": null, 
                                        "id": "ESP32_WIFI_DEBUG_LOG_MODULE_MESH", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_MODULE_MESH", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Module Mesh", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "ESP32_WIFI_DEBUG_LOG_ENABLE", 
                                "help": "The WiFi log module contains three parts: WIFI,COEX,MESH. The WIFI module indicates the logs related to\nWiFi, the COEX module indicates the logs related to WiFi and BT(or BLE) coexist, the MESH module indicates\nthe logs related to Mesh. When ESP32_WIFI_LOG_MODULE_ALL is enabled, all modules are selected.\n", 
                                "id": "component-config-wi-fi-enable-wifi-debug-log-wifi-debug-log-module", 
                                "name": "ESP32_WIFI_DEBUG_LOG_MODULE", 
                                "title": "WiFi debug log module", 
                                "type": "choice"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "ESP32_WIFI_DEBUG_LOG_SUBMODULE", 
                                        "help": "When this option is enabled, all debug submodules are selected.\n", 
                                        "id": "ESP32_WIFI_DEBUG_LOG_SUBMODULE_ALL", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_SUBMODULE_ALL", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Submodule All", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP32_WIFI_DEBUG_LOG_SUBMODULE && !ESP32_WIFI_DEBUG_LOG_SUBMODULE_ALL", 
                                        "help": null, 
                                        "id": "ESP32_WIFI_DEBUG_LOG_SUBMODULE_INIT", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_SUBMODULE_INIT", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Submodule Init", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP32_WIFI_DEBUG_LOG_SUBMODULE && !ESP32_WIFI_DEBUG_LOG_SUBMODULE_ALL", 
                                        "help": null, 
                                        "id": "ESP32_WIFI_DEBUG_LOG_SUBMODULE_IOCTL", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_SUBMODULE_IOCTL", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Submodule Ioctl", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP32_WIFI_DEBUG_LOG_SUBMODULE && !ESP32_WIFI_DEBUG_LOG_SUBMODULE_ALL", 
                                        "help": null, 
                                        "id": "ESP32_WIFI_DEBUG_LOG_SUBMODULE_CONN", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_SUBMODULE_CONN", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Submodule Conn", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP32_WIFI_DEBUG_LOG_SUBMODULE && !ESP32_WIFI_DEBUG_LOG_SUBMODULE_ALL", 
                                        "help": null, 
                                        "id": "ESP32_WIFI_DEBUG_LOG_SUBMODULE_SCAN", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_SUBMODULE_SCAN", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Submodule Scan", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "ESP32_WIFI_DEBUG_LOG_ENABLE", 
                                "help": "Enable this option to set the WiFi debug log submodule.\nCurrently the log submodule contains the following parts: INIT,IOCTL,CONN,SCAN.\nThe INIT submodule indicates the initialization process.The IOCTL submodule indicates the API calling\nprocess.\nThe CONN submodule indicates the connecting process.The SCAN submodule indicates the scaning process.\n", 
                                "id": "ESP32_WIFI_DEBUG_LOG_SUBMODULE", 
                                "name": "ESP32_WIFI_DEBUG_LOG_SUBMODULE", 
                                "range": null, 
                                "title": "WiFi debug log submodule", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select this option to enable WiFi debug log\n", 
                        "id": "ESP32_WIFI_DEBUG_LOG_ENABLE", 
                        "name": "ESP32_WIFI_DEBUG_LOG_ENABLE", 
                        "range": null, 
                        "title": "Enable WiFi debug log", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select this option to place frequently called Wi-Fi library functions in IRAM.\nWhen this option is disabled, more than 10Kbytes of IRAM memory will be saved\nbut Wi-Fi throughput will be reduced.\n", 
                        "id": "ESP32_WIFI_IRAM_OPT", 
                        "name": "ESP32_WIFI_IRAM_OPT", 
                        "range": null, 
                        "title": "WiFi IRAM speed optimization", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select this option to place frequently called Wi-Fi library RX functions in IRAM.\nWhen this option is disabled, more than 17Kbytes of IRAM memory will be saved\nbut Wi-Fi performance will be reduced.\n", 
                        "id": "ESP32_WIFI_RX_IRAM_OPT", 
                        "name": "ESP32_WIFI_RX_IRAM_OPT", 
                        "range": null, 
                        "title": "WiFi RX IRAM speed optimization", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select this option to allow the device to establish a WPA3-Personal connection with eligible AP's.\nPMF (Protected Management Frames) is a prerequisite feature for a WPA3 connection, it needs to be\nexplicitly configured before attempting connection. Please refer to the Wi-Fi Driver API Guide for details.\n", 
                        "id": "ESP32_WIFI_ENABLE_WPA3_SAE", 
                        "name": "ESP32_WIFI_ENABLE_WPA3_SAE", 
                        "range": null, 
                        "title": "Enable WPA3-Personal", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-wi-fi", 
                "title": "Wi-Fi", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If this option is enabled, NVS will be initialized and calibration data will be loaded from there.\nPHY calibration will be skipped on deep sleep wakeup. If calibration data is not found, full calibration\nwill be performed and stored in NVS. Normally, only partial calibration will be performed.\nIf this option is disabled, full calibration will be performed.\n\nIf it's easy that your board calibrate bad data, choose 'n'.\nTwo cases for example, you should choose 'n':\n1.If your board is easy to be booted up with antenna disconnected.\n2.Because of your board design, each time when you do calibration, the result are too unstable.\nIf unsure, choose 'y'.\n", 
                        "id": "ESP32_PHY_CALIBRATION_AND_DATA_STORAGE", 
                        "name": "ESP32_PHY_CALIBRATION_AND_DATA_STORAGE", 
                        "range": null, 
                        "title": "Store phy calibration data in NVS", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If enabled, PHY init data will be loaded from a partition.\nWhen using a custom partition table, make sure that PHY data\npartition is included (type: 'data', subtype: 'phy').\nWith default partition tables, this is done automatically.\nIf PHY init data is stored in a partition, it has to be flashed there,\notherwise runtime error will occur.\n\nIf this option is not enabled, PHY init data will be embedded\ninto the application binary.\n\nIf unsure, choose 'n'.\n", 
                        "id": "ESP32_PHY_INIT_DATA_IN_PARTITION", 
                        "name": "ESP32_PHY_INIT_DATA_IN_PARTITION", 
                        "range": null, 
                        "title": "Use a partition to store PHY init data", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Set maximum transmit power for WiFi radio. Actual transmit power for high\ndata rates may be lower than this setting.\n", 
                        "id": "ESP32_PHY_MAX_WIFI_TX_POWER", 
                        "name": "ESP32_PHY_MAX_WIFI_TX_POWER", 
                        "range": [
                            10, 
                            20
                        ], 
                        "title": "Max WiFi TX power (dBm)", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP32_PHY_MAX_TX_POWER", 
                        "name": "ESP32_PHY_MAX_TX_POWER", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-phy", 
                "title": "PHY", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "!SPIRAM_ALLOW_STACK_EXTERNAL_MEMORY && <choice ESP32_COREDUMP_TO_FLASH_OR_UART>", 
                                "help": null, 
                                "id": "ESP32_ENABLE_COREDUMP_TO_FLASH", 
                                "name": "ESP32_ENABLE_COREDUMP_TO_FLASH", 
                                "range": null, 
                                "title": "Flash", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_COREDUMP_TO_FLASH_OR_UART>", 
                                "help": null, 
                                "id": "ESP32_ENABLE_COREDUMP_TO_UART", 
                                "name": "ESP32_ENABLE_COREDUMP_TO_UART", 
                                "range": null, 
                                "title": "UART", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_COREDUMP_TO_FLASH_OR_UART>", 
                                "help": null, 
                                "id": "ESP32_ENABLE_COREDUMP_TO_NONE", 
                                "name": "ESP32_ENABLE_COREDUMP_TO_NONE", 
                                "range": null, 
                                "title": "None", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select place to store core dump: flash, uart or none (to disable core dumps generation).\n\nCore dumps to Flash are not available if PSRAM is used for task stacks.\n\nIf core dump is configured to be stored in flash and custom partition table is used add\ncorresponding entry to your CSV. For examples, please see predefined partition table CSV descriptions\nin the components/partition_table directory.\n", 
                        "id": "component-config-core-dump-data-destination", 
                        "name": "ESP32_COREDUMP_TO_FLASH_OR_UART", 
                        "title": "Data destination", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enables/disable core dump module.\n", 
                        "id": "ESP32_ENABLE_COREDUMP", 
                        "name": "ESP32_ENABLE_COREDUMP", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_ENABLE_COREDUMP", 
                        "help": "Maximum number of tasks snapshots in core dump.\n", 
                        "id": "ESP32_CORE_DUMP_MAX_TASKS_NUM", 
                        "name": "ESP32_CORE_DUMP_MAX_TASKS_NUM", 
                        "range": null, 
                        "title": "Maximum number of tasks", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_ENABLE_COREDUMP_TO_UART", 
                        "help": "Config delay (in ms) before printing core dump to UART.\nDelay can be interrupted by pressing Enter key.\n", 
                        "id": "ESP32_CORE_DUMP_UART_DELAY", 
                        "name": "ESP32_CORE_DUMP_UART_DELAY", 
                        "range": null, 
                        "title": "Delay before print to UART", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-core-dump", 
                "title": "Core dump", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_DYNAMIC", 
                                "name": "FATFS_CODEPAGE_DYNAMIC", 
                                "range": null, 
                                "title": "Dynamic (all code pages supported)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_437", 
                                "name": "FATFS_CODEPAGE_437", 
                                "range": null, 
                                "title": "US (CP437)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_720", 
                                "name": "FATFS_CODEPAGE_720", 
                                "range": null, 
                                "title": "Arabic (CP720)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_737", 
                                "name": "FATFS_CODEPAGE_737", 
                                "range": null, 
                                "title": "Greek (CP737)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_771", 
                                "name": "FATFS_CODEPAGE_771", 
                                "range": null, 
                                "title": "KBL (CP771)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_775", 
                                "name": "FATFS_CODEPAGE_775", 
                                "range": null, 
                                "title": "Baltic (CP775)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_850", 
                                "name": "FATFS_CODEPAGE_850", 
                                "range": null, 
                                "title": "Latin 1 (CP850)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_852", 
                                "name": "FATFS_CODEPAGE_852", 
                                "range": null, 
                                "title": "Latin 2 (CP852)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_855", 
                                "name": "FATFS_CODEPAGE_855", 
                                "range": null, 
                                "title": "Cyrillic (CP855)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_857", 
                                "name": "FATFS_CODEPAGE_857", 
                                "range": null, 
                                "title": "Turkish (CP857)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_860", 
                                "name": "FATFS_CODEPAGE_860", 
                                "range": null, 
                                "title": "Portugese (CP860)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_861", 
                                "name": "FATFS_CODEPAGE_861", 
                                "range": null, 
                                "title": "Icelandic (CP861)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_862", 
                                "name": "FATFS_CODEPAGE_862", 
                                "range": null, 
                                "title": "Hebrew (CP862)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_863", 
                                "name": "FATFS_CODEPAGE_863", 
                                "range": null, 
                                "title": "Canadian French (CP863)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_864", 
                                "name": "FATFS_CODEPAGE_864", 
                                "range": null, 
                                "title": "Arabic (CP864)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_865", 
                                "name": "FATFS_CODEPAGE_865", 
                                "range": null, 
                                "title": "Nordic (CP865)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_866", 
                                "name": "FATFS_CODEPAGE_866", 
                                "range": null, 
                                "title": "Russian (CP866)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_869", 
                                "name": "FATFS_CODEPAGE_869", 
                                "range": null, 
                                "title": "Greek 2 (CP869)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_932", 
                                "name": "FATFS_CODEPAGE_932", 
                                "range": null, 
                                "title": "Japanese (DBCS) (CP932)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_936", 
                                "name": "FATFS_CODEPAGE_936", 
                                "range": null, 
                                "title": "Simplified Chinese (DBCS) (CP936)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_949", 
                                "name": "FATFS_CODEPAGE_949", 
                                "range": null, 
                                "title": "Korean (DBCS) (CP949)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "id": "FATFS_CODEPAGE_950", 
                                "name": "FATFS_CODEPAGE_950", 
                                "range": null, 
                                "title": "Traditional Chinese (DBCS) (CP950)", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "OEM code page used for file name encodings.\n\nIf \"Dynamic\" is selected, code page can be chosen at runtime using\nf_setcp function. Note that choosing this option will increase\napplication size by ~480kB.\n", 
                        "id": "component-config-fat-filesystem-support-oem-code-page", 
                        "name": "FATFS_CHOOSE_CODEPAGE", 
                        "title": "OEM Code Page", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "FATFS_CODEPAGE", 
                        "name": "FATFS_CODEPAGE", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_LONG_FILENAMES>", 
                                "help": null, 
                                "id": "FATFS_LFN_NONE", 
                                "name": "FATFS_LFN_NONE", 
                                "range": null, 
                                "title": "No long filenames", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_LONG_FILENAMES>", 
                                "help": null, 
                                "id": "FATFS_LFN_HEAP", 
                                "name": "FATFS_LFN_HEAP", 
                                "range": null, 
                                "title": "Long filename buffer in heap", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_LONG_FILENAMES>", 
                                "help": null, 
                                "id": "FATFS_LFN_STACK", 
                                "name": "FATFS_LFN_STACK", 
                                "range": null, 
                                "title": "Long filename buffer on stack", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Support long filenames in FAT. Long filename data increases\nmemory usage. FATFS can be configured to store the buffer for\nlong filename data in stack or heap.\n", 
                        "id": "component-config-fat-filesystem-support-long-filename-support", 
                        "name": "FATFS_LONG_FILENAMES", 
                        "title": "Long filename support", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!FATFS_LFN_NONE", 
                        "help": "Maximum long filename length. Can be reduced to save RAM.\n", 
                        "id": "FATFS_MAX_LFN", 
                        "name": "FATFS_MAX_LFN", 
                        "range": null, 
                        "title": "Max long filename length", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_API_ENCODING>", 
                                "help": null, 
                                "id": "FATFS_API_ENCODING_ANSI_OEM", 
                                "name": "FATFS_API_ENCODING_ANSI_OEM", 
                                "range": null, 
                                "title": "API uses ANSI/OEM encoding", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_API_ENCODING>", 
                                "help": null, 
                                "id": "FATFS_API_ENCODING_UTF_16", 
                                "name": "FATFS_API_ENCODING_UTF_16", 
                                "range": null, 
                                "title": "API uses UTF-16 encoding", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_API_ENCODING>", 
                                "help": null, 
                                "id": "FATFS_API_ENCODING_UTF_8", 
                                "name": "FATFS_API_ENCODING_UTF_8", 
                                "range": null, 
                                "title": "API uses UTF-8 encoding", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "!FATFS_LFN_NONE", 
                        "help": "Choose encoding for character and string arguments/returns when using\nFATFS APIs. The encoding of arguments will usually depend on text\neditor settings.\n", 
                        "id": "component-config-fat-filesystem-support-api-character-encoding", 
                        "name": "FATFS_API_ENCODING", 
                        "title": "API character encoding", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This option sets the FATFS configuration value _FS_LOCK.\nThe option _FS_LOCK switches file lock function to control duplicated file open\nand illegal operation to open objects.\n\n* 0: Disable file lock function. To avoid volume corruption, application\nshould avoid illegal open, remove and rename to the open objects.\n\n* >0: Enable file lock function. The value defines how many files/sub-directories\ncan be opened simultaneously under file lock control.\n\nNote that the file lock control is independent of re-entrancy.\n", 
                        "id": "FATFS_FS_LOCK", 
                        "name": "FATFS_FS_LOCK", 
                        "range": [
                            0, 
                            65535
                        ], 
                        "title": "Number of simultaneously open files protected by lock function", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This option sets FATFS configuration value _FS_TIMEOUT, scaled to milliseconds.\nSets the number of milliseconds FATFS will wait to acquire a mutex when\noperating on an open file. For example, if one task is performing a lenghty\noperation, another task will wait for the first task to release the lock,\nand time out after amount of time set by this option.\n", 
                        "id": "FATFS_TIMEOUT_MS", 
                        "name": "FATFS_TIMEOUT_MS", 
                        "range": null, 
                        "title": "Timeout for acquiring a file lock, ms", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This option affects FATFS configuration value _FS_TINY.\n\nIf this option is set, _FS_TINY is 0, and each open file has its own cache,\nsize of the cache is equal to the _MAX_SS variable (512 or 4096 bytes).\nThis option uses more RAM if more than 1 file is open, but needs less reads\nand writes to the storage for some operations.\n\nIf this option is not set, _FS_TINY is 1, and single cache is used for\nall open files, size is also equal to _MAX_SS variable. This reduces the\namount of heap used when multiple files are open, but increases the number\nof read and write operations which FATFS needs to make.\n", 
                        "id": "FATFS_PER_FILE_CACHE", 
                        "name": "FATFS_PER_FILE_CACHE", 
                        "range": null, 
                        "title": "Use separate cache for each file", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "SPIRAM_USE_CAPS_ALLOC || SPIRAM_USE_MALLOC", 
                        "help": "When the option is enabled, internal buffers used by FATFS will be allocated\nfrom external RAM. If the allocation from external RAM fails, the buffer will\nbe allocated from the internal RAM.\nDisable this option if optimizing for performance. Enable this option if\noptimizing for internal memory size.\n", 
                        "id": "FATFS_ALLOC_PREFER_EXTRAM", 
                        "name": "FATFS_ALLOC_PREFER_EXTRAM", 
                        "range": null, 
                        "title": "Perfer external RAM when allocating FATFS buffers", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-fat-filesystem-support", 
                "title": "FAT Filesystem support", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If master sends a frame which is not broadcast, it has to wait sometime for slave response.\nif slave is not respond in this time, the master will process timeout error.\n", 
                        "id": "FMB_MASTER_TIMEOUT_MS_RESPOND", 
                        "name": "FMB_MASTER_TIMEOUT_MS_RESPOND", 
                        "range": [
                            50, 
                            400
                        ], 
                        "title": "Slave respond timeout (Milliseconds)", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If master sends a broadcast frame, it has to wait conversion time to delay,\nthen master can send next frame.\n", 
                        "id": "FMB_MASTER_DELAY_MS_CONVERT", 
                        "name": "FMB_MASTER_DELAY_MS_CONVERT", 
                        "range": [
                            50, 
                            400
                        ], 
                        "title": "Slave conversion delay (Milliseconds)", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Modbus serial driver queue length. It is used by event queue task.\nSee the serial driver API for more information.\n", 
                        "id": "FMB_QUEUE_LENGTH", 
                        "name": "FMB_QUEUE_LENGTH", 
                        "range": [
                            0, 
                            200
                        ], 
                        "title": "Modbus serial task queue length", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Modbus serial task stack size for event queue task.\nIt may be adjusted when debugging is enabled (for example).\n", 
                        "id": "FMB_SERIAL_TASK_STACK_SIZE", 
                        "name": "FMB_SERIAL_TASK_STACK_SIZE", 
                        "range": [
                            768, 
                            8192
                        ], 
                        "title": "Modbus serial task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Modbus serial task RX and TX buffer size for UART driver initialization.\nThis buffer is used for modbus frame transfer. The Modbus protocol maximum\nframe size is 256 bytes. Bigger size can be used for non standard implementations.\n", 
                        "id": "FMB_SERIAL_BUF_SIZE", 
                        "name": "FMB_SERIAL_BUF_SIZE", 
                        "range": [
                            0, 
                            2048
                        ], 
                        "title": "Modbus serial task RX/TX buffer size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Modbus UART driver event task priority.\nThe priority of Modbus controller task is equal to (CONFIG_FMB_SERIAL_TASK_PRIO - 1).\n", 
                        "id": "FMB_SERIAL_TASK_PRIO", 
                        "name": "FMB_SERIAL_TASK_PRIO", 
                        "range": [
                            3, 
                            10
                        ], 
                        "title": "Modbus serial task priority", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "FMB_CONTROLLER_SLAVE_ID_SUPPORT", 
                                "help": "Modbus slave ID value to identify modbus device\nin the network using <Report Slave ID> command.\nMost significant byte of ID is used as short device ID and\nother three bytes used as long ID.\n", 
                                "id": "FMB_CONTROLLER_SLAVE_ID", 
                                "name": "FMB_CONTROLLER_SLAVE_ID", 
                                "range": null, 
                                "title": "Modbus controller slave ID", 
                                "type": "hex"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Modbus slave ID support enable.\nWhen enabled the Modbus <Report Slave ID> command is supported by stack.\n", 
                        "id": "FMB_CONTROLLER_SLAVE_ID_SUPPORT", 
                        "name": "FMB_CONTROLLER_SLAVE_ID_SUPPORT", 
                        "range": null, 
                        "title": "Modbus controller slave ID support", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Modbus controller notification timeout in milliseconds.\nThis timeout is used to send notification about accessed parameters.\n", 
                        "id": "FMB_CONTROLLER_NOTIFY_TIMEOUT", 
                        "name": "FMB_CONTROLLER_NOTIFY_TIMEOUT", 
                        "range": [
                            0, 
                            200
                        ], 
                        "title": "Modbus controller notification timeout (ms)", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Modbus controller notification queue size.\nThe notification queue is used to get information about accessed parameters.\n", 
                        "id": "FMB_CONTROLLER_NOTIFY_QUEUE_SIZE", 
                        "name": "FMB_CONTROLLER_NOTIFY_QUEUE_SIZE", 
                        "range": [
                            0, 
                            200
                        ], 
                        "title": "Modbus controller notification queue size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Modbus controller task stack size. The Stack size may be adjusted when\ndebug mode is used which requires more stack size (for example).\n", 
                        "id": "FMB_CONTROLLER_STACK_SIZE", 
                        "name": "FMB_CONTROLLER_STACK_SIZE", 
                        "range": [
                            0, 
                            8192
                        ], 
                        "title": "Modbus controller stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Modbus stack event queue timeout in milliseconds. This may help to optimize\nModbus stack event processing time.\n", 
                        "id": "FMB_EVENT_QUEUE_TIMEOUT", 
                        "name": "FMB_EVENT_QUEUE_TIMEOUT", 
                        "range": [
                            0, 
                            500
                        ], 
                        "title": "Modbus stack event queue timeout (ms)", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If this option is set the Modbus stack uses timer for T3.5 time measurement.\nElse the internal UART TOUT timeout is used for 3.5T symbol time measurement.\n", 
                        "id": "FMB_TIMER_PORT_ENABLED", 
                        "name": "FMB_TIMER_PORT_ENABLED", 
                        "range": null, 
                        "title": "Modbus slave stack use timer for 3.5T symbol time measurement", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Modbus Timer group number that is used for timeout measurement.\n", 
                        "id": "FMB_TIMER_GROUP", 
                        "name": "FMB_TIMER_GROUP", 
                        "range": [
                            0, 
                            1
                        ], 
                        "title": "Modbus Timer group number", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Modbus Timer Index in the group that is used for timeout measurement.\n", 
                        "id": "FMB_TIMER_INDEX", 
                        "name": "FMB_TIMER_INDEX", 
                        "range": [
                            0, 
                            1
                        ], 
                        "title": "Modbus Timer index in the group", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-modbus-configuration", 
                "title": "Modbus configuration", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This version of FreeRTOS normally takes control of all cores of\nthe CPU. Select this if you only want to start it on the first core.\nThis is needed when e.g. another process needs complete control\nover the second core.\n\n# This invisible config value sets the value of tskNO_AFFINITY in task.h.\n# Intended to be used as a constant from other Kconfig files.\n# Value is (32-bit) INT_MAX.\n", 
                        "id": "FREERTOS_UNICORE", 
                        "name": "FREERTOS_UNICORE", 
                        "range": null, 
                        "title": "Run FreeRTOS only on first core", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "FREERTOS_NO_AFFINITY", 
                        "name": "FREERTOS_NO_AFFINITY", 
                        "range": null, 
                        "title": null, 
                        "type": "hex"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_CORETIMER>", 
                                "help": "Select this to use timer 0\n", 
                                "id": "FREERTOS_CORETIMER_0", 
                                "name": "FREERTOS_CORETIMER_0", 
                                "range": null, 
                                "title": "Timer 0 (int 6, level 1)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_CORETIMER>", 
                                "help": "Select this to use timer 1\n", 
                                "id": "FREERTOS_CORETIMER_1", 
                                "name": "FREERTOS_CORETIMER_1", 
                                "range": null, 
                                "title": "Timer 1 (int 15, level 3)", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "FreeRTOS needs a timer with an associated interrupt to use as\nthe main tick source to increase counters, run timers and do\npre-emptive multitasking with. There are multiple timers available\nto do this, with different interrupt priorities. Check\n", 
                        "id": "component-config-freertos-xtensa-timer-to-use-as-the-freertos-tick-source", 
                        "name": "FREERTOS_CORETIMER", 
                        "title": "Xtensa timer to use as the FreeRTOS tick source", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select the tick rate at which FreeRTOS does pre-emptive context switching.\n", 
                        "id": "FREERTOS_HZ", 
                        "name": "FREERTOS_HZ", 
                        "range": [
                            1, 
                            1000
                        ], 
                        "title": "Tick rate (Hz)", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Some functions in FreeRTOS have not been thoroughly tested yet when moving to\nthe SMP implementation of FreeRTOS. When this option is enabled, these fuctions\nwill throw an assert().\n", 
                        "id": "FREERTOS_ASSERT_ON_UNTESTED_FUNCTION", 
                        "name": "FREERTOS_ASSERT_ON_UNTESTED_FUNCTION", 
                        "range": null, 
                        "title": "Halt when an SMP-untested function is called", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_CHECK_STACKOVERFLOW>", 
                                "help": "Do not check for stack overflows (configCHECK_FOR_STACK_OVERFLOW=0)\n", 
                                "id": "FREERTOS_CHECK_STACKOVERFLOW_NONE", 
                                "name": "FREERTOS_CHECK_STACKOVERFLOW_NONE", 
                                "range": null, 
                                "title": "No checking", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_CHECK_STACKOVERFLOW>", 
                                "help": "Check for stack overflows on each context switch by checking if\nthe stack pointer is in a valid range. Quick but does not detect\nstack overflows that happened between context switches\n(configCHECK_FOR_STACK_OVERFLOW=1)\n", 
                                "id": "FREERTOS_CHECK_STACKOVERFLOW_PTRVAL", 
                                "name": "FREERTOS_CHECK_STACKOVERFLOW_PTRVAL", 
                                "range": null, 
                                "title": "Check by stack pointer value", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_CHECK_STACKOVERFLOW>", 
                                "help": "Places some magic bytes at the end of the stack area and on each\ncontext switch, check if these bytes are still intact. More thorough\nthan just checking the pointer, but also slightly slower.\n(configCHECK_FOR_STACK_OVERFLOW=2)\n", 
                                "id": "FREERTOS_CHECK_STACKOVERFLOW_CANARY", 
                                "name": "FREERTOS_CHECK_STACKOVERFLOW_CANARY", 
                                "range": null, 
                                "title": "Check using canary bytes", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "FreeRTOS can check for stack overflows in threads and trigger an user function\ncalled vApplicationStackOverflowHook when this happens.\n", 
                        "id": "component-config-freertos-check-for-stack-overflow", 
                        "name": "FREERTOS_CHECK_STACKOVERFLOW", 
                        "title": "Check for stack overflow", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "FreeRTOS can check if a stack has overflown its bounds by checking either the value of\nthe stack pointer or by checking the integrity of canary bytes. (See FREERTOS_CHECK_STACKOVERFLOW\nfor more information.) These checks only happen on a context switch, and the situation that caused\nthe stack overflow may already be long gone by then. This option will use the debug memory\nwatchpoint 1 (the second one) to allow breaking into the debugger (or panic'ing) as soon as any\nof the last 32 bytes on the stack of a task are overwritten. The side effect is that using gdb, you\neffectively only have one watchpoint; the 2nd one is overwritten as soon as a task switch happens.\n\nThis check only triggers if the stack overflow writes within 4 bytes of the end of the stack, rather than\novershooting further, so it is worth combining this approach with one of the other stack overflow check\nmethods.\n\nWhen this watchpoint is hit, gdb will stop with a SIGTRAP message. When no JTAG OCD is attached, esp-idf\nwill panic on an unhandled debug exception.\n", 
                        "id": "FREERTOS_WATCHPOINT_END_OF_STACK", 
                        "name": "FREERTOS_WATCHPOINT_END_OF_STACK", 
                        "range": null, 
                        "title": "Set a debug watchpoint as a stack overflow check", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If this option is enabled, interrupt stack frame will be modified to\npoint to the code of the interrupted task as its return address.\nThis helps the debugger (or the panic handler) show a backtrace from\nthe interrupt to the task which was interrupted. This also works for\nnested interrupts: higer level interrupt stack can be traced back to the\nlower level interrupt.\nThis option adds 4 instructions to the interrupt dispatching code.\n", 
                        "id": "FREERTOS_INTERRUPT_BACKTRACE", 
                        "name": "FREERTOS_INTERRUPT_BACKTRACE", 
                        "range": null, 
                        "title": "Enable backtrace from interrupt to task context", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "FreeRTOS has the ability to store per-thread pointers in the task\ncontrol block. This controls the number of pointers available.\n\nThis value must be at least 1. Index 0 is reserved for use by the pthreads API\nthread-local-storage. Other indexes can be used for any desired purpose.\n", 
                        "id": "FREERTOS_THREAD_LOCAL_STORAGE_POINTERS", 
                        "name": "FREERTOS_THREAD_LOCAL_STORAGE_POINTERS", 
                        "range": [
                            1, 
                            256
                        ], 
                        "title": "Number of thread local storage pointers", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_ASSERT>", 
                                "help": "If a FreeRTOS configASSERT() fails, FreeRTOS will abort() and\nhalt execution. The panic handler can be configured to handle\nthe outcome of an abort() in different ways.\n", 
                                "id": "FREERTOS_ASSERT_FAIL_ABORT", 
                                "name": "FREERTOS_ASSERT_FAIL_ABORT", 
                                "range": null, 
                                "title": "abort() on failed assertions", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_ASSERT>", 
                                "help": "If a FreeRTOS assertion fails, print it out and continue.\n", 
                                "id": "FREERTOS_ASSERT_FAIL_PRINT_CONTINUE", 
                                "name": "FREERTOS_ASSERT_FAIL_PRINT_CONTINUE", 
                                "range": null, 
                                "title": "Print and continue failed assertions", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_ASSERT>", 
                                "help": "FreeRTOS configASSERT() will not be compiled into the binary.\n", 
                                "id": "FREERTOS_ASSERT_DISABLE", 
                                "name": "FREERTOS_ASSERT_DISABLE", 
                                "range": null, 
                                "title": "Disable FreeRTOS assertions", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Failed FreeRTOS configASSERT() assertions can be configured to\nbehave in different ways.\n", 
                        "id": "component-config-freertos-freertos-assertions", 
                        "name": "FREERTOS_ASSERT", 
                        "title": "FreeRTOS assertions", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The idle task has its own stack, sized in bytes. The default size is enough for most uses. Size can be\nreduced to 768 bytes if no (or simple) FreeRTOS idle hooks are used and pthread local storage or FreeRTOS\nlocal storage cleanup callbacks are not used.\n\nThe stack size may need to be increased above the default if the app installs idle or thread local storage\ncleanup hooks that use a lot of stack memory.\n", 
                        "id": "FREERTOS_IDLE_TASK_STACKSIZE", 
                        "name": "FREERTOS_IDLE_TASK_STACKSIZE", 
                        "range": [
                            768, 
                            32768
                        ], 
                        "title": "Idle Task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The interrupt handlers have their own stack. The size of the stack can be defined here.\nEach processor has its own stack, so the total size occupied will be twice this.\n", 
                        "id": "FREERTOS_ISR_STACKSIZE", 
                        "name": "FREERTOS_ISR_STACKSIZE", 
                        "range": [
                            1536, 
                            32768
                        ], 
                        "title": "ISR stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "FreeRTOS offers a number of hooks/callback functions that are called when a timer\ntick happens, the idle thread runs etc. esp-idf replaces these by runtime registerable\nhooks using the esp_register_freertos_xxx_hook system, but for legacy reasons the old\nhooks can also still be enabled. Please enable this only if you have code that for some\nreason can't be migrated to the esp_register_freertos_xxx_hook system.\n", 
                        "id": "FREERTOS_LEGACY_HOOKS", 
                        "name": "FREERTOS_LEGACY_HOOKS", 
                        "range": null, 
                        "title": "Use FreeRTOS legacy hooks", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Changes the maximum task name length. Each task allocated will\ninclude this many bytes for a task name. Using a shorter value\nsaves a small amount of RAM, a longer value allows more complex\nnames.\n\nFor most uses, the default of 16 is OK.\n", 
                        "id": "FREERTOS_MAX_TASK_NAME_LEN", 
                        "name": "FREERTOS_MAX_TASK_NAME_LEN", 
                        "range": [
                            1, 
                            256
                        ], 
                        "title": "Maximum task name length", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "FREERTOS_SUPPORT_STATIC_ALLOCATION", 
                                "help": "Enable this option to make FreeRTOS call the static task clean up hook when a task is deleted.\n\nBear in mind that if this option is enabled you will need to implement the following function::\n\n    void vPortCleanUpTCB ( void *pxTCB ) {\n        // place clean up code here\n    }\n", 
                                "id": "FREERTOS_ENABLE_STATIC_TASK_CLEAN_UP", 
                                "name": "FREERTOS_ENABLE_STATIC_TASK_CLEAN_UP", 
                                "range": null, 
                                "title": "Enable static task clean up hook", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "FreeRTOS gives the application writer the ability to instead provide the memory\nthemselves, allowing the following objects to optionally be created without any\nmemory being allocated dynamically:\n\n- Tasks\n- Software Timers (Daemon task is still dynamic. See documentation)\n- Queues\n- Event Groups\n- Binary Semaphores\n- Counting Semaphores\n- Recursive Semaphores\n- Mutexes\n\nWhether it is preferable to use static or dynamic memory allocation is dependent on\nthe application, and the preference of the application writer. Both methods have pros\nand cons, and both methods can be used within the same RTOS application.\n\nCreating RTOS objects using statically allocated RAM has the benefit of providing the application writer\nwith more control: RTOS objects can be placed at specific memory locations. The maximum RAM footprint can\nbe determined at link time, rather than run time. The application writer does not need to concern\nthemselves with graceful handling of memory allocation failures. It allows the RTOS to be used in\napplications that simply don't allow any dynamic memory allocation (although FreeRTOS includes allocation\nschemes that can overcome most objections).\n", 
                        "id": "FREERTOS_SUPPORT_STATIC_ALLOCATION", 
                        "name": "FREERTOS_SUPPORT_STATIC_ALLOCATION", 
                        "range": null, 
                        "title": "Enable FreeRTOS static allocation API", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The timer service task (primarily) makes use of existing FreeRTOS features, allowing timer\nfunctionality to be added to an application with minimal impact on the size of the application's\nexecutable binary.\n\nUse this constant to define the priority that the timer task will run at.\n", 
                        "id": "FREERTOS_TIMER_TASK_PRIORITY", 
                        "name": "FREERTOS_TIMER_TASK_PRIORITY", 
                        "range": [
                            1, 
                            25
                        ], 
                        "title": "FreeRTOS timer task priority", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The timer service task (primarily) makes use of existing FreeRTOS features, allowing timer\nfunctionality to be added to an application with minimal impact on the size of the application's\nexecutable binary.\n\nUse this constant to define the size (in bytes) of the stack allocated for the timer task.\n", 
                        "id": "FREERTOS_TIMER_TASK_STACK_DEPTH", 
                        "name": "FREERTOS_TIMER_TASK_STACK_DEPTH", 
                        "range": [
                            1536, 
                            32768
                        ], 
                        "title": "FreeRTOS timer task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "FreeRTOS provides a set of timer related API functions. Many of these functions use a standard\nFreeRTOS queue to send commands to the timer service task. The queue used for this purpose is\ncalled the 'timer command queue'. The 'timer command queue' is private to the FreeRTOS timer\nimplementation, and cannot be accessed directly.\n\nFor most uses the default value of 10 is OK.\n", 
                        "id": "FREERTOS_TIMER_QUEUE_LENGTH", 
                        "name": "FREERTOS_TIMER_QUEUE_LENGTH", 
                        "range": [
                            5, 
                            20
                        ], 
                        "title": "FreeRTOS timer queue length", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "FreeRTOS uses the queue registry as a means for kernel aware debuggers to locate queues, semaphores,\nand mutexes. The registry allows for a textual name to be associated with a queue for easy identification\nwithin a debugging GUI. A value of 0 will disable queue registry functionality, and a value larger than 0\nwill specify the number of queues/semaphores/mutexes that the registry can hold.\n", 
                        "id": "FREERTOS_QUEUE_REGISTRY_SIZE", 
                        "name": "FREERTOS_QUEUE_REGISTRY_SIZE", 
                        "range": [
                            0, 
                            20
                        ], 
                        "title": "FreeRTOS queue registry size", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "FREERTOS_USE_STATS_FORMATTING_FUNCTIONS", 
                                        "help": "If enabled, this will include an extra column when vTaskList is called\nto display the CoreID the task is pinned to (0,1) or -1 if not pinned.\n", 
                                        "id": "FREERTOS_VTASKLIST_INCLUDE_COREID", 
                                        "name": "FREERTOS_VTASKLIST_INCLUDE_COREID", 
                                        "range": null, 
                                        "title": "Enable display of xCoreID in vTaskList", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "FREERTOS_USE_TRACE_FACILITY", 
                                "help": "If enabled, configUSE_STATS_FORMATTING_FUNCTIONS will be defined as 1 in\nFreeRTOS. This will allow the usage of stats formatting functions such\nas vTaskList().\n", 
                                "id": "FREERTOS_USE_STATS_FORMATTING_FUNCTIONS", 
                                "name": "FREERTOS_USE_STATS_FORMATTING_FUNCTIONS", 
                                "range": null, 
                                "title": "Enable FreeRTOS stats formatting functions", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "If enabled, configUSE_TRACE_FACILITY will be defined as 1 in FreeRTOS.\nThis will allow the usage of trace facility functions such as\nuxTaskGetSystemState().\n", 
                        "id": "FREERTOS_USE_TRACE_FACILITY", 
                        "name": "FREERTOS_USE_TRACE_FACILITY", 
                        "range": null, 
                        "title": "Enable FreeRTOS trace facility", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice FREERTOS_RUN_TIME_STATS_CLK>", 
                                        "help": "ESP Timer will be used as the clock source for FreeRTOS run time stats.\nThe ESP Timer runs at a frequency of 1MHz regardless of Dynamic\nFrequency Scaling. Therefore the ESP Timer will overflow in\napproximately 4290 seconds.\n", 
                                        "id": "FREERTOS_RUN_TIME_STATS_USING_ESP_TIMER", 
                                        "name": "FREERTOS_RUN_TIME_STATS_USING_ESP_TIMER", 
                                        "range": null, 
                                        "title": "Use ESP TIMER for run time stats", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice FREERTOS_RUN_TIME_STATS_CLK>", 
                                        "help": "CPU Clock will be used as the clock source for the generation of run\ntime stats. The CPU Clock has a frequency dependent on\nESP32_DEFAULT_CPU_FREQ_MHZ and Dynamic Frequency Scaling (DFS).\nTherefore the CPU Clock frequency can fluctuate between 80 to 240MHz.\nRun time stats generated using the CPU Clock represents the number of\nCPU cycles each task is allocated and DOES NOT reflect the amount of\ntime each task runs for (as CPU clock frequency can change). If the CPU\nclock consistently runs at the maximum frequency of 240MHz, it will\noverflow in approximately 17 seconds.\n", 
                                        "id": "FREERTOS_RUN_TIME_STATS_USING_CPU_CLK", 
                                        "name": "FREERTOS_RUN_TIME_STATS_USING_CPU_CLK", 
                                        "range": null, 
                                        "title": "Use CPU Clock for run time stats", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "FREERTOS_GENERATE_RUN_TIME_STATS", 
                                "help": "Choose the clock source for FreeRTOS run time stats. Options are CPU0's\nCPU Clock or the ESP Timer. Both clock sources are 32 bits. The CPU\nClock can run at a higher frequency hence provide a finer resolution\nbut will overflow much quicker. Note that run time stats are only valid\nuntil the clock source overflows.\n", 
                                "id": "component-config-freertos-enable-freertos-to-collect-run-time-stats-choose-the-clock-source-for-run-time-stats", 
                                "name": "FREERTOS_RUN_TIME_STATS_CLK", 
                                "title": "Choose the clock source for run time stats", 
                                "type": "choice"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "If enabled, configGENERATE_RUN_TIME_STATS will be defined as 1 in\nFreeRTOS. This will allow FreeRTOS to collect information regarding the\nusage of processor time amongst FreeRTOS tasks. Run time stats are\ngenerated using either the ESP Timer or the CPU Clock as the clock\nsource (Note that run time stats are only valid until the clock source\noverflows). The function vTaskGetRunTimeStats() will also be available\nif FREERTOS_USE_STATS_FORMATTING_FUNCTIONS and\nFREERTOS_USE_TRACE_FACILITY are enabled. vTaskGetRunTimeStats() will\ndisplay the run time of each task as a % of the total run time of all\nCPUs (task run time / no of CPUs) / (total run time / 100 )\n", 
                        "id": "FREERTOS_GENERATE_RUN_TIME_STATS", 
                        "name": "FREERTOS_GENERATE_RUN_TIME_STATS", 
                        "range": null, 
                        "title": "Enable FreeRTOS to collect run time stats", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "FREERTOS_USE_TICKLESS_IDLE", 
                                "help": "FreeRTOS will enter light sleep mode if no tasks need to run for this number\nof ticks.\n", 
                                "id": "FREERTOS_IDLE_TIME_BEFORE_SLEEP", 
                                "name": "FREERTOS_IDLE_TIME_BEFORE_SLEEP", 
                                "range": null, 
                                "title": "Minimum number of ticks to enter sleep mode for", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": "PM_ENABLE", 
                        "help": "If power management support is enabled, FreeRTOS will be able to put\nthe system into light sleep mode when no tasks need to run for a number\nof ticks. This number can be set using FREERTOS_IDLE_TIME_BEFORE_SLEEP option.\nThis feature is also known as \"automatic light sleep\".\n\nNote that timers created using esp_timer APIs may prevent the system from\nentering sleep mode, even when no tasks need to run.\n\nIf disabled, automatic light sleep support will be disabled.\n", 
                        "id": "FREERTOS_USE_TICKLESS_IDLE", 
                        "name": "FREERTOS_USE_TICKLESS_IDLE", 
                        "range": null, 
                        "title": "Tickless idle support", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "FREERTOS_DEBUG_INTERNALS && FREERTOS_DEBUG_INTERNALS", 
                                "help": "If enabled, debug information (including integrity checks) will be printed\nto UART for the port-specific MUX implementation.\n", 
                                "id": "FREERTOS_PORTMUX_DEBUG", 
                                "name": "FREERTOS_PORTMUX_DEBUG", 
                                "range": null, 
                                "title": "Debug portMUX portENTER_CRITICAL/portEXIT_CRITICAL", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "FREERTOS_PORTMUX_DEBUG && FREERTOS_DEBUG_INTERNALS && !FREERTOS_UNICORE", 
                                "help": "If enabled, additional debug information will be printed for recursive\nportMUX usage.\n", 
                                "id": "FREERTOS_PORTMUX_DEBUG_RECURSIVE", 
                                "name": "FREERTOS_PORTMUX_DEBUG_RECURSIVE", 
                                "range": null, 
                                "title": "Debug portMUX Recursion", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable this option to show the menu with internal FreeRTOS debugging features.\nThis option does not change any code by itself, it just shows/hides some options.\n", 
                        "id": "FREERTOS_DEBUG_INTERNALS", 
                        "is_menuconfig": true, 
                        "name": "FREERTOS_DEBUG_INTERNALS", 
                        "range": null, 
                        "title": "Debug FreeRTOS internals", 
                        "type": "menu"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "COMPILER_OPTIMIZATION_LEVEL_DEBUG", 
                        "help": "If enabled, all FreeRTOS task functions will be enclosed in a wrapper function.\nIf a task function mistakenly returns (i.e. does not delete), the call flow will\nreturn to the wrapper function. The wrapper function will then log an error and\nabort the application. This option is also required for GDB backtraces and C++\nexceptions to work correctly inside top-level task functions.\n", 
                        "id": "FREERTOS_TASK_FUNCTION_WRAPPER", 
                        "name": "FREERTOS_TASK_FUNCTION_WRAPPER", 
                        "range": null, 
                        "title": "Enclose all task functions in a wrapper function", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If enabled, assert that when a mutex semaphore is given, the task giving the\nsemaphore is the task which is currently holding the mutex.\n", 
                        "id": "FREERTOS_CHECK_MUTEX_GIVEN_BY_OWNER", 
                        "name": "FREERTOS_CHECK_MUTEX_GIVEN_BY_OWNER", 
                        "range": null, 
                        "title": "Check that mutex semaphore is given by owner task", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If enabled, context of port*_CRITICAL calls (ISR or Non-ISR)\nwould be checked to be in compliance with Vanilla FreeRTOS.\ne.g Calling port*_CRITICAL from ISR context would cause assert failure\n", 
                        "id": "FREERTOS_CHECK_PORT_CRITICAL_COMPLIANCE", 
                        "name": "FREERTOS_CHECK_PORT_CRITICAL_COMPLIANCE", 
                        "range": null, 
                        "title": "Tests compliance with Vanilla FreeRTOS port*_CRITICAL calls", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-freertos", 
                "title": "FreeRTOS", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice HEAP_CORRUPTION_DETECTION>", 
                                "help": null, 
                                "id": "HEAP_POISONING_DISABLED", 
                                "name": "HEAP_POISONING_DISABLED", 
                                "range": null, 
                                "title": "Basic (no poisoning)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice HEAP_CORRUPTION_DETECTION>", 
                                "help": null, 
                                "id": "HEAP_POISONING_LIGHT", 
                                "name": "HEAP_POISONING_LIGHT", 
                                "range": null, 
                                "title": "Light impact", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice HEAP_CORRUPTION_DETECTION>", 
                                "help": null, 
                                "id": "HEAP_POISONING_COMPREHENSIVE", 
                                "name": "HEAP_POISONING_COMPREHENSIVE", 
                                "range": null, 
                                "title": "Comprehensive", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable heap poisoning features to detect heap corruption caused by out-of-bounds access to heap memory.\n\nSee the \"Heap Memory Debugging\" page of the IDF documentation\nfor a description of each level of heap corruption detection.\n", 
                        "id": "component-config-heap-memory-debugging-heap-corruption-detection", 
                        "name": "HEAP_CORRUPTION_DETECTION", 
                        "title": "Heap corruption detection", 
                        "type": "choice"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice HEAP_TRACING_DEST>", 
                                "help": null, 
                                "id": "HEAP_TRACING_OFF", 
                                "name": "HEAP_TRACING_OFF", 
                                "range": null, 
                                "title": "Disabled", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice HEAP_TRACING_DEST>", 
                                "help": null, 
                                "id": "HEAP_TRACING_STANDALONE", 
                                "name": "HEAP_TRACING_STANDALONE", 
                                "range": null, 
                                "title": "Standalone", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice HEAP_TRACING_DEST>", 
                                "help": null, 
                                "id": "HEAP_TRACING_TOHOST", 
                                "name": "HEAP_TRACING_TOHOST", 
                                "range": null, 
                                "title": "Host-based", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enables the heap tracing API defined in esp_heap_trace.h.\n\nThis function causes a moderate increase in IRAM code side and a minor increase in heap function\n(malloc/free/realloc) CPU overhead, even when the tracing feature is not used.\nSo it's best to keep it disabled unless tracing is being used.\n", 
                        "id": "component-config-heap-memory-debugging-heap-tracing", 
                        "name": "HEAP_TRACING_DEST", 
                        "title": "Heap tracing", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enables/disables heap tracing API.\n", 
                        "id": "HEAP_TRACING", 
                        "name": "HEAP_TRACING", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "HEAP_TRACING", 
                        "help": "Number of stack frames to save when tracing heap operation callers.\n\nMore stack frames uses more memory in the heap trace buffer (and slows down allocation), but\ncan provide useful information.\n", 
                        "id": "HEAP_TRACING_STACK_DEPTH", 
                        "name": "HEAP_TRACING_STACK_DEPTH", 
                        "range": null, 
                        "title": "Heap tracing stack depth", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!HEAP_POISONING_DISABLED", 
                        "help": "Enables tracking the task responsible for each heap allocation.\n\nThis function depends on heap poisoning being enabled and adds four more bytes of overhead for each block\nallocated.\n", 
                        "id": "HEAP_TASK_TRACKING", 
                        "name": "HEAP_TASK_TRACKING", 
                        "range": null, 
                        "title": "Enable heap task tracking", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-heap-memory-debugging", 
                "title": "Heap memory debugging", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "!MBEDTLS_HARDWARE_SHA", 
                        "help": "If this option is enabled, libsodium will use thin wrappers\naround mbedTLS for SHA256 & SHA512 operations.\n\nThis saves some code size if mbedTLS is also used. However it\nis incompatible with hardware SHA acceleration (due to the\nway libsodium's API manages SHA state).\n", 
                        "id": "LIBSODIUM_USE_MBEDTLS_SHA", 
                        "name": "LIBSODIUM_USE_MBEDTLS_SHA", 
                        "range": null, 
                        "title": "Use mbedTLS SHA256 & SHA512 implementations", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-libsodium", 
                "title": "libsodium", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "id": "LOG_DEFAULT_LEVEL_NONE", 
                                "name": "LOG_DEFAULT_LEVEL_NONE", 
                                "range": null, 
                                "title": "No output", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "id": "LOG_DEFAULT_LEVEL_ERROR", 
                                "name": "LOG_DEFAULT_LEVEL_ERROR", 
                                "range": null, 
                                "title": "Error", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "id": "LOG_DEFAULT_LEVEL_WARN", 
                                "name": "LOG_DEFAULT_LEVEL_WARN", 
                                "range": null, 
                                "title": "Warning", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "id": "LOG_DEFAULT_LEVEL_INFO", 
                                "name": "LOG_DEFAULT_LEVEL_INFO", 
                                "range": null, 
                                "title": "Info", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "id": "LOG_DEFAULT_LEVEL_DEBUG", 
                                "name": "LOG_DEFAULT_LEVEL_DEBUG", 
                                "range": null, 
                                "title": "Debug", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "id": "LOG_DEFAULT_LEVEL_VERBOSE", 
                                "name": "LOG_DEFAULT_LEVEL_VERBOSE", 
                                "range": null, 
                                "title": "Verbose", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Specify how much output to see in logs by default.\nYou can set lower verbosity level at runtime using\nesp_log_level_set function.\n\nNote that this setting limits which log statements\nare compiled into the program. So setting this to, say,\n\"Warning\" would mean that changing log level to \"Debug\"\nat runtime will not be possible.\n", 
                        "id": "component-config-log-output-default-log-verbosity", 
                        "name": "LOG_DEFAULT_LEVEL", 
                        "title": "Default log verbosity", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "LOG_DEFAULT_LEVEL", 
                        "name": "LOG_DEFAULT_LEVEL", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable ANSI terminal color codes in bootloader output.\n\nIn order to view these, your terminal program must support ANSI color codes.\n", 
                        "id": "LOG_COLORS", 
                        "name": "LOG_COLORS", 
                        "range": null, 
                        "title": "Use ANSI terminal colors in log output", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-log-output", 
                "title": "Log output", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The name this device will report to other devices on the network\n", 
                        "id": "LWIP_LOCAL_HOSTNAME", 
                        "name": "LWIP_LOCAL_HOSTNAME", 
                        "range": null, 
                        "title": "Local netif hostname", 
                        "type": "string"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If this feature is enabled, all traffic from layer2(WIFI Driver) will be\ncopied to a new buffer before sending it to layer3(LWIP stack), freeing\nthe layer2 buffer.\nPlease be notified that the total layer2 receiving buffer is fixed and\nESP32 currently supports 25 layer2 receiving buffer, when layer2 buffer\nruns out of memory, then the incoming packets will be dropped in hardware.\nThe layer3 buffer is allocated from the heap, so the total layer3 receiving\nbuffer depends on the available heap size, when heap runs out of memory,\nno copy will be sent to layer3 and packet will be dropped in layer2.\nPlease make sure you fully understand the impact of this feature before\nenabling it.\n", 
                        "id": "LWIP_L2_TO_L3_COPY", 
                        "name": "LWIP_L2_TO_L3_COPY", 
                        "range": null, 
                        "title": "Enable copy between Layer2 and Layer3 packets", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If this feature is enabled, some functions relating to RX/TX in LWIP will be\nput into IRAM, it can improve UDP/TCP throughput by >10% for single core mode,\nit doesn't help too much for dual core mode. On the other hand, it needs about\n10KB IRAM for these optimizations.\n\nIf this feature is disabled, all lwip functions will be put into FLASH.\n", 
                        "id": "LWIP_IRAM_OPTIMIZATION", 
                        "name": "LWIP_IRAM_OPTIMIZATION", 
                        "range": null, 
                        "title": "Enable LWIP IRAM optimization", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If this feature is enabled, IGMP and MLD6 timers will be activated only\nwhen joining groups or receiving QUERY packets.\n\nThis feature will reduce the power consumption for applications which do not\nuse IGMP and MLD6.\n", 
                        "id": "LWIP_TIMERS_ONDEMAND", 
                        "name": "LWIP_TIMERS_ONDEMAND", 
                        "range": null, 
                        "title": "Enable LWIP Timers on demand", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Sockets take up a certain amount of memory, and allowing fewer\nsockets to be open at the same time conserves memory. Specify\nthe maximum amount of sockets here. The valid value is from 1\nto 16.\n", 
                        "id": "LWIP_MAX_SOCKETS", 
                        "name": "LWIP_MAX_SOCKETS", 
                        "range": [
                            1, 
                            16
                        ], 
                        "title": "Max number of open sockets", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The virtual filesystem layer of select() redirects sockets to\nlwip_select() and non-socket file descriptors to their respective driver\nimplementations. If this option is enabled then all calls of select()\nwill be redirected to lwip_select(), therefore, select can be used\nfor sockets only.\n", 
                        "id": "LWIP_USE_ONLY_LWIP_SELECT", 
                        "name": "LWIP_USE_ONLY_LWIP_SELECT", 
                        "range": null, 
                        "title": "Support LWIP socket select() only", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "LWIP_SO_REUSE", 
                                "help": "Enabling this option means that any incoming broadcast or multicast\npacket will be copied to all of the local sockets that it matches\n(may be more than one if SO_REUSEADDR is set on the socket.)\n\nThis increases memory overhead as the packets need to be copied,\nhowever they are only copied per matching socket. You can safely\ndisable it if you don't plan to receive broadcast or multicast\ntraffic on more than one socket at a time.\n", 
                                "id": "LWIP_SO_REUSE_RXTOALL", 
                                "name": "LWIP_SO_REUSE_RXTOALL", 
                                "range": null, 
                                "title": "SO_REUSEADDR copies broadcast/multicast to all matches", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enabling this option allows binding to a port which remains in\nTIME_WAIT.\n", 
                        "id": "LWIP_SO_REUSE", 
                        "name": "LWIP_SO_REUSE", 
                        "range": null, 
                        "title": "Enable SO_REUSEADDR option", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enabling this option allows checking for available data on a netconn.\n", 
                        "id": "LWIP_SO_RCVBUF", 
                        "name": "LWIP_SO_RCVBUF", 
                        "range": null, 
                        "title": "Enable SO_RCVBUF option", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enabling this option allows fragmenting outgoing IP packets if their size\nexceeds MTU.\n", 
                        "id": "LWIP_IP_FRAG", 
                        "name": "LWIP_IP_FRAG", 
                        "range": null, 
                        "title": "Enable fragment outgoing IP packets", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enabling this option allows reassemblying incoming fragmented IP packets.\n", 
                        "id": "LWIP_IP_REASSEMBLY", 
                        "name": "LWIP_IP_REASSEMBLY", 
                        "range": null, 
                        "title": "Enable reassembly incoming fragmented IP packets", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enabling this option allows LWIP statistics\n", 
                        "id": "LWIP_STATS", 
                        "name": "LWIP_STATS", 
                        "range": null, 
                        "title": "Enable LWIP statistics", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enabling this option allows ARP table to be updated.\n\nIf this option is enabled, the incoming IP packets cause the ARP table to be\nupdated with the source MAC and IP addresses supplied in the packet.\nYou may want to disable this if you do not trust LAN peers to have the\ncorrect addresses, or as a limited approach to attempt to handle\nspoofing. If disabled, lwIP will need to make a new ARP request if\nthe peer is not already in the ARP table, adding a little latency.\nThe peer *is* in the ARP table if it requested our address before.\nAlso notice that this slows down input processing of every IP packet!\n\nThere are two known issues in real application if this feature is enabled:\n- The LAN peer may have bug to update the ARP table after the ARP entry is aged out.\nIf the ARP entry on the LAN peer is aged out but failed to be updated, all IP packets\nsent from LWIP to the LAN peer will be dropped by LAN peer.\n- The LAN peer may not be trustful, the LAN peer may send IP packets to LWIP with\ntwo different MACs, but the same IP address. If this happens, the LWIP has problem\nto receive IP packets from LAN peer.\n\nSo the recommendation is to disable this option.\nHere the LAN peer means the other side to which the ESP station or soft-AP is connected.\n", 
                        "id": "LWIP_ETHARP_TRUST_IP_MAC", 
                        "name": "LWIP_ETHARP_TRUST_IP_MAC", 
                        "range": null, 
                        "title": "Enable LWIP ARP trust", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "LWIP_ESP_GRATUITOUS_ARP", 
                                "help": "Set the timer interval for gratuitous ARP. The default value is 60s\n", 
                                "id": "LWIP_GARP_TMR_INTERVAL", 
                                "name": "LWIP_GARP_TMR_INTERVAL", 
                                "range": null, 
                                "title": "GARP timer interval(seconds)", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable this option allows to send gratuitous ARP periodically.\n\nThis option solve the compatibility issues.If the ARP table of the AP is old, and the AP\ndoesn't send ARP request to update it's ARP table, this will lead to the STA sending IP packet fail.\nThus we send gratuitous ARP periodically to let AP update it's ARP table.\n", 
                        "id": "LWIP_ESP_GRATUITOUS_ARP", 
                        "name": "LWIP_ESP_GRATUITOUS_ARP", 
                        "range": null, 
                        "title": "Send gratuitous ARP periodically", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Set TCPIP task receive mail box size. Generally bigger value means higher throughput\nbut more memory. The value should be bigger than UDP/TCP mail box size.\n", 
                        "id": "LWIP_TCPIP_RECVMBOX_SIZE", 
                        "name": "LWIP_TCPIP_RECVMBOX_SIZE", 
                        "range": [
                            6, 
                            64
                        ], 
                        "title": "TCPIP task receive mail box size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enabling this option performs a check (via ARP request) if the offered IP address\nis not already in use by another host on the network.\n", 
                        "id": "LWIP_DHCP_DOES_ARP_CHECK", 
                        "name": "LWIP_DHCP_DOES_ARP_CHECK", 
                        "range": null, 
                        "title": "DHCP: Perform ARP check on any offered address", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "When this option is enabled, DHCP client tries to re-obtain last valid IP address obtained from DHCP\nserver. Last valid DHCP configuration is stored in nvs and restored after reset/power-up. If IP is still\navailable, there is no need for sending discovery message to DHCP server and save some time.\n", 
                        "id": "LWIP_DHCP_RESTORE_LAST_IP", 
                        "name": "LWIP_DHCP_RESTORE_LAST_IP", 
                        "range": null, 
                        "title": "DHCP: Restore last IP obtained from DHCP server", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "The DHCP server is calculating lease time multiplying the sent\nand received times by this number of seconds per unit.\nThe default is 60, that equals one minute.\n", 
                                "id": "LWIP_DHCPS_LEASE_UNIT", 
                                "name": "LWIP_DHCPS_LEASE_UNIT", 
                                "range": [
                                    1, 
                                    3600
                                ], 
                                "title": "Multiplier for lease time, in seconds", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "The maximum number of DHCP clients that are connected to the server.\nAfter this number is exceeded, DHCP server removes of the oldest device\nfrom it's address pool, without notification.\n", 
                                "id": "LWIP_DHCPS_MAX_STATION_NUM", 
                                "name": "LWIP_DHCPS_MAX_STATION_NUM", 
                                "range": [
                                    1, 
                                    64
                                ], 
                                "title": "Maximum number of stations", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-lwip-dhcp-server", 
                        "title": "DHCP server", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "LWIP_AUTOIP", 
                                "help": "DHCP client will send this many probes before self-assigning a\nlink local address.\n\nFrom LWIP help: \"This can be set as low as 1 to get an AutoIP\naddress very quickly, but you should be prepared to handle a\nchanging IP address when DHCP overrides AutoIP.\" (In the case of\nESP-IDF, this means multiple SYSTEM_EVENT_STA_GOT_IP events.)\n", 
                                "id": "LWIP_AUTOIP_TRIES", 
                                "name": "LWIP_AUTOIP_TRIES", 
                                "range": null, 
                                "title": "DHCP Probes before self-assigning IPv4 LL address", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "LWIP_AUTOIP", 
                                "help": "If the AUTOIP functionality detects this many IP conflicts while\nself-assigning an address, it will go into a rate limited mode.\n", 
                                "id": "LWIP_AUTOIP_MAX_CONFLICTS", 
                                "name": "LWIP_AUTOIP_MAX_CONFLICTS", 
                                "range": null, 
                                "title": "Max IP conflicts before rate limiting", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "LWIP_AUTOIP", 
                                "help": "If rate limiting self-assignment requests, wait this long between\neach request.\n", 
                                "id": "LWIP_AUTOIP_RATE_LIMIT_INTERVAL", 
                                "name": "LWIP_AUTOIP_RATE_LIMIT_INTERVAL", 
                                "range": null, 
                                "title": "Rate limited interval (seconds)", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enabling this option allows the device to self-assign an address\nin the 169.256/16 range if none is assigned statically or via DHCP.\n\nSee RFC 3927.\n", 
                        "id": "LWIP_AUTOIP", 
                        "is_menuconfig": true, 
                        "name": "LWIP_AUTOIP", 
                        "range": null, 
                        "title": "Enable IPV4 Link-Local Addressing (AUTOIP)", 
                        "type": "menu"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enabling this option allows the devices to IPV6 stateless address autoconfiguration.\n\nSee RFC 4862.\n", 
                        "id": "LWIP_IPV6_AUTOCONFIG", 
                        "name": "LWIP_IPV6_AUTOCONFIG", 
                        "range": null, 
                        "title": "Enable IPV6 stateless address autoconfiguration", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "LWIP_NETIF_LOOPBACK", 
                                "help": "Configure the maximum number of packets which can be queued for\nloopback on a given interface. Reducing this number may cause packets\nto be dropped, but will avoid filling memory with queued packet data.\n", 
                                "id": "LWIP_LOOPBACK_MAX_PBUFS", 
                                "name": "LWIP_LOOPBACK_MAX_PBUFS", 
                                "range": [
                                    0, 
                                    16
                                ], 
                                "title": "Max queued loopback packets per interface", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enabling this option means that if a packet is sent with a destination\naddress equal to the interface's own IP address, it will \"loop back\" and\nbe received by this interface.\n", 
                        "id": "LWIP_NETIF_LOOPBACK", 
                        "is_menuconfig": true, 
                        "name": "LWIP_NETIF_LOOPBACK", 
                        "range": null, 
                        "title": "Support per-interface loopback", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "The maximum number of simultaneously active TCP\nconnections. The practical maximum limit is\ndetermined by available heap memory at runtime.\n\nChanging this value by itself does not substantially\nchange the memory usage of LWIP, except for preventing\nnew TCP connections after the limit is reached.\n", 
                                "id": "LWIP_MAX_ACTIVE_TCP", 
                                "name": "LWIP_MAX_ACTIVE_TCP", 
                                "range": [
                                    1, 
                                    1024
                                ], 
                                "title": "Maximum active TCP Connections", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "The maximum number of simultaneously listening TCP\nconnections. The practical maximum limit is\ndetermined by available heap memory at runtime.\n\nChanging this value by itself does not substantially\nchange the memory usage of LWIP, except for preventing\nnew listening TCP connections after the limit is reached.\n", 
                                "id": "LWIP_MAX_LISTENING_TCP", 
                                "name": "LWIP_MAX_LISTENING_TCP", 
                                "range": [
                                    1, 
                                    1024
                                ], 
                                "title": "Maximum listening TCP Connections", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set maximum number of retransmissions of data segments.\n", 
                                "id": "LWIP_TCP_MAXRTX", 
                                "name": "LWIP_TCP_MAXRTX", 
                                "range": [
                                    3, 
                                    12
                                ], 
                                "title": "Maximum number of retransmissions of data segments", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set maximum number of retransmissions of SYN segments.\n", 
                                "id": "LWIP_TCP_SYNMAXRTX", 
                                "name": "LWIP_TCP_SYNMAXRTX", 
                                "range": [
                                    3, 
                                    12
                                ], 
                                "title": "Maximum number of retransmissions of SYN segments", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set maximum segment size for TCP transmission.\n\nCan be set lower to save RAM, the default value 1460(ipv4)/1440(ipv6) will give best throughput.\nIPv4 TCP_MSS Range: 576 <= TCP_MSS <= 1460\nIPv6 TCP_MSS Range: 1220<= TCP_mSS <= 1440\n", 
                                "id": "LWIP_TCP_MSS", 
                                "name": "LWIP_TCP_MSS", 
                                "range": [
                                    536, 
                                    1460
                                ], 
                                "title": "Maximum Segment Size (MSS)", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set maximum segment lifetime in in milliseconds.\n", 
                                "id": "LWIP_TCP_MSL", 
                                "name": "LWIP_TCP_MSL", 
                                "range": null, 
                                "title": "Maximum segment lifetime (MSL)", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set default send buffer size for new TCP sockets.\n\nPer-socket send buffer size can be changed at runtime\nwith lwip_setsockopt(s, TCP_SNDBUF, ...).\n\nThis value must be at least 2x the MSS size, and the default\nis 4x the default MSS size.\n\nSetting a smaller default SNDBUF size can save some RAM, but\nwill decrease performance.\n", 
                                "id": "LWIP_TCP_SND_BUF_DEFAULT", 
                                "name": "LWIP_TCP_SND_BUF_DEFAULT", 
                                "range": [
                                    2440, 
                                    65535
                                ], 
                                "title": "Default send buffer size", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set default TCP receive window size for new TCP sockets.\n\nPer-socket receive window size can be changed at runtime\nwith lwip_setsockopt(s, TCP_WINDOW, ...).\n\nSetting a smaller default receive window size can save some RAM,\nbut will significantly decrease performance.\n", 
                                "id": "LWIP_TCP_WND_DEFAULT", 
                                "name": "LWIP_TCP_WND_DEFAULT", 
                                "range": [
                                    2440, 
                                    65535
                                ], 
                                "title": "Default receive window size", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set TCP receive mail box size. Generally bigger value means higher throughput\nbut more memory. The recommended value is: LWIP_TCP_WND_DEFAULT/TCP_MSS + 2, e.g. if\nLWIP_TCP_WND_DEFAULT=14360, TCP_MSS=1436, then the recommended receive mail box size is\n(14360/1436 + 2) = 12.\n\nTCP receive mail box is a per socket mail box, when the application receives packets\nfrom TCP socket, LWIP core firstly posts the packets to TCP receive mail box and the\napplication then fetches the packets from mail box. It means LWIP can caches maximum\nLWIP_TCP_RECCVMBOX_SIZE packets for each TCP socket, so the maximum possible cached TCP packets\nfor all TCP sockets is LWIP_TCP_RECCVMBOX_SIZE multiples the maximum TCP socket number. In other\nwords, the bigger LWIP_TCP_RECVMBOX_SIZE means more memory.\nOn the other hand, if the receiv mail box is too small, the mail box may be full. If the\nmail box is full, the LWIP drops the packets. So generally we need to make sure the TCP\nreceive mail box is big enough to avoid packet drop between LWIP core and application.\n", 
                                "id": "LWIP_TCP_RECVMBOX_SIZE", 
                                "name": "LWIP_TCP_RECVMBOX_SIZE", 
                                "range": [
                                    6, 
                                    64
                                ], 
                                "title": "Default TCP receive mail box size", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Queue incoming out-of-order segments for later use.\n\nDisable this option to save some RAM during TCP sessions, at the expense\nof increased retransmissions if segments arrive out of order.\n", 
                                "id": "LWIP_TCP_QUEUE_OOSEQ", 
                                "name": "LWIP_TCP_QUEUE_OOSEQ", 
                                "range": null, 
                                "title": "Queue incoming out-of-order segments", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "This option is enabled when the following scenario happen:\nnetwork dropped and reconnected, IP changes is like: 192.168.0.2->0.0.0.0->192.168.0.2\n\nDisable this option to keep consistent with the original LWIP code behavior.\n", 
                                "id": "LWIP_TCP_KEEP_CONNECTION_WHEN_IP_CHANGES", 
                                "name": "LWIP_TCP_KEEP_CONNECTION_WHEN_IP_CHANGES", 
                                "range": null, 
                                "title": "Keep TCP connections when IP changed", 
                                "type": "bool"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice LWIP_TCP_OVERSIZE>", 
                                        "help": null, 
                                        "id": "LWIP_TCP_OVERSIZE_MSS", 
                                        "name": "LWIP_TCP_OVERSIZE_MSS", 
                                        "range": null, 
                                        "title": "MSS", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice LWIP_TCP_OVERSIZE>", 
                                        "help": null, 
                                        "id": "LWIP_TCP_OVERSIZE_QUARTER_MSS", 
                                        "name": "LWIP_TCP_OVERSIZE_QUARTER_MSS", 
                                        "range": null, 
                                        "title": "25% MSS", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice LWIP_TCP_OVERSIZE>", 
                                        "help": null, 
                                        "id": "LWIP_TCP_OVERSIZE_DISABLE", 
                                        "name": "LWIP_TCP_OVERSIZE_DISABLE", 
                                        "range": null, 
                                        "title": "Disabled", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": null, 
                                "help": "Allows enabling \"oversize\" allocation of TCP transmission pbufs ahead of time,\nwhich can reduce the length of pbuf chains used for transmission.\n\nThis will not make a difference to sockets where Nagle's algorithm\nis disabled.\n\nDefault value of MSS is fine for most applications, 25% MSS may save\nsome RAM when only transmitting small amounts of data. Disabled will\nhave worst performance and fragmentation characteristics, but uses\nleast RAM overall.\n", 
                                "id": "component-config-lwip-tcp-pre-allocate-transmit-pbuf-size", 
                                "name": "LWIP_TCP_OVERSIZE", 
                                "title": "Pre-allocate transmit PBUF size", 
                                "type": "choice"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "LWIP_WND_SCALE", 
                                        "help": "Enable this feature to support TCP window scaling.\n", 
                                        "id": "LWIP_TCP_RCV_SCALE", 
                                        "name": "LWIP_TCP_RCV_SCALE", 
                                        "range": null, 
                                        "title": "Set TCP receiving window scaling factor", 
                                        "type": "int"
                                    }
                                ], 
                                "depends_on": "SPIRAM_TRY_ALLOCATE_WIFI_LWIP", 
                                "help": "Enable this feature to support TCP window scaling.\n", 
                                "id": "LWIP_WND_SCALE", 
                                "name": "LWIP_WND_SCALE", 
                                "range": null, 
                                "title": "Support TCP window scale", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-lwip-tcp", 
                        "title": "TCP", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "The maximum number of active UDP \"connections\" (ie\nUDP sockets sending/receiving data).\nThe practical maximum limit is determined by available\nheap memory at runtime.\n", 
                                "id": "LWIP_MAX_UDP_PCBS", 
                                "name": "LWIP_MAX_UDP_PCBS", 
                                "range": [
                                    1, 
                                    1024
                                ], 
                                "title": "Maximum active UDP control blocks", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set UDP receive mail box size. The recommended value is 6.\n\nUDP receive mail box is a per socket mail box, when the application receives packets\nfrom UDP socket, LWIP core firstly posts the packets to UDP receive mail box and the\napplication then fetches the packets from mail box. It means LWIP can caches maximum\nUDP_RECCVMBOX_SIZE packets for each UDP socket, so the maximum possible cached UDP packets\nfor all UDP sockets is UDP_RECCVMBOX_SIZE multiples the maximum UDP socket number. In other\nwords, the bigger UDP_RECVMBOX_SIZE means more memory.\nOn the other hand, if the receiv mail box is too small, the mail box may be full. If the\nmail box is full, the LWIP drops the packets. So generally we need to make sure the UDP\nreceive mail box is big enough to avoid packet drop between LWIP core and application.\n", 
                                "id": "LWIP_UDP_RECVMBOX_SIZE", 
                                "name": "LWIP_UDP_RECVMBOX_SIZE", 
                                "range": [
                                    6, 
                                    64
                                ], 
                                "title": "Default UDP receive mail box size", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-lwip-udp", 
                        "title": "UDP", 
                        "type": "menu"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Configure TCP/IP task stack size, used by LWIP to process multi-threaded TCP/IP operations.\nSetting this stack too small will result in stack overflow crashes.\n", 
                        "id": "LWIP_TCPIP_TASK_STACK_SIZE", 
                        "name": "LWIP_TCPIP_TASK_STACK_SIZE", 
                        "range": [
                            2048, 
                            65536
                        ], 
                        "title": "TCP/IP Task Stack Size", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice LWIP_TCPIP_TASK_AFFINITY>", 
                                "help": null, 
                                "id": "LWIP_TCPIP_TASK_AFFINITY_NO_AFFINITY", 
                                "name": "LWIP_TCPIP_TASK_AFFINITY_NO_AFFINITY", 
                                "range": null, 
                                "title": "No affinity", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice LWIP_TCPIP_TASK_AFFINITY>", 
                                "help": null, 
                                "id": "LWIP_TCPIP_TASK_AFFINITY_CPU0", 
                                "name": "LWIP_TCPIP_TASK_AFFINITY_CPU0", 
                                "range": null, 
                                "title": "CPU0", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "!FREERTOS_UNICORE && <choice LWIP_TCPIP_TASK_AFFINITY>", 
                                "help": null, 
                                "id": "LWIP_TCPIP_TASK_AFFINITY_CPU1", 
                                "name": "LWIP_TCPIP_TASK_AFFINITY_CPU1", 
                                "range": null, 
                                "title": "CPU1", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Allows setting LwIP tasks affinity, i.e. whether the task is pinned to\nCPU0, pinned to CPU1, or allowed to run on any CPU.\nCurrently this applies to \"TCP/IP\" task and \"Ping\" task.\n", 
                        "id": "component-config-lwip-tcp-ip-task-affinity", 
                        "name": "LWIP_TCPIP_TASK_AFFINITY", 
                        "title": "TCP/IP task affinity", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "LWIP_TCPIP_TASK_AFFINITY", 
                        "name": "LWIP_TCPIP_TASK_AFFINITY", 
                        "range": null, 
                        "title": null, 
                        "type": "hex"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "LWIP_PPP_SUPPORT", 
                                "help": "Enable to set a callback which is called on change of the internal PPP state machine.\n", 
                                "id": "LWIP_PPP_NOTIFY_PHASE_SUPPORT", 
                                "name": "LWIP_PPP_NOTIFY_PHASE_SUPPORT", 
                                "range": null, 
                                "title": "Enable Notify Phase Callback", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "LWIP_PPP_SUPPORT", 
                                "help": "Enable Password Authentication Protocol (PAP) support\n", 
                                "id": "LWIP_PPP_PAP_SUPPORT", 
                                "name": "LWIP_PPP_PAP_SUPPORT", 
                                "range": null, 
                                "title": "Enable PAP support", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "LWIP_PPP_SUPPORT", 
                                "help": "Enable Challenge Handshake Authentication Protocol (CHAP) support\n", 
                                "id": "LWIP_PPP_CHAP_SUPPORT", 
                                "name": "LWIP_PPP_CHAP_SUPPORT", 
                                "range": null, 
                                "title": "Enable CHAP support", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "LWIP_PPP_SUPPORT", 
                                "help": "Enable Microsoft version of the Challenge-Handshake Authentication Protocol (MSCHAP) support\n", 
                                "id": "LWIP_PPP_MSCHAP_SUPPORT", 
                                "name": "LWIP_PPP_MSCHAP_SUPPORT", 
                                "range": null, 
                                "title": "Enable MSCHAP support", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "LWIP_PPP_SUPPORT", 
                                "help": "Enable Microsoft Point-to-Point Encryption (MPPE) support\n", 
                                "id": "LWIP_PPP_MPPE_SUPPORT", 
                                "name": "LWIP_PPP_MPPE_SUPPORT", 
                                "range": null, 
                                "title": "Enable MPPE support", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "LWIP_PPP_SUPPORT", 
                                "help": "Enable PPP debug log output\n", 
                                "id": "LWIP_PPP_DEBUG_ON", 
                                "name": "LWIP_PPP_DEBUG_ON", 
                                "range": null, 
                                "title": "Enable PPP debug log output", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable PPP stack. Now only PPP over serial is possible.\n\nPPP over serial support is experimental and unsupported.\n", 
                        "id": "LWIP_PPP_SUPPORT", 
                        "is_menuconfig": true, 
                        "name": "LWIP_PPP_SUPPORT", 
                        "range": null, 
                        "title": "Enable PPP support (new/experimental)", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": null, 
                                "id": "LWIP_MULTICAST_PING", 
                                "name": "LWIP_MULTICAST_PING", 
                                "range": null, 
                                "title": "Respond to multicast pings", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": null, 
                                "id": "LWIP_BROADCAST_PING", 
                                "name": "LWIP_BROADCAST_PING", 
                                "range": null, 
                                "title": "Respond to broadcast pings", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-lwip-icmp", 
                        "title": "ICMP", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "The maximum number of simultaneously active LWIP\nRAW protocol control blocks. The practical maximum\nlimit is determined by available heap memory at runtime.\n", 
                                "id": "LWIP_MAX_RAW_PCBS", 
                                "name": "LWIP_MAX_RAW_PCBS", 
                                "range": [
                                    1, 
                                    1024
                                ], 
                                "title": "Maximum LWIP RAW PCBs", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-lwip-lwip-raw-api", 
                        "title": "LWIP RAW API", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set maximum number of NTP servers used by LwIP SNTP module.\nFirst argument of sntp_setserver/sntp_setservername functions\nis limited to this value.\n", 
                                "id": "LWIP_DHCP_MAX_NTP_SERVERS", 
                                "name": "LWIP_DHCP_MAX_NTP_SERVERS", 
                                "range": [
                                    1, 
                                    16
                                ], 
                                "title": "Maximum number of NTP servers", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "This option allows you to set the time update period via SNTP.\nDefault is 1 hour. Must not be below 15 seconds by specification.\n(SNTPv4 RFC 4330 enforces a minimum update time of 15 seconds).\n", 
                                "id": "LWIP_SNTP_UPDATE_DELAY", 
                                "name": "LWIP_SNTP_UPDATE_DELAY", 
                                "range": [
                                    15000, 
                                    4294967295
                                ], 
                                "title": "Request interval to update time (ms)", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-lwip-sntp", 
                        "title": "SNTP", 
                        "type": "menu"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-lwip", 
                "title": "LWIP", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice MBEDTLS_MEM_ALLOC_MODE>", 
                                "help": null, 
                                "id": "MBEDTLS_INTERNAL_MEM_ALLOC", 
                                "name": "MBEDTLS_INTERNAL_MEM_ALLOC", 
                                "range": null, 
                                "title": "Internal memory", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "ESP32_SPIRAM_SUPPORT && <choice MBEDTLS_MEM_ALLOC_MODE>", 
                                "help": null, 
                                "id": "MBEDTLS_EXTERNAL_MEM_ALLOC", 
                                "name": "MBEDTLS_EXTERNAL_MEM_ALLOC", 
                                "range": null, 
                                "title": "External SPIRAM", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice MBEDTLS_MEM_ALLOC_MODE>", 
                                "help": null, 
                                "id": "MBEDTLS_DEFAULT_MEM_ALLOC", 
                                "name": "MBEDTLS_DEFAULT_MEM_ALLOC", 
                                "range": null, 
                                "title": "Default alloc mode", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice MBEDTLS_MEM_ALLOC_MODE>", 
                                "help": null, 
                                "id": "MBEDTLS_CUSTOM_MEM_ALLOC", 
                                "name": "MBEDTLS_CUSTOM_MEM_ALLOC", 
                                "range": null, 
                                "title": "Custom alloc mode", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Allocation strategy for mbedTLS, essentially provides ability to\nallocate all required dynamic allocations from,\n\n- Internal DRAM memory only\n- External SPIRAM memory only\n- Either internal or external memory based on default malloc()\n  behavior in ESP-IDF\n- Custom allocation mode, by overwriting calloc()/free() using\n  mbedtls_platform_set_calloc_free() function\n\nRecommended mode here is always internal, since that is most preferred\nfrom security perspective. But if application requirement does not\nallow sufficient free internal memory then alternate mode can be\nselected.\n", 
                        "id": "component-config-mbedtls-memory-allocation-strategy", 
                        "name": "MBEDTLS_MEM_ALLOC_MODE", 
                        "title": "Memory allocation strategy", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!MBEDTLS_ASYMMETRIC_CONTENT_LEN", 
                        "help": "Maximum TLS message length (in bytes) supported by mbedTLS.\n\n16384 is the default and this value is required to comply\nfully with TLS standards.\n\nHowever you can set a lower value in order to save RAM. This\nis safe if the other end of the connection supports Maximum\nFragment Length Negotiation Extension (max_fragment_length,\nsee RFC6066) or you know for certain that it will never send a\nmessage longer than a certain number of bytes.\n\nIf the value is set too low, symptoms are a failed TLS\nhandshake or a return value of MBEDTLS_ERR_SSL_INVALID_RECORD\n(-0x7200).\n", 
                        "id": "MBEDTLS_SSL_MAX_CONTENT_LEN", 
                        "name": "MBEDTLS_SSL_MAX_CONTENT_LEN", 
                        "range": null, 
                        "title": "TLS maximum message content length", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ASYMMETRIC_CONTENT_LEN", 
                                "help": "This defines maximum incoming fragment length, overriding default\nmaximum content length (MBEDTLS_SSL_MAX_CONTENT_LEN).\n", 
                                "id": "MBEDTLS_SSL_IN_CONTENT_LEN", 
                                "name": "MBEDTLS_SSL_IN_CONTENT_LEN", 
                                "range": [
                                    512, 
                                    16384
                                ], 
                                "title": "TLS maximum incoming fragment length", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ASYMMETRIC_CONTENT_LEN", 
                                "help": "This defines maximum outgoing fragment length, overriding default\nmaximum content length (MBEDTLS_SSL_MAX_CONTENT_LEN).\n", 
                                "id": "MBEDTLS_SSL_OUT_CONTENT_LEN", 
                                "name": "MBEDTLS_SSL_OUT_CONTENT_LEN", 
                                "range": [
                                    512, 
                                    16384
                                ], 
                                "title": "TLS maximum outgoing fragment length", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "If enabled, this option allows customizing TLS in/out fragment length\nin asymmetric way. Please note that enabling this with default values\nsaves 12KB of dynamic memory per TLS connection.\n", 
                        "id": "MBEDTLS_ASYMMETRIC_CONTENT_LEN", 
                        "name": "MBEDTLS_ASYMMETRIC_CONTENT_LEN", 
                        "range": null, 
                        "title": "Asymmetric in/out fragment length", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice MBEDTLS_DEBUG_LEVEL>", 
                                        "help": null, 
                                        "id": "MBEDTLS_DEBUG_LEVEL_WARN", 
                                        "name": "MBEDTLS_DEBUG_LEVEL_WARN", 
                                        "range": null, 
                                        "title": "Warning", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice MBEDTLS_DEBUG_LEVEL>", 
                                        "help": null, 
                                        "id": "MBEDTLS_DEBUG_LEVEL_INFO", 
                                        "name": "MBEDTLS_DEBUG_LEVEL_INFO", 
                                        "range": null, 
                                        "title": "Info", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice MBEDTLS_DEBUG_LEVEL>", 
                                        "help": null, 
                                        "id": "MBEDTLS_DEBUG_LEVEL_DEBUG", 
                                        "name": "MBEDTLS_DEBUG_LEVEL_DEBUG", 
                                        "range": null, 
                                        "title": "Debug", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice MBEDTLS_DEBUG_LEVEL>", 
                                        "help": null, 
                                        "id": "MBEDTLS_DEBUG_LEVEL_VERBOSE", 
                                        "name": "MBEDTLS_DEBUG_LEVEL_VERBOSE", 
                                        "range": null, 
                                        "title": "Verbose", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "MBEDTLS_DEBUG", 
                                "help": "Set mbedTLS debugging level\n", 
                                "id": "component-config-mbedtls-enable-mbedtls-debugging-set-mbedtls-debugging-level", 
                                "name": "MBEDTLS_DEBUG_LEVEL", 
                                "title": "Set mbedTLS debugging level", 
                                "type": "choice"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable mbedTLS debugging functions at compile time.\n\nIf this option is enabled, you can include\n\"mbedtls/esp_debug.h\" and call mbedtls_esp_enable_debug_log()\nat runtime in order to enable mbedTLS debug output via the ESP\nlog mechanism.\n", 
                        "id": "MBEDTLS_DEBUG", 
                        "name": "MBEDTLS_DEBUG", 
                        "range": null, 
                        "title": "Enable mbedTLS debugging", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "MBEDTLS_DEBUG_LEVEL", 
                        "name": "MBEDTLS_DEBUG_LEVEL", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable \"non-blocking\" ECC operations that can return early and be resumed.\n", 
                        "id": "MBEDTLS_ECP_RESTARTABLE", 
                        "name": "MBEDTLS_ECP_RESTARTABLE", 
                        "range": null, 
                        "title": "Enable mbedTLS ecp restartable", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable the CMAC (Cipher-based Message Authentication Code) mode for\nblock ciphers.\n", 
                        "id": "MBEDTLS_CMAC_C", 
                        "name": "MBEDTLS_CMAC_C", 
                        "range": null, 
                        "title": "Enable CMAC mode for block ciphers", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable hardware accelerated AES encryption & decryption.\n\nNote that if the ESP32 CPU is running at 240MHz, hardware AES does not\noffer any speed boost over software AES.\n", 
                        "id": "MBEDTLS_HARDWARE_AES", 
                        "name": "MBEDTLS_HARDWARE_AES", 
                        "range": null, 
                        "title": "Enable hardware AES acceleration", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_HARDWARE_MPI", 
                                "help": "Use an interrupt to coordinate MPI operations.\n\nThis allows other code to run on the CPU while an MPI operation is pending.\nOtherwise the CPU busy-waits.\n", 
                                "id": "MBEDTLS_MPI_USE_INTERRUPT", 
                                "name": "MBEDTLS_MPI_USE_INTERRUPT", 
                                "range": null, 
                                "title": "Use interrupt for MPI operations", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable hardware accelerated multiple precision integer operations.\n\nHardware accelerated multiplication, modulo multiplication,\nand modular exponentiation for up to 4096 bit results.\n\nThese operations are used by RSA.\n", 
                        "id": "MBEDTLS_HARDWARE_MPI", 
                        "name": "MBEDTLS_HARDWARE_MPI", 
                        "range": null, 
                        "title": "Enable hardware MPI (bignum) acceleration", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable hardware accelerated SHA1, SHA256, SHA384 & SHA512 in mbedTLS.\n\nDue to a hardware limitation, hardware acceleration is only\nguaranteed if SHA digests are calculated one at a time. If more\nthan one SHA digest is calculated at the same time, one will\nbe calculated fully in hardware and the rest will be calculated\n(at least partially calculated) in software. This happens automatically.\n\nSHA hardware acceleration is faster than software in some situations but\nslower in others. You should benchmark to find the best setting for you.\n", 
                        "id": "MBEDTLS_HARDWARE_SHA", 
                        "name": "MBEDTLS_HARDWARE_SHA", 
                        "range": null, 
                        "title": "Enable hardware SHA acceleration", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_HAVE_TIME", 
                                "help": "System has time.h and time(), gmtime() and the clock is correct.\nThe time needs to be correct (not necesarily very accurate, but at least\nthe date should be correct). This is used to verify the validity period of\nX.509 certificates.\n\nIt is suggested that you should get the real time by \"SNTP\".\n", 
                                "id": "MBEDTLS_HAVE_TIME_DATE", 
                                "name": "MBEDTLS_HAVE_TIME_DATE", 
                                "range": null, 
                                "title": "Enable mbedtls certificate expiry check", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "!ESP32_TIME_SYSCALL_USE_NONE", 
                        "help": "System has time.h and time().\nThe time does not need to be correct, only time differences are used.\n", 
                        "id": "MBEDTLS_HAVE_TIME", 
                        "name": "MBEDTLS_HAVE_TIME", 
                        "range": null, 
                        "title": "Enable mbedtls time", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice MBEDTLS_TLS_MODE>", 
                                "help": null, 
                                "id": "MBEDTLS_TLS_SERVER_AND_CLIENT", 
                                "name": "MBEDTLS_TLS_SERVER_AND_CLIENT", 
                                "range": null, 
                                "title": "Server & Client", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice MBEDTLS_TLS_MODE>", 
                                "help": null, 
                                "id": "MBEDTLS_TLS_SERVER_ONLY", 
                                "name": "MBEDTLS_TLS_SERVER_ONLY", 
                                "range": null, 
                                "title": "Server", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice MBEDTLS_TLS_MODE>", 
                                "help": null, 
                                "id": "MBEDTLS_TLS_CLIENT_ONLY", 
                                "name": "MBEDTLS_TLS_CLIENT_ONLY", 
                                "range": null, 
                                "title": "Client", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice MBEDTLS_TLS_MODE>", 
                                "help": null, 
                                "id": "MBEDTLS_TLS_DISABLED", 
                                "name": "MBEDTLS_TLS_DISABLED", 
                                "range": null, 
                                "title": "None", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "mbedTLS can be compiled with protocol support for the TLS\nserver, TLS client, or both server and client.\n\nReducing the number of TLS roles supported saves code size.\n", 
                        "id": "component-config-mbedtls-tls-protocol-role", 
                        "name": "MBEDTLS_TLS_MODE", 
                        "title": "TLS Protocol Role", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "MBEDTLS_TLS_SERVER", 
                        "name": "MBEDTLS_TLS_SERVER", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "MBEDTLS_TLS_CLIENT", 
                        "name": "MBEDTLS_TLS_CLIENT", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "MBEDTLS_TLS_ENABLED", 
                        "name": "MBEDTLS_TLS_ENABLED", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_PSK_MODES && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support symmetric key PSK (pre-shared-key) TLS key exchange modes.\n", 
                                        "id": "MBEDTLS_KEY_EXCHANGE_PSK", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_PSK", 
                                        "range": null, 
                                        "title": "Enable PSK based ciphersuite modes", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_PSK_MODES && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support Diffie-Hellman PSK (pre-shared-key) TLS authentication modes.\n", 
                                        "id": "MBEDTLS_KEY_EXCHANGE_DHE_PSK", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_DHE_PSK", 
                                        "range": null, 
                                        "title": "Enable DHE-PSK based ciphersuite modes", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_PSK_MODES && MBEDTLS_ECDH_C && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support Elliptic-Curve-Diffie-Hellman PSK (pre-shared-key) TLS authentication modes.\n", 
                                        "id": "MBEDTLS_KEY_EXCHANGE_ECDHE_PSK", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDHE_PSK", 
                                        "range": null, 
                                        "title": "Enable ECDHE-PSK based ciphersuite modes", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_PSK_MODES && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support RSA PSK (pre-shared-key) TLS authentication modes.\n", 
                                        "id": "MBEDTLS_KEY_EXCHANGE_RSA_PSK", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_RSA_PSK", 
                                        "range": null, 
                                        "title": "Enable RSA-PSK based ciphersuite modes", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "MBEDTLS_TLS_ENABLED", 
                                "help": "Enable to show configuration for different types of pre-shared-key TLS authentatication methods.\n\nLeaving this options disabled will save code size if they are not used.\n", 
                                "id": "MBEDTLS_PSK_MODES", 
                                "name": "MBEDTLS_PSK_MODES", 
                                "range": null, 
                                "title": "Enable pre-shared-key ciphersuites", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_TLS_ENABLED", 
                                "help": "Enable to support ciphersuites with prefix TLS-RSA-WITH-\n", 
                                "id": "MBEDTLS_KEY_EXCHANGE_RSA", 
                                "name": "MBEDTLS_KEY_EXCHANGE_RSA", 
                                "range": null, 
                                "title": "Enable RSA-only based ciphersuite modes", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_TLS_ENABLED", 
                                "help": "Enable to support ciphersuites with prefix TLS-DHE-RSA-WITH-\n", 
                                "id": "MBEDTLS_KEY_EXCHANGE_DHE_RSA", 
                                "name": "MBEDTLS_KEY_EXCHANGE_DHE_RSA", 
                                "range": null, 
                                "title": "Enable DHE-RSA based ciphersuite modes", 
                                "type": "bool"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE && MBEDTLS_ECDH_C && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support ciphersuites with prefix TLS-ECDHE-RSA-WITH-\n", 
                                        "id": "MBEDTLS_KEY_EXCHANGE_ECDHE_RSA", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDHE_RSA", 
                                        "range": null, 
                                        "title": "Enable ECDHE-RSA based ciphersuite modes", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE && MBEDTLS_ECDH_C && MBEDTLS_ECDSA_C && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support ciphersuites with prefix TLS-ECDHE-RSA-WITH-\n", 
                                        "id": "MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA", 
                                        "range": null, 
                                        "title": "Enable ECDHE-ECDSA based ciphersuite modes", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE && MBEDTLS_ECDH_C && MBEDTLS_ECDSA_C && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support ciphersuites with prefix TLS-ECDHE-RSA-WITH-\n", 
                                        "id": "MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA", 
                                        "range": null, 
                                        "title": "Enable ECDH-ECDSA based ciphersuite modes", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE && MBEDTLS_ECDH_C && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support ciphersuites with prefix TLS-ECDHE-RSA-WITH-\n", 
                                        "id": "MBEDTLS_KEY_EXCHANGE_ECDH_RSA", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDH_RSA", 
                                        "range": null, 
                                        "title": "Enable ECDH-RSA based ciphersuite modes", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "MBEDTLS_ECP_C && MBEDTLS_TLS_ENABLED", 
                                "help": "Enable to show Elliptic Curve based ciphersuite mode options.\n\nDisabling all Elliptic Curve ciphersuites saves code size and\ncan give slightly faster TLS handshakes, provided the server supports\nRSA-only ciphersuite modes.\n", 
                                "id": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE", 
                                "name": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE", 
                                "range": null, 
                                "title": "Support Elliptic Curve based ciphersuites", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "id": "component-config-mbedtls-tls-key-exchange-methods", 
                        "title": "TLS Key Exchange Methods", 
                        "type": "menu"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": "The two main uses of renegotiation are (1) refresh keys on long-lived\nconnections and (2) client authentication after the initial handshake.\nIf you don't need renegotiation, disabling it will save code size and\nreduce the possibility of abuse/vulnerability.\n", 
                        "id": "MBEDTLS_SSL_RENEGOTIATION", 
                        "name": "MBEDTLS_SSL_RENEGOTIATION", 
                        "range": null, 
                        "title": "Support TLS renegotiation", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": "Support the legacy SSL 3.0 protocol. Most servers will speak a newer\nTLS protocol these days.\n", 
                        "id": "MBEDTLS_SSL_PROTO_SSL3", 
                        "name": "MBEDTLS_SSL_PROTO_SSL3", 
                        "range": null, 
                        "title": "Legacy SSL 3.0 support", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": null, 
                        "id": "MBEDTLS_SSL_PROTO_TLS1", 
                        "name": "MBEDTLS_SSL_PROTO_TLS1", 
                        "range": null, 
                        "title": "Support TLS 1.0 protocol", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": null, 
                        "id": "MBEDTLS_SSL_PROTO_TLS1_1", 
                        "name": "MBEDTLS_SSL_PROTO_TLS1_1", 
                        "range": null, 
                        "title": "Support TLS 1.1 protocol", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": null, 
                        "id": "MBEDTLS_SSL_PROTO_TLS1_2", 
                        "name": "MBEDTLS_SSL_PROTO_TLS1_2", 
                        "range": null, 
                        "title": "Support TLS 1.2 protocol", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_SSL_PROTO_TLS1_1 || MBEDTLS_SSL_PROTO_TLS1_2", 
                        "help": "Requires TLS 1.1 to be enabled for DTLS 1.0\nRequires TLS 1.2 to be enabled for DTLS 1.2\n", 
                        "id": "MBEDTLS_SSL_PROTO_DTLS", 
                        "name": "MBEDTLS_SSL_PROTO_DTLS", 
                        "range": null, 
                        "title": "Support DTLS protocol (all versions)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": "Disabling this option will save some code size if it is not needed.\n", 
                        "id": "MBEDTLS_SSL_ALPN", 
                        "name": "MBEDTLS_SSL_ALPN", 
                        "range": null, 
                        "title": "Support ALPN (Application Layer Protocol Negotiation)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": "Client support for RFC 5077 session tickets. See mbedTLS documentation for more details.\nDisabling this option will save some code size.\n", 
                        "id": "MBEDTLS_CLIENT_SSL_SESSION_TICKETS", 
                        "name": "MBEDTLS_CLIENT_SSL_SESSION_TICKETS", 
                        "range": null, 
                        "title": "TLS: Client Support for RFC 5077 SSL session tickets", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": "Server support for RFC 5077 session tickets. See mbedTLS documentation for more details.\nDisabling this option will save some code size.\n", 
                        "id": "MBEDTLS_SERVER_SSL_SESSION_TICKETS", 
                        "name": "MBEDTLS_SERVER_SSL_SESSION_TICKETS", 
                        "range": null, 
                        "title": "TLS: Server Support for RFC 5077 SSL session tickets", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": null, 
                                "id": "MBEDTLS_AES_C", 
                                "name": "MBEDTLS_AES_C", 
                                "range": null, 
                                "title": "AES block cipher", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": null, 
                                "id": "MBEDTLS_CAMELLIA_C", 
                                "name": "MBEDTLS_CAMELLIA_C", 
                                "range": null, 
                                "title": "Camellia block cipher", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enables the DES block cipher to support 3DES-based TLS ciphersuites.\n\n3DES is vulnerable to the Sweet32 attack and should only be enabled\nif absolutely necessary.\n", 
                                "id": "MBEDTLS_DES_C", 
                                "name": "MBEDTLS_DES_C", 
                                "range": null, 
                                "title": "DES block cipher (legacy, insecure)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice MBEDTLS_RC4_MODE>", 
                                        "help": null, 
                                        "id": "MBEDTLS_RC4_DISABLED", 
                                        "name": "MBEDTLS_RC4_DISABLED", 
                                        "range": null, 
                                        "title": "Disabled", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice MBEDTLS_RC4_MODE>", 
                                        "help": null, 
                                        "id": "MBEDTLS_RC4_ENABLED_NO_DEFAULT", 
                                        "name": "MBEDTLS_RC4_ENABLED_NO_DEFAULT", 
                                        "range": null, 
                                        "title": "Enabled, not in default ciphersuites", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice MBEDTLS_RC4_MODE>", 
                                        "help": null, 
                                        "id": "MBEDTLS_RC4_ENABLED", 
                                        "name": "MBEDTLS_RC4_ENABLED", 
                                        "range": null, 
                                        "title": "Enabled", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": null, 
                                "help": "ARCFOUR (RC4) stream cipher can be disabled entirely, enabled but not\nadded to default ciphersuites, or enabled completely.\n\nPlease consider the security implications before enabling RC4.\n", 
                                "id": "component-config-mbedtls-symmetric-ciphers-rc4-stream-cipher-legacy-insecure-", 
                                "name": "MBEDTLS_RC4_MODE", 
                                "title": "RC4 Stream Cipher (legacy, insecure)", 
                                "type": "choice"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enables the Blowfish block cipher (not used for TLS sessions.)\n\nThe Blowfish cipher is not used for mbedTLS TLS sessions but can be\nused for other purposes. Read up on the limitations of Blowfish (including\nSweet32) before enabling.\n", 
                                "id": "MBEDTLS_BLOWFISH_C", 
                                "name": "MBEDTLS_BLOWFISH_C", 
                                "range": null, 
                                "title": "Blowfish block cipher (read help)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enables the XTEA block cipher.\n", 
                                "id": "MBEDTLS_XTEA_C", 
                                "name": "MBEDTLS_XTEA_C", 
                                "range": null, 
                                "title": "XTEA block cipher", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_AES_C || MBEDTLS_CAMELLIA_C", 
                                "help": "Enable Counter with CBC-MAC (CCM) modes for AES and/or Camellia ciphers.\n\nDisabling this option saves some code size.\n", 
                                "id": "MBEDTLS_CCM_C", 
                                "name": "MBEDTLS_CCM_C", 
                                "range": null, 
                                "title": "CCM (Counter with CBC-MAC) block cipher modes", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_AES_C || MBEDTLS_CAMELLIA_C", 
                                "help": "Enable Galois/Counter Mode for AES and/or Camellia ciphers.\n\nThis option is generally faster than CCM.\n", 
                                "id": "MBEDTLS_GCM_C", 
                                "name": "MBEDTLS_GCM_C", 
                                "range": null, 
                                "title": "GCM (Galois/Counter) block cipher modes", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-mbedtls-symmetric-ciphers", 
                        "title": "Symmetric Ciphers", 
                        "type": "menu"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable the RIPEMD-160 hash algorithm.\n", 
                        "id": "MBEDTLS_RIPEMD160_C", 
                        "name": "MBEDTLS_RIPEMD160_C", 
                        "range": null, 
                        "title": "Enable RIPEMD-160 hash algorithm", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enable decoding/parsing of PEM formatted certificates.\n\nIf your certificates are all in the simpler DER format, disabling\nthis option will save some code size.\n", 
                                "id": "MBEDTLS_PEM_PARSE_C", 
                                "name": "MBEDTLS_PEM_PARSE_C", 
                                "range": null, 
                                "title": "Read & Parse PEM formatted certificates", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enable writing of PEM formatted certificates.\n\nIf writing certificate data only in DER format, disabling this\noption will save some code size.\n", 
                                "id": "MBEDTLS_PEM_WRITE_C", 
                                "name": "MBEDTLS_PEM_WRITE_C", 
                                "range": null, 
                                "title": "Write PEM formatted certificates", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Support for parsing X.509 Certifificate Revocation Lists.\n", 
                                "id": "MBEDTLS_X509_CRL_PARSE_C", 
                                "name": "MBEDTLS_X509_CRL_PARSE_C", 
                                "range": null, 
                                "title": "X.509 CRL parsing", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Support for parsing X.509 Certifificate Signing Requests\n", 
                                "id": "MBEDTLS_X509_CSR_PARSE_C", 
                                "name": "MBEDTLS_X509_CSR_PARSE_C", 
                                "range": null, 
                                "title": "X.509 CSR parsing", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-mbedtls-certificates", 
                        "title": "Certificates", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_ECDH_C", 
                                        "help": "Enable ECDSA. Needed to use ECDSA-xxx TLS ciphersuites.\n", 
                                        "id": "MBEDTLS_ECDSA_C", 
                                        "name": "MBEDTLS_ECDSA_C", 
                                        "range": null, 
                                        "title": "Elliptic Curve DSA", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable ECDH. Needed to use ECDHE-xxx TLS ciphersuites.\n", 
                                "id": "MBEDTLS_ECDH_C", 
                                "name": "MBEDTLS_ECDH_C", 
                                "range": null, 
                                "title": "Elliptic Curve Diffie-Hellman (ECDH)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP192R1 Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_SECP192R1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_SECP192R1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP192R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP224R1 Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_SECP224R1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_SECP224R1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP224R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP256R1 Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_SECP256R1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_SECP256R1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP256R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP384R1 Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_SECP384R1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_SECP384R1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP384R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP521R1 Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_SECP521R1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_SECP521R1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP521R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP192K1 Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_SECP192K1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_SECP192K1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP192K1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP224K1 Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_SECP224K1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_SECP224K1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP224K1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP256K1 Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_SECP256K1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_SECP256K1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP256K1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "support for DP Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_BP256R1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_BP256R1_ENABLED", 
                                "range": null, 
                                "title": "Enable BP256R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "support for DP Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_BP384R1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_BP384R1_ENABLED", 
                                "range": null, 
                                "title": "Enable BP384R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "support for DP Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_BP512R1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_BP512R1_ENABLED", 
                                "range": null, 
                                "title": "Enable BP512R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for CURVE25519 Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_CURVE25519_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_CURVE25519_ENABLED", 
                                "range": null, 
                                "title": "Enable CURVE25519 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "NIST 'modulo p' optimisations increase Elliptic Curve operation performance.\n\nDisabling this option saves some code size.\n\n# end of Elliptic Curve options\n", 
                                "id": "MBEDTLS_ECP_NIST_OPTIM", 
                                "name": "MBEDTLS_ECP_NIST_OPTIM", 
                                "range": null, 
                                "title": "NIST 'modulo p' optimisations", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "MBEDTLS_ECP_C", 
                        "is_menuconfig": true, 
                        "name": "MBEDTLS_ECP_C", 
                        "range": null, 
                        "title": "Elliptic Curve Ciphers", 
                        "type": "menu"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-mbedtls", 
                "title": "mbedTLS", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Services take up a certain amount of memory, and allowing fewer\nservices to be open at the same time conserves memory. Specify\nthe maximum amount of services here. The valid value is from 1\nto 64.\n", 
                        "id": "MDNS_MAX_SERVICES", 
                        "name": "MDNS_MAX_SERVICES", 
                        "range": [
                            1, 
                            64
                        ], 
                        "title": "Max number of services", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-mdns", 
                "title": "mDNS", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If not, this library will use MQTT protocol 3.1\n", 
                        "id": "MQTT_PROTOCOL_311", 
                        "name": "MQTT_PROTOCOL_311", 
                        "range": null, 
                        "title": "Enable MQTT protocol 3.1.1", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable MQTT transport over SSL with mbedtls\n", 
                        "id": "MQTT_TRANSPORT_SSL", 
                        "name": "MQTT_TRANSPORT_SSL", 
                        "range": null, 
                        "title": "Enable MQTT over SSL", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "MQTT_TRANSPORT_WEBSOCKET && MQTT_TRANSPORT_SSL", 
                                "help": "Enable MQTT transport over Websocket Secure.\n", 
                                "id": "MQTT_TRANSPORT_WEBSOCKET_SECURE", 
                                "name": "MQTT_TRANSPORT_WEBSOCKET_SECURE", 
                                "range": null, 
                                "title": "Enable MQTT over Websocket Secure", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable MQTT transport over Websocket.\n", 
                        "id": "MQTT_TRANSPORT_WEBSOCKET", 
                        "name": "MQTT_TRANSPORT_WEBSOCKET", 
                        "range": null, 
                        "title": "Enable MQTT over Websocket", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "MQTT_USE_CUSTOM_CONFIG", 
                                "help": "Default MQTT over TCP port\n", 
                                "id": "MQTT_TCP_DEFAULT_PORT", 
                                "name": "MQTT_TCP_DEFAULT_PORT", 
                                "range": null, 
                                "title": "Default MQTT over TCP port", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MQTT_USE_CUSTOM_CONFIG && MQTT_TRANSPORT_SSL", 
                                "help": "Default MQTT over SSL port\n", 
                                "id": "MQTT_SSL_DEFAULT_PORT", 
                                "name": "MQTT_SSL_DEFAULT_PORT", 
                                "range": null, 
                                "title": "Default MQTT over SSL port", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MQTT_USE_CUSTOM_CONFIG && MQTT_TRANSPORT_WEBSOCKET", 
                                "help": "Default MQTT over Websocket port\n", 
                                "id": "MQTT_WS_DEFAULT_PORT", 
                                "name": "MQTT_WS_DEFAULT_PORT", 
                                "range": null, 
                                "title": "Default MQTT over Websocket port", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MQTT_USE_CUSTOM_CONFIG && MQTT_TRANSPORT_WEBSOCKET && MQTT_TRANSPORT_WEBSOCKET_SECURE", 
                                "help": "Default MQTT over Websocket Secure port\n", 
                                "id": "MQTT_WSS_DEFAULT_PORT", 
                                "name": "MQTT_WSS_DEFAULT_PORT", 
                                "range": null, 
                                "title": "Default MQTT over Websocket Secure port", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MQTT_USE_CUSTOM_CONFIG", 
                                "help": "This buffer size using for both transmit and receive\n", 
                                "id": "MQTT_BUFFER_SIZE", 
                                "name": "MQTT_BUFFER_SIZE", 
                                "range": null, 
                                "title": "Default MQTT Buffer Size", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MQTT_USE_CUSTOM_CONFIG", 
                                "help": "MQTT task stack size\n", 
                                "id": "MQTT_TASK_STACK_SIZE", 
                                "name": "MQTT_TASK_STACK_SIZE", 
                                "range": null, 
                                "title": "MQTT task stack size", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MQTT_USE_CUSTOM_CONFIG", 
                                "help": "Default config employs API locks to protect internal structures. It is possible to disable\nthese locks if the user code doesn't access MQTT API from multiple concurrent tasks\n", 
                                "id": "MQTT_DISABLE_API_LOCKS", 
                                "name": "MQTT_DISABLE_API_LOCKS", 
                                "range": null, 
                                "title": "Disable API locks", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Custom MQTT configurations.\n", 
                        "id": "MQTT_USE_CUSTOM_CONFIG", 
                        "name": "MQTT_USE_CUSTOM_CONFIG", 
                        "range": null, 
                        "title": "MQTT Using custom configurations", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice MQTT_TASK_CORE_SELECTION>", 
                                        "help": null, 
                                        "id": "MQTT_USE_CORE_0", 
                                        "name": "MQTT_USE_CORE_0", 
                                        "range": null, 
                                        "title": "Core 0", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice MQTT_TASK_CORE_SELECTION>", 
                                        "help": null, 
                                        "id": "MQTT_USE_CORE_1", 
                                        "name": "MQTT_USE_CORE_1", 
                                        "range": null, 
                                        "title": "Core 1", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "MQTT_TASK_CORE_SELECTION_ENABLED", 
                                "help": null, 
                                "id": "component-config-esp-mqtt-configurations-enable-mqtt-task-core-selection-core-to-use-", 
                                "name": "MQTT_TASK_CORE_SELECTION", 
                                "title": "Core to use ?", 
                                "type": "choice"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "This will enable core selection\n", 
                        "id": "MQTT_TASK_CORE_SELECTION_ENABLED", 
                        "name": "MQTT_TASK_CORE_SELECTION_ENABLED", 
                        "range": null, 
                        "title": "Enable MQTT task core selection", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Set to true if a specific implementation of message outbox is needed (e.g. persistant outbox in NVM or\nsimilar).\n", 
                        "id": "MQTT_CUSTOM_OUTBOX", 
                        "name": "MQTT_CUSTOM_OUTBOX", 
                        "range": null, 
                        "title": "Enable custom outbox implementation", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-esp-mqtt-configurations", 
                "title": "ESP-MQTT Configurations", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice NEWLIB_STDOUT_LINE_ENDING>", 
                                "help": null, 
                                "id": "NEWLIB_STDOUT_LINE_ENDING_CRLF", 
                                "name": "NEWLIB_STDOUT_LINE_ENDING_CRLF", 
                                "range": null, 
                                "title": "CRLF", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice NEWLIB_STDOUT_LINE_ENDING>", 
                                "help": null, 
                                "id": "NEWLIB_STDOUT_LINE_ENDING_LF", 
                                "name": "NEWLIB_STDOUT_LINE_ENDING_LF", 
                                "range": null, 
                                "title": "LF", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice NEWLIB_STDOUT_LINE_ENDING>", 
                                "help": null, 
                                "id": "NEWLIB_STDOUT_LINE_ENDING_CR", 
                                "name": "NEWLIB_STDOUT_LINE_ENDING_CR", 
                                "range": null, 
                                "title": "CR", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "This option allows configuring the desired line endings sent to UART\nwhen a newline ('\\n', LF) appears on stdout.\nThree options are possible:\n\nCRLF: whenever LF is encountered, prepend it with CR\n\nLF: no modification is applied, stdout is sent as is\n\nCR: each occurence of LF is replaced with CR\n\nThis option doesn't affect behavior of the UART driver (drivers/uart.h).\n", 
                        "id": "component-config-newlib-line-ending-for-uart-output", 
                        "name": "NEWLIB_STDOUT_LINE_ENDING", 
                        "title": "Line ending for UART output", 
                        "type": "choice"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice NEWLIB_STDIN_LINE_ENDING>", 
                                "help": null, 
                                "id": "NEWLIB_STDIN_LINE_ENDING_CRLF", 
                                "name": "NEWLIB_STDIN_LINE_ENDING_CRLF", 
                                "range": null, 
                                "title": "CRLF", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice NEWLIB_STDIN_LINE_ENDING>", 
                                "help": null, 
                                "id": "NEWLIB_STDIN_LINE_ENDING_LF", 
                                "name": "NEWLIB_STDIN_LINE_ENDING_LF", 
                                "range": null, 
                                "title": "LF", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice NEWLIB_STDIN_LINE_ENDING>", 
                                "help": null, 
                                "id": "NEWLIB_STDIN_LINE_ENDING_CR", 
                                "name": "NEWLIB_STDIN_LINE_ENDING_CR", 
                                "range": null, 
                                "title": "CR", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "This option allows configuring which input sequence on UART produces\na newline ('\\n', LF) on stdin.\nThree options are possible:\n\nCRLF: CRLF is converted to LF\n\nLF: no modification is applied, input is sent to stdin as is\n\nCR: each occurence of CR is replaced with LF\n\nThis option doesn't affect behavior of the UART driver (drivers/uart.h).\n", 
                        "id": "component-config-newlib-line-ending-for-uart-input", 
                        "name": "NEWLIB_STDIN_LINE_ENDING", 
                        "title": "Line ending for UART input", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "ESP32 ROM contains parts of newlib C library, including printf/scanf family\nof functions. These functions have been compiled with so-called \"nano\"\nformatting option. This option doesn't support 64-bit integer formats and C99\nfeatures, such as positional arguments.\n\nFor more details about \"nano\" formatting option, please see newlib readme file,\nsearch for '--enable-newlib-nano-formatted-io':\nhttps://sourceware.org/newlib/README\n\nIf this option is enabled, build system will use functions available in\nROM, reducing the application binary size. Functions available in ROM run\nfaster than functions which run from flash. Functions available in ROM can\nalso run when flash instruction cache is disabled.\n\nIf you need 64-bit integer formatting support or C99 features, keep this\noption disabled.\n", 
                        "id": "NEWLIB_NANO_FORMAT", 
                        "name": "NEWLIB_NANO_FORMAT", 
                        "range": null, 
                        "title": "Enable 'nano' formatting options for printf/scanf family", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-newlib", 
                "title": "Newlib", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "SECURE_FLASH_ENC_ENABLED", 
                        "help": "This option enables encryption for NVS. When enabled, AES-XTS is used to encrypt\nthe complete NVS data, except the page headers. It requires XTS encryption keys\nto be stored in an encrypted partition. This means enabling flash encryption is\na pre-requisite for this feature.\n", 
                        "id": "NVS_ENCRYPTION", 
                        "name": "NVS_ENCRYPTION", 
                        "range": null, 
                        "title": "Enable NVS encryption", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-nvs", 
                "title": "NVS", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "OPENSSL_DEBUG", 
                                "help": "OpenSSL debugging level.\n\nOnly function whose debugging level is higher than \"OPENSSL_DEBUG_LEVEL\" works.\n\nFor example:\nIf OPENSSL_DEBUG_LEVEL = 2, you use function \"SSL_DEBUG(1, \"malloc failed\")\". Because 1 < 2, it will not\nprint.\n", 
                                "id": "OPENSSL_DEBUG_LEVEL", 
                                "name": "OPENSSL_DEBUG_LEVEL", 
                                "range": null, 
                                "title": "OpenSSL debugging level", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "OPENSSL_DEBUG", 
                                "help": "If the option is enabled, low-level module debugging function of OpenSSL is enabled, e.g. mbedtls internal\ndebugging function.\n", 
                                "id": "OPENSSL_LOWLEVEL_DEBUG", 
                                "name": "OPENSSL_LOWLEVEL_DEBUG", 
                                "range": null, 
                                "title": "Enable OpenSSL low-level module debugging", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable OpenSSL debugging function.\n\nIf the option is enabled, \"SSL_DEBUG\" works.\n", 
                        "id": "OPENSSL_DEBUG", 
                        "name": "OPENSSL_DEBUG", 
                        "range": null, 
                        "title": "Enable OpenSSL debugging", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice OPENSSL_ASSERT>", 
                                "help": "Do nothing and \"SSL_ASSERT\" does not work.\n", 
                                "id": "OPENSSL_ASSERT_DO_NOTHING", 
                                "name": "OPENSSL_ASSERT_DO_NOTHING", 
                                "range": null, 
                                "title": "Do nothing", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice OPENSSL_ASSERT>", 
                                "help": "Enable assert exiting, it will check and return error code.\n", 
                                "id": "OPENSSL_ASSERT_EXIT", 
                                "name": "OPENSSL_ASSERT_EXIT", 
                                "range": null, 
                                "title": "Check and exit", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "OPENSSL_DEBUG && <choice OPENSSL_ASSERT>", 
                                "help": "Enable assert debugging, it will check and show debugging message.\n", 
                                "id": "OPENSSL_ASSERT_DEBUG", 
                                "name": "OPENSSL_ASSERT_DEBUG", 
                                "range": null, 
                                "title": "Show debugging message", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "OPENSSL_DEBUG && <choice OPENSSL_ASSERT>", 
                                "help": "Enable assert debugging and exiting, it will check, show debugging message and return error code.\n", 
                                "id": "OPENSSL_ASSERT_DEBUG_EXIT", 
                                "name": "OPENSSL_ASSERT_DEBUG_EXIT", 
                                "range": null, 
                                "title": "Show debugging message and exit", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "OPENSSL_DEBUG && <choice OPENSSL_ASSERT>", 
                                "help": "Enable assert debugging and blocking, it will check, show debugging message and block by \"while (1);\".\n", 
                                "id": "OPENSSL_ASSERT_DEBUG_BLOCK", 
                                "name": "OPENSSL_ASSERT_DEBUG_BLOCK", 
                                "range": null, 
                                "title": "Show debugging message and block", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "OpenSSL function needs \"assert\" function to check if input parameters are valid.\n\nIf you want to use assert debugging function, \"OPENSSL_DEBUG\" should be enabled.\n", 
                        "id": "component-config-openssl-select-openssl-assert-function", 
                        "name": "OPENSSL_ASSERT", 
                        "title": "Select OpenSSL assert function", 
                        "type": "choice"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-openssl", 
                "title": "OpenSSL", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Priority used to create new tasks with default pthread parameters.\n", 
                        "id": "PTHREAD_TASK_PRIO_DEFAULT", 
                        "name": "PTHREAD_TASK_PRIO_DEFAULT", 
                        "range": [
                            0, 
                            255
                        ], 
                        "title": "Default task priority", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Stack size used to create new tasks with default pthread parameters.\n", 
                        "id": "PTHREAD_TASK_STACK_SIZE_DEFAULT", 
                        "name": "PTHREAD_TASK_STACK_SIZE_DEFAULT", 
                        "range": null, 
                        "title": "Default task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Minimum allowed pthread stack size set in attributes passed to pthread_create\n", 
                        "id": "PTHREAD_STACK_MIN", 
                        "name": "PTHREAD_STACK_MIN", 
                        "range": null, 
                        "title": "Minimum allowed pthread stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice PTHREAD_TASK_CORE_DEFAULT>", 
                                "help": null, 
                                "id": "PTHREAD_DEFAULT_CORE_NO_AFFINITY", 
                                "name": "PTHREAD_DEFAULT_CORE_NO_AFFINITY", 
                                "range": null, 
                                "title": "No affinity", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice PTHREAD_TASK_CORE_DEFAULT>", 
                                "help": null, 
                                "id": "PTHREAD_DEFAULT_CORE_0", 
                                "name": "PTHREAD_DEFAULT_CORE_0", 
                                "range": null, 
                                "title": "Core 0", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice PTHREAD_TASK_CORE_DEFAULT>", 
                                "help": null, 
                                "id": "PTHREAD_DEFAULT_CORE_1", 
                                "name": "PTHREAD_DEFAULT_CORE_1", 
                                "range": null, 
                                "title": "Core 1", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "!FREERTOS_UNICORE", 
                        "help": "The default core to which pthreads are pinned.\n", 
                        "id": "component-config-pthreads-default-pthread-core-affinity", 
                        "name": "PTHREAD_TASK_CORE_DEFAULT", 
                        "title": "Default pthread core affinity", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "PTHREAD_TASK_CORE_DEFAULT", 
                        "name": "PTHREAD_TASK_CORE_DEFAULT", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The default name of pthreads.\n", 
                        "id": "PTHREAD_TASK_NAME_DEFAULT", 
                        "name": "PTHREAD_TASK_NAME_DEFAULT", 
                        "range": null, 
                        "title": "Default name of pthreads", 
                        "type": "string"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-pthreads", 
                "title": "PThreads", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "SPI_FLASH_VERIFY_WRITE", 
                                "help": "If this option is enabled, if SPI flash write verification fails then a log error line\nwill be written with the address, expected & actual values. This can be useful when\ndebugging hardware SPI flash problems.\n", 
                                "id": "SPI_FLASH_LOG_FAILED_WRITE", 
                                "name": "SPI_FLASH_LOG_FAILED_WRITE", 
                                "range": null, 
                                "title": "Log errors if verification fails", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "SPI_FLASH_VERIFY_WRITE", 
                                "help": "If this option is enabled, any SPI flash write which tries to set zero bits in the flash to\nones will log a warning. Such writes will not result in the requested data appearing identically\nin flash once written, as SPI NOR flash can only set bits to one when an entire sector is erased.\nAfter erasing, individual bits can only be written from one to zero.\n\nNote that some software (such as SPIFFS) which is aware of SPI NOR flash may write one bits as an\noptimisation, relying on the data in flash becoming a bitwise AND of the new data and any existing data.\nSuch software will log spurious warnings if this option is enabled.\n", 
                                "id": "SPI_FLASH_WARN_SETTING_ZERO_TO_ONE", 
                                "name": "SPI_FLASH_WARN_SETTING_ZERO_TO_ONE", 
                                "range": null, 
                                "title": "Log warning if writing zero bits to ones", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "If this option is enabled, any time SPI flash is written then the data will be read\nback and verified. This can catch hardware problems with SPI flash, or flash which\nwas not erased before verification.\n", 
                        "id": "SPI_FLASH_VERIFY_WRITE", 
                        "name": "SPI_FLASH_VERIFY_WRITE", 
                        "range": null, 
                        "title": "Verify SPI flash writes", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This option enables the following APIs:\n\n- spi_flash_reset_counters\n- spi_flash_dump_counters\n- spi_flash_get_counters\n\nThese APIs may be used to collect performance data for spi_flash APIs\nand to help understand behaviour of libraries which use SPI flash.\n", 
                        "id": "SPI_FLASH_ENABLE_COUNTERS", 
                        "name": "SPI_FLASH_ENABLE_COUNTERS", 
                        "range": null, 
                        "title": "Enable operation counters", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable this flag to use patched versions of SPI flash ROM driver functions.\nThis option is needed to write to flash on ESP32-D2WD, and any configuration\nwhere external SPI flash is connected to non-default pins.\n", 
                        "id": "SPI_FLASH_ROM_DRIVER_PATCH", 
                        "name": "SPI_FLASH_ROM_DRIVER_PATCH", 
                        "range": null, 
                        "title": "Enable SPI flash ROM driver patched functions", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice SPI_FLASH_DANGEROUS_WRITE>", 
                                "help": null, 
                                "id": "SPI_FLASH_DANGEROUS_WRITE_ABORTS", 
                                "name": "SPI_FLASH_DANGEROUS_WRITE_ABORTS", 
                                "range": null, 
                                "title": "Aborts", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice SPI_FLASH_DANGEROUS_WRITE>", 
                                "help": null, 
                                "id": "SPI_FLASH_DANGEROUS_WRITE_FAILS", 
                                "name": "SPI_FLASH_DANGEROUS_WRITE_FAILS", 
                                "range": null, 
                                "title": "Fails", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice SPI_FLASH_DANGEROUS_WRITE>", 
                                "help": null, 
                                "id": "SPI_FLASH_DANGEROUS_WRITE_ALLOWED", 
                                "name": "SPI_FLASH_DANGEROUS_WRITE_ALLOWED", 
                                "range": null, 
                                "title": "Allowed", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "SPI flash APIs can optionally abort or return a failure code\nif erasing or writing addresses that fall at the beginning\nof flash (covering the bootloader and partition table) or that\noverlap the app partition that contains the running app.\n\nIt is not recommended to ever write to these regions from an IDF app,\nand this check prevents logic errors or corrupted firmware memory from\ndamaging these regions.\n\nNote that this feature *does not* check calls to the esp_rom_xxx SPI flash\nROM functions. These functions should not be called directly from IDF\napplications.\n", 
                        "id": "component-config-spi-flash-driver-writing-to-dangerous-flash-regions", 
                        "name": "SPI_FLASH_DANGEROUS_WRITE", 
                        "title": "Writing to dangerous flash regions", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The implementation of SPI flash has been greatly changed in IDF v4.0.\nEnable this option to use the legacy implementation.\n", 
                        "id": "SPI_FLASH_USE_LEGACY_IMPL", 
                        "name": "SPI_FLASH_USE_LEGACY_IMPL", 
                        "range": null, 
                        "title": "Use the legacy implementation before IDF v4.0", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enable this to support auto detection of ISSI chips if chip vendor not directly\ngiven by ``chip_drv`` member of the chip struct. This adds support for variant\nchips, however will extend detecting time.\n", 
                                "id": "SPI_FLASH_SUPPORT_ISSI_CHIP", 
                                "name": "SPI_FLASH_SUPPORT_ISSI_CHIP", 
                                "range": null, 
                                "title": "ISSI", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enable this to support auto detection of GD (GigaDevice) chips if chip vendor not\ndirectly given by ``chip_drv`` member of the chip struct. If you are using Wrover\nmodules, please don't disable this, otherwise your flash may not work in 4-bit\nmode.\n\nThis adds support for variant chips, however will extend detecting time and image\nsize. Note that the default chip driver supports the GD chips with product ID\n60H.\n", 
                                "id": "SPI_FLASH_SUPPORT_GD_CHIP", 
                                "name": "SPI_FLASH_SUPPORT_GD_CHIP", 
                                "range": null, 
                                "title": "GigaDevice", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-spi-flash-driver-auto-detect-flash-chips", 
                        "title": "Auto-detect flash chips", 
                        "type": "menu"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-spi-flash-driver", 
                "title": "SPI Flash driver", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Define maximum number of partitions that can be mounted.\n", 
                        "id": "SPIFFS_MAX_PARTITIONS", 
                        "name": "SPIFFS_MAX_PARTITIONS", 
                        "range": [
                            1, 
                            10
                        ], 
                        "title": "Maximum Number of Partitions", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "SPIFFS_CACHE", 
                                        "help": "Enables memory write caching for file descriptors in hydrogen.\n", 
                                        "id": "SPIFFS_CACHE_WR", 
                                        "name": "SPIFFS_CACHE_WR", 
                                        "range": null, 
                                        "title": "Enable SPIFFS Write Caching", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SPIFFS_CACHE", 
                                        "help": "Enable/disable statistics on caching. Debug/test purpose only.\n", 
                                        "id": "SPIFFS_CACHE_STATS", 
                                        "name": "SPIFFS_CACHE_STATS", 
                                        "range": null, 
                                        "title": "Enable SPIFFS Cache Statistics", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": null, 
                                "help": "Enables/disable memory read caching of nucleus file system\noperations.\n", 
                                "id": "SPIFFS_CACHE", 
                                "name": "SPIFFS_CACHE", 
                                "range": null, 
                                "title": "Enable SPIFFS Cache", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-spiffs-configuration-spiffs-cache-configuration", 
                        "title": "SPIFFS Cache Configuration", 
                        "type": "menu"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Always check header of each accessed page to ensure consistent state.\nIf enabled it will increase number of reads from flash, especially\nif cache is disabled.\n", 
                        "id": "SPIFFS_PAGE_CHECK", 
                        "name": "SPIFFS_PAGE_CHECK", 
                        "range": null, 
                        "title": "Enable SPIFFS Page Check", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Define maximum number of GC runs to perform to reach desired free pages.\n", 
                        "id": "SPIFFS_GC_MAX_RUNS", 
                        "name": "SPIFFS_GC_MAX_RUNS", 
                        "range": [
                            1, 
                            255
                        ], 
                        "title": "Set Maximum GC Runs", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable/disable statistics on gc. Debug/test purpose only.\n", 
                        "id": "SPIFFS_GC_STATS", 
                        "name": "SPIFFS_GC_STATS", 
                        "range": null, 
                        "title": "Enable SPIFFS GC Statistics", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Logical page size of SPIFFS partition, in bytes. Must be multiple\nof flash page size (which is usually 256 bytes).\nLarger page sizes reduce overhead when storing large files, and\nimprove filesystem performance when reading large files.\nSmaller page sizes reduce overhead when storing small (< page size)\nfiles.\n", 
                        "id": "SPIFFS_PAGE_SIZE", 
                        "name": "SPIFFS_PAGE_SIZE", 
                        "range": [
                            256, 
                            1024
                        ], 
                        "title": "SPIFFS logical page size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Object name maximum length. Note that this length include the\nzero-termination character, meaning maximum string of characters\ncan at most be SPIFFS_OBJ_NAME_LEN - 1.\n\nSPIFFS_OBJ_NAME_LEN + SPIFFS_META_LENGTH should not exceed\nSPIFFS_PAGE_SIZE - 64.\n", 
                        "id": "SPIFFS_OBJ_NAME_LEN", 
                        "name": "SPIFFS_OBJ_NAME_LEN", 
                        "range": [
                            1, 
                            256
                        ], 
                        "title": "Set SPIFFS Maximum Name Length", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "SPIFFS_USE_MAGIC", 
                                "help": "If this option is enabled, the magic will also be dependent\non the length of the filesystem. For example, a filesystem\nconfigured and formatted for 4 megabytes will not be accepted\nfor mounting with a configuration defining the filesystem as 2 megabytes.\n", 
                                "id": "SPIFFS_USE_MAGIC_LENGTH", 
                                "name": "SPIFFS_USE_MAGIC_LENGTH", 
                                "range": null, 
                                "title": "Enable SPIFFS Filesystem Length Magic", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable this to have an identifiable spiffs filesystem.\nThis will look for a magic in all sectors to determine if this\nis a valid spiffs system or not at mount time.\n", 
                        "id": "SPIFFS_USE_MAGIC", 
                        "name": "SPIFFS_USE_MAGIC", 
                        "range": null, 
                        "title": "Enable SPIFFS Filesystem Magic", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This option sets the number of extra bytes stored in the file header.\nThese bytes can be used in an application-specific manner.\nSet this to at least 4 bytes to enable support for saving file\nmodification time.\n\nSPIFFS_OBJ_NAME_LEN + SPIFFS_META_LENGTH should not exceed\nSPIFFS_PAGE_SIZE - 64.\n", 
                        "id": "SPIFFS_META_LENGTH", 
                        "name": "SPIFFS_META_LENGTH", 
                        "range": null, 
                        "title": "Size of per-file metadata field", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "SPIFFS_META_LENGTH >= 4", 
                        "help": "If enabled, then the first 4 bytes of per-file metadata will be used\nto store file modification time (mtime), accessible through\nstat/fstat functions.\nModification time is updated when the file is opened.\n", 
                        "id": "SPIFFS_USE_MTIME", 
                        "name": "SPIFFS_USE_MTIME", 
                        "range": null, 
                        "title": "Save file modification time", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enabling this option will print general debug mesages to the console.\n", 
                                "id": "SPIFFS_DBG", 
                                "name": "SPIFFS_DBG", 
                                "range": null, 
                                "title": "Enable general SPIFFS debug", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enabling this option will print API debug mesages to the console.\n", 
                                "id": "SPIFFS_API_DBG", 
                                "name": "SPIFFS_API_DBG", 
                                "range": null, 
                                "title": "Enable SPIFFS API debug", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enabling this option will print GC debug mesages to the console.\n", 
                                "id": "SPIFFS_GC_DBG", 
                                "name": "SPIFFS_GC_DBG", 
                                "range": null, 
                                "title": "Enable SPIFFS Garbage Cleaner debug", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "SPIFFS_CACHE", 
                                "help": "Enabling this option will print cache debug mesages to the console.\n", 
                                "id": "SPIFFS_CACHE_DBG", 
                                "name": "SPIFFS_CACHE_DBG", 
                                "range": null, 
                                "title": "Enable SPIFFS Cache debug", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enabling this option will print Filesystem Check debug mesages\nto the console.\n", 
                                "id": "SPIFFS_CHECK_DBG", 
                                "name": "SPIFFS_CHECK_DBG", 
                                "range": null, 
                                "title": "Enable SPIFFS Filesystem Check debug", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enable this option to enable SPIFFS_vis function in the API.\n", 
                                "id": "SPIFFS_TEST_VISUALISATION", 
                                "name": "SPIFFS_TEST_VISUALISATION", 
                                "range": null, 
                                "title": "Enable SPIFFS Filesystem Visualization", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-spiffs-configuration-debug-configuration", 
                        "title": "Debug Configuration", 
                        "type": "menu"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-spiffs-configuration", 
                "title": "SPIFFS Configuration", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The value of 0 indicates the IP lost timer is disabled, otherwise the timer is enabled.\n\nThe IP address may be lost because of some reasons, e.g. when the station disconnects\nfrom soft-AP, or when DHCP IP renew fails etc. If the IP lost timer is enabled, it will\nbe started everytime the IP is lost. Event SYSTEM_EVENT_STA_LOST_IP will be raised if\nthe timer expires. The IP lost timer is stopped if the station get the IP again before\nthe timer expires.\n", 
                        "id": "NETIF_IP_LOST_TIMER_INTERVAL", 
                        "name": "NETIF_IP_LOST_TIMER_INTERVAL", 
                        "range": [
                            0, 
                            65535
                        ], 
                        "title": "IP Address lost timer interval (seconds)", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice NETIF_USE_TCPIP_STACK_LIB>", 
                                "help": "lwIP is a small independent implementation of the TCP/IP protocol suite.\n", 
                                "id": "TCPIP_LWIP", 
                                "name": "TCPIP_LWIP", 
                                "range": null, 
                                "title": "LwIP", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Choose the TCP/IP Stack to work, for example, LwIP, uIP, etc.\n", 
                        "id": "component-config-tcp-ip-adapter-tcp-ip-stack-library", 
                        "name": "NETIF_USE_TCPIP_STACK_LIB", 
                        "title": "TCP/IP Stack Library", 
                        "type": "choice"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-tcp-ip-adapter", 
                "title": "TCP/IP Adapter", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If not set, assertions on float arguments will not be available.\n", 
                        "id": "UNITY_ENABLE_FLOAT", 
                        "name": "UNITY_ENABLE_FLOAT", 
                        "range": null, 
                        "title": "Support for float type", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If not set, assertions on double arguments will not be available.\n", 
                        "id": "UNITY_ENABLE_DOUBLE", 
                        "name": "UNITY_ENABLE_DOUBLE", 
                        "range": null, 
                        "title": "Support for double type", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If set, Unity will colorize test results using console escape sequences.\n", 
                        "id": "UNITY_ENABLE_COLOR", 
                        "name": "UNITY_ENABLE_COLOR", 
                        "range": null, 
                        "title": "Colorize test output", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If set, then the following features will be available:\n\n- TEST_CASE macro which performs automatic registration of test functions\n- Functions to run registered test functions: unity_run_all_tests,\n  unity_run_tests_with_filter, unity_run_single_test_by_name.\n- Interactive menu which lists test cases and allows choosing the tests to\n  be run, available via unity_run_menu function.\n\nDisable if a different test registration mechanism is used.\n", 
                        "id": "UNITY_ENABLE_IDF_TEST_RUNNER", 
                        "name": "UNITY_ENABLE_IDF_TEST_RUNNER", 
                        "range": null, 
                        "title": "Include ESP-IDF test registration/running helpers", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If set, unity_fixture.h header file and associated source files are part of\nthe build. These provide an optional set of macros and functions to\nimplement test groups.\n", 
                        "id": "UNITY_ENABLE_FIXTURE", 
                        "name": "UNITY_ENABLE_FIXTURE", 
                        "range": null, 
                        "title": "Include Unity test fixture", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If set, the unity framework will print the backtrace information before\njumping back to the test menu. The jumping is usually occurs in assert\nfunctions such as TEST_ASSERT, TEST_FAIL etc.\n", 
                        "id": "UNITY_ENABLE_BACKTRACE_ON_FAIL", 
                        "name": "UNITY_ENABLE_BACKTRACE_ON_FAIL", 
                        "range": null, 
                        "title": "Print a backtrace when a unit test fails", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-unity-unit-testing-library", 
                "title": "Unity unit testing library", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select() related functions might produce an unconveniently lot of\ndebug outputs when one sets the default log level to DEBUG or higher.\nIt is possible to suppress these debug outputs by enabling this\noption.\n", 
                        "id": "VFS_SUPPRESS_SELECT_DEBUG_OUTPUT", 
                        "name": "VFS_SUPPRESS_SELECT_DEBUG_OUTPUT", 
                        "range": null, 
                        "title": "Suppress select() related debug outputs", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Disabling this option can save memory when the support for termios.h is not required.\n", 
                        "id": "VFS_SUPPORT_TERMIOS", 
                        "name": "VFS_SUPPORT_TERMIOS", 
                        "range": null, 
                        "title": "Add support for termios.h", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Define maximum number of host filesystem mount points.\n", 
                                "id": "SEMIHOSTFS_MAX_MOUNT_POINTS", 
                                "name": "SEMIHOSTFS_MAX_MOUNT_POINTS", 
                                "range": null, 
                                "title": "Maximum number of the host filesystem mount points", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Define maximum path length for the host base directory which is to be mounted.\nIf host path passed to esp_vfs_semihost_register() is longer than this value\nit will be truncated.\n", 
                                "id": "SEMIHOSTFS_HOST_PATH_MAX_LEN", 
                                "name": "SEMIHOSTFS_HOST_PATH_MAX_LEN", 
                                "range": null, 
                                "title": "Maximum path length for the host base directory", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-virtual-file-system-host-file-system-i-o-semihosting-", 
                        "title": "Host File System I/O (Semihosting)", 
                        "type": "menu"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-virtual-file-system", 
                "title": "Virtual file system", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice WL_SECTOR_SIZE>", 
                                "help": null, 
                                "id": "WL_SECTOR_SIZE_512", 
                                "name": "WL_SECTOR_SIZE_512", 
                                "range": null, 
                                "title": "512", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice WL_SECTOR_SIZE>", 
                                "help": null, 
                                "id": "WL_SECTOR_SIZE_4096", 
                                "name": "WL_SECTOR_SIZE_4096", 
                                "range": null, 
                                "title": "4096", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Sector size used by wear levelling library.\nYou can set default sector size or size that will\nfit to the flash device sector size.\n\nWith sector size set to 4096 bytes, wear levelling library is more\nefficient. However if FAT filesystem is used on top of wear levelling\nlibrary, it will need more temporary storage: 4096 bytes for each\nmounted filesystem and 4096 bytes for each opened file.\n\nWith sector size set to 512 bytes, wear levelling library will perform\nmore operations with flash memory, but less RAM will be used by FAT\nfilesystem library (512 bytes for the filesystem and 512 bytes for each\nfile opened).\n", 
                        "id": "component-config-wear-levelling-wear-levelling-library-sector-size", 
                        "name": "WL_SECTOR_SIZE", 
                        "title": "Wear Levelling library sector size", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "WL_SECTOR_SIZE", 
                        "name": "WL_SECTOR_SIZE", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice WL_SECTOR_MODE>", 
                                "help": null, 
                                "id": "WL_SECTOR_MODE_PERF", 
                                "name": "WL_SECTOR_MODE_PERF", 
                                "range": null, 
                                "title": "Perfomance", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice WL_SECTOR_MODE>", 
                                "help": null, 
                                "id": "WL_SECTOR_MODE_SAFE", 
                                "name": "WL_SECTOR_MODE_SAFE", 
                                "range": null, 
                                "title": "Safety", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "WL_SECTOR_SIZE_512", 
                        "help": "Specify the mode to store data into flash:\n\n- In Performance mode a data will be stored to the RAM and then\n  stored back to the flash. Compared to the Safety mode, this operation is\n  faster, but if power will be lost when erase sector operation is in\n  progress, then the data from complete flash device sector will be lost.\n\n- In Safety mode data from complete flash device sector will be read from\n  flash, modified, and then stored back to flash.\n  Compared to the Performance mode, this operation is slower, but if\n  power is lost during erase sector operation, then the data from full\n  flash device sector will not be lost.\n", 
                        "id": "component-config-wear-levelling-sector-store-mode", 
                        "name": "WL_SECTOR_MODE", 
                        "title": "Sector store mode", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "WL_SECTOR_MODE", 
                        "name": "WL_SECTOR_MODE", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-wear-levelling", 
                "title": "Wear Levelling", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This sets the maximum number of entries of Wi-Fi scan results that will be kept by the provisioning manager\n", 
                        "id": "WIFI_PROV_SCAN_MAX_ENTRIES", 
                        "name": "WIFI_PROV_SCAN_MAX_ENTRIES", 
                        "range": [
                            1, 
                            255
                        ], 
                        "title": "Max Wi-Fi Scan Result Entries", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Time (in seconds) after which the Wi-Fi provisioning manager will auto-stop after connecting to\na Wi-Fi network successfully.\n", 
                        "id": "WIFI_PROV_AUTOSTOP_TIMEOUT", 
                        "name": "WIFI_PROV_AUTOSTOP_TIMEOUT", 
                        "range": [
                            5, 
                            600
                        ], 
                        "title": "Provisioning auto-stop timeout", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-wi-fi-provisioning-manager", 
                "title": "Wi-Fi Provisioning Manager", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select this option to use MbedTLS crypto API's which utilize hardware acceleration.\n", 
                        "id": "WPA_MBEDTLS_CRYPTO", 
                        "name": "WPA_MBEDTLS_CRYPTO", 
                        "range": null, 
                        "title": "Use MbedTLS crypto API's", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select this to enable TLS v1.2 for WPA2-Enterprise Authentication.\n", 
                        "id": "WPA_TLS_V12", 
                        "name": "WPA_TLS_V12", 
                        "range": null, 
                        "title": "Enable TLS v1.2", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-supplicant", 
                "title": "Supplicant", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Google Cloud project ID\n", 
                        "id": "GIOT_PROJECT_ID", 
                        "name": "GIOT_PROJECT_ID", 
                        "range": null, 
                        "title": "Google Cloud Project ID", 
                        "type": "string"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Google Cloud region\n", 
                        "id": "GIOT_LOCATION", 
                        "name": "GIOT_LOCATION", 
                        "range": null, 
                        "title": "Google Cloud location", 
                        "type": "string"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Google IoT Core registry id\n", 
                        "id": "GIOT_REGISTRY_ID", 
                        "name": "GIOT_REGISTRY_ID", 
                        "range": null, 
                        "title": "Google IoT Core Registry ID", 
                        "type": "string"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Google IoT Core device id\n", 
                        "id": "GIOT_DEVICE_ID", 
                        "name": "GIOT_DEVICE_ID", 
                        "range": null, 
                        "title": "Google IoT Core Device ID", 
                        "type": "string"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select this option to enable debugging support\n", 
                        "id": "GIOT_DEBUG_OUTPUT", 
                        "name": "GIOT_DEBUG_OUTPUT", 
                        "range": null, 
                        "title": "Enable debugging", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-google-iot-core-configuration", 
                "title": "Google IoT Core Configuration", 
                "type": "menu"
            }
        ], 
        "depends_on": null, 
        "id": "component-config", 
        "title": "Component config", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [], 
                "depends_on": null, 
                "help": "Soc, esp32, and driver components, the most common\ncomponents. Some header of these components are included\nimplicitly by headers of other components before IDF v4.0.\nIt's not required for high-level components, but still\nincluded through long header chain everywhere.\n\nThis is harmful to the modularity. So it's changed in IDF\nv4.0.\n\nYou can still include these headers in a legacy way until it\nis totally deprecated by enable this option.\n", 
                "id": "LEGACY_INCLUDE_COMMON_HEADERS", 
                "name": "LEGACY_INCLUDE_COMMON_HEADERS", 
                "range": null, 
                "title": "Include headers accross components as before IDF v4.0", 
                "type": "bool"
            }
        ], 
        "depends_on": null, 
        "id": "compatibility-options", 
        "title": "Compatibility options", 
        "type": "menu"
    }
]